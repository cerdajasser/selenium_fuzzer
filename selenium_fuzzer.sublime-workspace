{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 3607,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAABw8AAAAAAAAAAAAA",
					"GgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					11,
					"left_delete",
					null,
					"CwAAANMAAAAAAAAA0wAAAAAAAAABAAAAZdIAAAAAAAAA0gAAAAAAAAABAAAAbdEAAAAAAAAA0QAAAAAAAAABAAAAYdAAAAAAAAAA0AAAAAAAAAABAAAAbs8AAAAAAAAAzwAAAAAAAAABAAAAcs4AAAAAAAAAzgAAAAAAAAABAAAAZc0AAAAAAAAAzQAAAAAAAAABAAAAc8wAAAAAAAAAzAAAAAAAAAABAAAAdcsAAAAAAAAAywAAAAAAAAABAAAAcsoAAAAAAAAAygAAAAAAAAABAAAAdckAAAAAAAAAyQAAAAAAAAABAAAAbw",
					"GgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUAAAAAAAAANQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAMkAAAAAAAAAygAAAAAAAAAAAAAA",
					"GgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					2,
					"left_delete",
					null,
					"AgAAAMkAAAAAAAAAyQAAAAAAAAABAAAAY8gAAAAAAAAAyAAAAAAAAAABAAAAeQ",
					"GgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADKAAAAAAAAAMoAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "cerdajasser"
					},
					"CwAAAMgAAAAAAAAAyQAAAAAAAAAAAAAAyQAAAAAAAADKAAAAAAAAAAAAAADKAAAAAAAAAMsAAAAAAAAAAAAAAMsAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADNAAAAAAAAAAAAAADNAAAAAAAAAM4AAAAAAAAAAAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA0gAAAAAAAADTAAAAAAAAAAAAAAA",
					"GgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAAAAAAAAAMgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAAHcOAAAAAAAAdw4AAAAAAAAXAAAAeW91ci5lbWFpbEBleGFtcGxlLmNvbS4",
					"GgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACODgAAAAAAAHcOAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "cerdajasser@"
					},
					"DAAAAHcOAAAAAAAAeA4AAAAAAAAAAAAAeA4AAAAAAAB5DgAAAAAAAAAAAAB5DgAAAAAAAHoOAAAAAAAAAAAAAHoOAAAAAAAAew4AAAAAAAAAAAAAew4AAAAAAAB8DgAAAAAAAAAAAAB8DgAAAAAAAH0OAAAAAAAAAAAAAH0OAAAAAAAAfg4AAAAAAAAAAAAAfg4AAAAAAAB/DgAAAAAAAAAAAAB/DgAAAAAAAIAOAAAAAAAAAAAAAIAOAAAAAAAAgQ4AAAAAAAAAAAAAgQ4AAAAAAACCDgAAAAAAAAAAAACCDgAAAAAAAIMOAAAAAAAAAAAAAA",
					"GgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3DgAAAAAAAHcOAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "gmail.com"
					},
					"CQAAAIMOAAAAAAAAhA4AAAAAAAAAAAAAhA4AAAAAAACFDgAAAAAAAAAAAACFDgAAAAAAAIYOAAAAAAAAAAAAAIYOAAAAAAAAhw4AAAAAAAAAAAAAhw4AAAAAAACIDgAAAAAAAAAAAACIDgAAAAAAAIkOAAAAAAAAAAAAAIkOAAAAAAAAig4AAAAAAAAAAAAAig4AAAAAAACLDgAAAAAAAAAAAACLDgAAAAAAAIwOAAAAAAAAAAAAAA",
					"GgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACDDgAAAAAAAIMOAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAEDwAASW5zdGFsbGF0aW9uIGFuZCBVc2FnZSBJbnN0cnVjdGlvbnMgZm9yIFNlbGVuaXVtIEZ1enplcgoKMS4gSW5zdGFsbGF0aW9uIEluc3RydWN0aW9ucwoKU3RlcCAxOiBDbG9uZSB0aGUgUmVwb3NpdG9yeQoKRmlyc3QsIGNsb25lIHRoZSByZXBvc2l0b3J5IHRvIHlvdXIgbG9jYWwgbWFjaGluZToKCiQgZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9jZXJkYWphc3Nlci9zZWxlbml1bV9mdXp6ZXIuZ2l0CiQgY2Qgc2VsZW5pdW1fZnV6emVyCgpTdGVwIDI6IENyZWF0ZSBhIFZpcnR1YWwgRW52aXJvbm1lbnQKCkNyZWF0aW5nIGEgdmlydHVhbCBlbnZpcm9ubWVudCBoZWxwcyB0byBrZWVwIGRlcGVuZGVuY2llcyBpc29sYXRlZDoKCiQgcHl0aG9uMyAtbSB2ZW52IHZlbnYKCkFjdGl2YXRlIHRoZSB2aXJ0dWFsIGVudmlyb25tZW50OgoKT24gTGludXgvbWFjT1M6CgokIHNvdXJjZSB2ZW52L2Jpbi9hY3RpdmF0ZQoKT24gV2luZG93czoKCiQgdmVudlxTY3JpcHRzXGFjdGl2YXRlCgpTdGVwIDM6IEluc3RhbGwgRGVwZW5kZW5jaWVzCgpJbnN0YWxsIHRoZSByZXF1aXJlZCBkZXBlbmRlbmNpZXMgbGlzdGVkIGluIHJlcXVpcmVtZW50cy50eHQ6CgokIHBpcCBpbnN0YWxsIC1yIHJlcXVpcmVtZW50cy50eHQKCk1ha2Ugc3VyZSB5b3UgaGF2ZSB0aGUgY29ycmVjdCB2ZXJzaW9uIG9mIENocm9tZSBpbnN0YWxsZWQgYW5kIHRoYXQgeW91IGhhdmUgZG93bmxvYWRlZCB0aGUgY29tcGF0aWJsZSBjaHJvbWVkcml2ZXIuIEVuc3VyZSB0aGUgY2hyb21lZHJpdmVyIGV4ZWN1dGFibGUgaXMgYXZhaWxhYmxlIGluIHlvdXIgUEFUSCBvciBzcGVjaWZ5IGl0cyBwYXRoIGluIHRoZSBjb25maWd1cmF0aW9uIChjb25maWcucHkpLgoKMi4gQ29uZmlndXJhdGlvbgoKQ2hyb21lRHJpdmVyIFBhdGg6IFNldCB0aGUgQ0hST01FRFJJVkVSX1BBVEggaW4gc2VsZW5pdW1fZnV6emVyL2NvbmZpZy5weSB0byB0aGUgcGF0aCB3aGVyZSB5b3VyIGNocm9tZWRyaXZlciBpcyBsb2NhdGVkLgoKRW52aXJvbm1lbnQgVmFyaWFibGVzOiBPcHRpb25hbGx5LCB5b3UgY2FuIHNldCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZm9yIGNvbmZpZ3VyYXRpb25zLCBsaWtlIExPR19MRVZFTCwgU0VMRU5JVU1fSEVBRExFU1MsIGV0Yy4KCjMuIFJ1bm5pbmcgdGhlIEZ1enplcgoKQWZ0ZXIgY29uZmlndXJpbmcgZXZlcnl0aGluZywgeW91IGNhbiBydW4gdGhlIGZ1enplciB1c2luZyB0aGUgbWFpbiBzY3JpcHQuCgpTdGVwIDE6IFJ1biB0aGUgTWFpbiBTY3JpcHQKClJ1biB0aGUgZnV6emVyIGJ5IGV4ZWN1dGluZyB0aGUgbWFpbi5weSBzY3JpcHQ6CgokIHB5dGhvbiBtYWluLnB5CgpZb3Ugd2lsbCBiZSBwcm9tcHRlZCB0byBlbnRlciB0aGUgVVJMIHRvIGZ1eno6CgpFbnRlciB0aGUgVVJMIHRvIGZ1eno6IGh0dHA6Ly9leGFtcGxlLmNvbQoKVGhlIGZ1enplciB3aWxsIGFuYWx5emUgdGhlIGlucHV0IGZpZWxkcyBvbiB0aGUgcHJvdmlkZWQgVVJMIGFuZCBhbGxvdyB5b3UgdG8gc2VsZWN0IHdoaWNoIGZpZWxkcyB0byBmdXp6LgoKNC4gUnVubmluZyBUZXN0cwoKVG8gdmVyaWZ5IHRoZSBmdW5jdGlvbmFsaXR5IG9mIHRoZSBmdXp6ZXIsIHJ1biB0aGUgdW5pdCB0ZXN0cyBwcm92aWRlZCBpbiB0aGUgdGVzdHMvIGRpcmVjdG9yeToKCiQgcHl0aG9uIC1tIHVuaXR0ZXN0IGRpc2NvdmVyIHRlc3RzCgpUaGlzIGNvbW1hbmQgd2lsbCBydW4gYWxsIHRoZSB1bml0IHRlc3RzIHRvIGVuc3VyZSB0aGF0IHRoZSBkaWZmZXJlbnQgY29tcG9uZW50cyBvZiB0aGUgZnV6emVyIHdvcmsgY29ycmVjdGx5LgoKNS4gVXNhZ2UgT3ZlcnZpZXcKCkludGVyYWN0aXZlIEZ1enppbmc6IFRoZSBmdXp6ZXIgbGlzdHMgYWxsIGF2YWlsYWJsZSBpbnB1dCBmaWVsZHMgd2l0aGluIG1hdC1mb3JtLWZpZWxkIGNvbXBvbmVudHMgb24gdGhlIHByb3ZpZGVkIHdlYiBwYWdlLiBZb3UgY2FuIHRoZW4gc2VsZWN0IHdoaWNoIGZpZWxkIHRvIGZ1enouCgpMb2dnaW5nOiBMb2dzIGFyZSBzYXZlZCBpbiBhIGZpbGUgbmFtZWQgc2VsZW5pdW1fZnV6emVyLmxvZy4gVGhlIGxvZ2dpbmcgbGV2ZWwgY2FuIGJlIGNvbmZpZ3VyZWQgaW4gdGhlIGNvbmZpZy5weSBmaWxlIG9yIGJ5IHNldHRpbmcgYW4gZW52aXJvbm1lbnQgdmFyaWFibGUgKExPR19MRVZFTCkuCgpTY3JlZW5zaG90czogV2hlbiBlcnJvcnMgb2NjdXIgZHVyaW5nIGZ1enppbmcsIHNjcmVlbnNob3RzIGFyZSBzYXZlZCBpbiB0aGUgcHJvamVjdCBkaXJlY3Rvcnkgd2l0aCBmaWxlbmFtZXMgaW5kaWNhdGluZyB0aGUgZXJyb3IuCgo2LiBOb3RlcyBvbiBEZXBlbmRlbmNpZXMKClRoZSBzY3JpcHQgZGVwZW5kcyBvbiBzZWxlbml1bSBmb3Igd2ViIGF1dG9tYXRpb24uIE1ha2Ugc3VyZSB5b3UgaGF2ZSB0aGUgY29ycmVjdCB2ZXJzaW9uIGluc3RhbGxlZC4KClRoZSBwcm9qZWN0IHVzZXMgYSBoZWFkbGVzcyBicm93c2VyIGNvbmZpZ3VyYXRpb24gYnkgZGVmYXVsdCBmb3IgcGVyZm9ybWFuY2UuIElmIHlvdSB3YW50IHRvIHNlZSB0aGUgYnJvd3NlciB3aGlsZSB0aGUgZnV6emVyIHJ1bnMsIHNldCBTRUxFTklVTV9IRUFETEVTUyA9IEZhbHNlIGluIHRoZSBjb25maWd1cmF0aW9uLgoKNy4gRXhhbXBsZSBXb3JrZmxvdwoKQWN0aXZhdGUgVmlydHVhbCBFbnZpcm9ubWVudDoKCiQgc291cmNlIHZlbnYvYmluL2FjdGl2YXRlICAjIE9uIFdpbmRvd3M6IHZlbnZcU2NyaXB0c1xhY3RpdmF0ZQoKUnVuIHRoZSBGdXp6ZXI6CgokIHB5dGhvbiBtYWluLnB5CgpGb2xsb3cgUHJvbXB0czoKCkVudGVyIHRoZSBVUkwgdG8gdGVzdC4KClNlbGVjdCB0aGUgaW5wdXQgZmllbGRzIGZvciBmdXp6aW5nLgoKUmV2aWV3IExvZ3MgYW5kIFNjcmVlbnNob3RzOgoKQ2hlY2sgc2VsZW5pdW1fZnV6emVyLmxvZyBmb3IgZGV0YWlsZWQgbG9ncy4KCkxvb2sgYXQgdGhlIHNjcmVlbnNob3RzIHNhdmVkIGluIHRoZSBkaXJlY3RvcnkgaWYgZXJyb3JzIGFyZSBlbmNvdW50ZXJlZC4KCjguIFRyb3VibGVzaG9vdGluZwoKQ2hyb21lRHJpdmVyIElzc3VlczogRW5zdXJlIHRoYXQgdGhlIHZlcnNpb24gb2YgY2hyb21lZHJpdmVyIG1hdGNoZXMgdGhlIHZlcnNpb24gb2YgQ2hyb21lIHlvdSBoYXZlIGluc3RhbGxlZC4KCkVsZW1lbnQgTm90IEZvdW5kOiBJZiBpbnB1dCBmaWVsZHMgYXJlIG5vdCBmb3VuZCwgZW5zdXJlIHRoYXQgdGhlIHdlYnBhZ2UgaXMgZnVsbHkgbG9hZGVkIGFuZCB2aXNpYmxlIGVsZW1lbnRzIGFyZSBwcmVzZW50LgoKVmlydHVhbCBFbnZpcm9ubWVudCBJc3N1ZXM6IE1ha2Ugc3VyZSB5b3UgaGF2ZSBhY3RpdmF0ZWQgdGhlIHZpcnR1YWwgZW52aXJvbm1lbnQgYmVmb3JlIHJ1bm5pbmcgdGhlIHNjcmlwdC4KCjkuIFVuaW5zdGFsbGluZwoKVG8gdW5pbnN0YWxsIHRoZSBwcm9qZWN0LCBzaW1wbHkgZGVhY3RpdmF0ZSB0aGUgdmlydHVhbCBlbnZpcm9ubWVudCBhbmQgcmVtb3ZlIHRoZSBwcm9qZWN0IGZvbGRlcjoKCiQgZGVhY3RpdmF0ZSAgIyBEZWFjdGl2YXRlIHRoZSB2aXJ0dWFsIGVudmlyb25tZW50CiQgY2QgLi4KJCBybSAtcmYgc2VsZW5pdW1fZnV6emVyICAjIERlbGV0ZSB0aGUgcHJvamVjdCBmb2xkZXIKCjEwLiBDb250YWN0CgpGb3IgYW55IGlzc3VlcyBvciBxdWVzdGlvbnMsIGZlZWwgZnJlZSB0byBjcmVhdGUgYW4gaXNzdWUgb24gdGhlIEdpdEh1YiByZXBvc2l0b3J5IG9yIGNvbnRhY3QgdGhlIGF1dGhvciB2aWEgZW1haWw6IGNlcmRhamFzc2VyQGdtYWlsLmNvbQoKSGFwcHkgZnV6emluZyEgRW5zdXJlIHlvdSBvbmx5IHRlc3Qgb24gd2Vic2l0ZXMgeW91IGhhdmUgcGVybWlzc2lvbiB0byB0ZXN0LCBhcyB1bmF1dGhvcml6ZWQgdGVzdGluZyBtYXkgYmUgaWxsZWdhbC4KCg",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAEDwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAzhEAAAAAAAAAAAAA",
					"GQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAADOEQAAKipJbnN0YWxsYXRpb24gYW5kIFVzYWdlIEluc3RydWN0aW9ucyBmb3IgU2VsZW5pdW0gRnV6emVyKioKCi0tLQoKIyMjICoqMS4gSW5zdGFsbGF0aW9uIEluc3RydWN0aW9ucyoqCgojIyMjICoqU3RlcCAxOiBDbG9uZSB0aGUgUmVwb3NpdG9yeSoqCgpGaXJzdCwgY2xvbmUgdGhlIHJlcG9zaXRvcnkgdG8geW91ciBsb2NhbCBtYWNoaW5lOgoKYGBgYmFzaAokIGdpdCBjbG9uZSBodHRwczovL2dpdGh1Yi5jb20vY2VyZGFqYXNzZXIvc2VsZW5pdW1fZnV6emVyLmdpdAokIGNkIHNlbGVuaXVtX2Z1enplcgpgYGAKCiMjIyMgKipTdGVwIDI6IENyZWF0ZSBhIFZpcnR1YWwgRW52aXJvbm1lbnQqKgoKQ3JlYXRpbmcgYSB2aXJ0dWFsIGVudmlyb25tZW50IGhlbHBzIHRvIGtlZXAgZGVwZW5kZW5jaWVzIGlzb2xhdGVkOgoKYGBgYmFzaAokIHB5dGhvbjMgLW0gdmVudiB2ZW52CmBgYAoKQWN0aXZhdGUgdGhlIHZpcnR1YWwgZW52aXJvbm1lbnQ6CgotIE9uIExpbnV4L21hY09TOgogIAogIGBgYGJhc2gKICAkIHNvdXJjZSB2ZW52L2Jpbi9hY3RpdmF0ZQogIGBgYAoKLSBPbiBXaW5kb3dzOgoKICBgYGBiYXNoCiAgJCB2ZW52XFNjcmlwdHNcYWN0aXZhdGUKICBgYGAKCiMjIyMgKipTdGVwIDM6IEluc3RhbGwgRGVwZW5kZW5jaWVzKioKCkluc3RhbGwgdGhlIHJlcXVpcmVkIGRlcGVuZGVuY2llcyBsaXN0ZWQgaW4gYHJlcXVpcmVtZW50cy50eHRgOgoKYGBgYmFzaAokIHBpcCBpbnN0YWxsIC1yIHJlcXVpcmVtZW50cy50eHQKYGBgCgpNYWtlIHN1cmUgeW91IGhhdmUgdGhlIGNvcnJlY3QgdmVyc2lvbiBvZiBDaHJvbWUgaW5zdGFsbGVkIGFuZCB0aGF0IHlvdSBoYXZlIGRvd25sb2FkZWQgdGhlIGNvbXBhdGlibGUgYGNocm9tZWRyaXZlcmAuIEVuc3VyZSB0aGUgYGNocm9tZWRyaXZlcmAgZXhlY3V0YWJsZSBpcyBhdmFpbGFibGUgaW4geW91ciBgUEFUSGAgb3Igc3BlY2lmeSBpdHMgcGF0aCBpbiB0aGUgY29uZmlndXJhdGlvbiAoYGNvbmZpZy5weWApLgoKIyMjICoqMi4gQ29uZmlndXJhdGlvbioqCgotICoqQ2hyb21lRHJpdmVyIFBhdGgqKjogU2V0IHRoZSBgQ0hST01FRFJJVkVSX1BBVEhgIGluIGBzZWxlbml1bV9mdXp6ZXIvY29uZmlnLnB5YCB0byB0aGUgcGF0aCB3aGVyZSB5b3VyIGBjaHJvbWVkcml2ZXJgIGlzIGxvY2F0ZWQuCi0gKipFbnZpcm9ubWVudCBWYXJpYWJsZXMqKjogT3B0aW9uYWxseSwgeW91IGNhbiBzZXQgZW52aXJvbm1lbnQgdmFyaWFibGVzIGZvciBjb25maWd1cmF0aW9ucywgbGlrZSBgTE9HX0xFVkVMYCwgYFNFTEVOSVVNX0hFQURMRVNTYCwgZXRjLgoKIyMjICoqMy4gUnVubmluZyB0aGUgRnV6emVyKioKCkFmdGVyIGNvbmZpZ3VyaW5nIGV2ZXJ5dGhpbmcsIHlvdSBjYW4gcnVuIHRoZSBmdXp6ZXIgdXNpbmcgdGhlIG1haW4gc2NyaXB0LgoKIyMjIyAqKlN0ZXAgMTogUnVuIHRoZSBNYWluIFNjcmlwdCoqCgpSdW4gdGhlIGZ1enplciBieSBleGVjdXRpbmcgdGhlIGBtYWluLnB5YCBzY3JpcHQ6CgpgYGBiYXNoCiQgcHl0aG9uIG1haW4ucHkKYGBgCgpZb3Ugd2lsbCBiZSBwcm9tcHRlZCB0byBlbnRlciB0aGUgVVJMIHRvIGZ1eno6CgpgYGBwbGFpbnRleHQKRW50ZXIgdGhlIFVSTCB0byBmdXp6OiBodHRwOi8vZXhhbXBsZS5jb20KYGBgCgpUaGUgZnV6emVyIHdpbGwgYW5hbHl6ZSB0aGUgaW5wdXQgZmllbGRzIG9uIHRoZSBwcm92aWRlZCBVUkwgYW5kIGFsbG93IHlvdSB0byBzZWxlY3Qgd2hpY2ggZmllbGRzIHRvIGZ1enouCgojIyMgKio0LiBSdW5uaW5nIFRlc3RzKioKClRvIHZlcmlmeSB0aGUgZnVuY3Rpb25hbGl0eSBvZiB0aGUgZnV6emVyLCBydW4gdGhlIHVuaXQgdGVzdHMgcHJvdmlkZWQgaW4gdGhlIGB0ZXN0cy9gIGRpcmVjdG9yeToKCmBgYGJhc2gKJCBweXRob24gLW0gdW5pdHRlc3QgZGlzY292ZXIgdGVzdHMKYGBgCgpUaGlzIGNvbW1hbmQgd2lsbCBydW4gYWxsIHRoZSB1bml0IHRlc3RzIHRvIGVuc3VyZSB0aGF0IHRoZSBkaWZmZXJlbnQgY29tcG9uZW50cyBvZiB0aGUgZnV6emVyIHdvcmsgY29ycmVjdGx5LgoKIyMjICoqNS4gVXNhZ2UgT3ZlcnZpZXcqKgoKLSAqKkludGVyYWN0aXZlIEZ1enppbmcqKjogVGhlIGZ1enplciBsaXN0cyBhbGwgYXZhaWxhYmxlIGlucHV0IGZpZWxkcyB3aXRoaW4gYG1hdC1mb3JtLWZpZWxkYCBjb21wb25lbnRzIG9uIHRoZSBwcm92aWRlZCB3ZWIgcGFnZS4gWW91IGNhbiB0aGVuIHNlbGVjdCB3aGljaCBmaWVsZCB0byBmdXp6LgotICoqQ2xpY2thYmxlIEVsZW1lbnQgVGVzdGluZyoqOiBBZnRlciBmdXp6aW5nIGlucHV0IGZpZWxkcywgdGhlIGZ1enplciB3aWxsIHByb2NlZWQgdG8gY2xpY2sgb24gZGV0ZWN0ZWQgY2xpY2thYmxlIGVsZW1lbnRzIChlLmcuLCBidXR0b25zLCBsaW5rcykgYW5kIGFuYWx5emUgdGhlIHBhZ2UgZm9yIGVycm9ycy4KLSAqKkxvZ2dpbmcqKjogTG9ncyBhcmUgc2F2ZWQgaW4gYSBmaWxlIG5hbWVkIGBzZWxlbml1bV9mdXp6ZXIubG9nYC4gVGhlIGxvZ2dpbmcgbGV2ZWwgY2FuIGJlIGNvbmZpZ3VyZWQgaW4gdGhlIGBjb25maWcucHlgIGZpbGUgb3IgYnkgc2V0dGluZyBhbiBlbnZpcm9ubWVudCB2YXJpYWJsZSAoYExPR19MRVZFTGApLgotICoqU2NyZWVuc2hvdHMqKjogV2hlbiBlcnJvcnMgb2NjdXIgZHVyaW5nIGZ1enppbmcgb3IgY2xpY2tpbmcgYWN0aW9ucywgc2NyZWVuc2hvdHMgYXJlIHNhdmVkIGluIHRoZSBwcm9qZWN0IGRpcmVjdG9yeSB3aXRoIGZpbGVuYW1lcyBpbmRpY2F0aW5nIHRoZSBlcnJvci4KCiMjIyAqKjYuIE5vdGVzIG9uIERlcGVuZGVuY2llcyoqCgotIFRoZSBzY3JpcHQgZGVwZW5kcyBvbiBgc2VsZW5pdW1gIGZvciB3ZWIgYXV0b21hdGlvbi4gTWFrZSBzdXJlIHlvdSBoYXZlIHRoZSBjb3JyZWN0IHZlcnNpb24gaW5zdGFsbGVkLgotIFRoZSBwcm9qZWN0IHVzZXMgYSBoZWFkbGVzcyBicm93c2VyIGNvbmZpZ3VyYXRpb24gYnkgZGVmYXVsdCBmb3IgcGVyZm9ybWFuY2UuIElmIHlvdSB3YW50IHRvIHNlZSB0aGUgYnJvd3NlciB3aGlsZSB0aGUgZnV6emVyIHJ1bnMsIHNldCBgU0VMRU5JVU1fSEVBRExFU1MgPSBGYWxzZWAgaW4gdGhlIGNvbmZpZ3VyYXRpb24uCgojIyMgKio3LiBFeGFtcGxlIFdvcmtmbG93KioKCjEuICoqQWN0aXZhdGUgVmlydHVhbCBFbnZpcm9ubWVudCoqOgoKICAgYGBgYmFzaAogICAkIHNvdXJjZSB2ZW52L2Jpbi9hY3RpdmF0ZSAgIyBPbiBXaW5kb3dzOiB2ZW52XFNjcmlwdHNcYWN0aXZhdGUKICAgYGBgCgoyLiAqKlJ1biB0aGUgRnV6emVyKio6CgogICBgYGBiYXNoCiAgICQgcHl0aG9uIG1haW4ucHkKICAgYGBgCgozLiAqKkZvbGxvdyBQcm9tcHRzKio6CgogICAtIEVudGVyIHRoZSBVUkwgdG8gdGVzdC4KICAgLSBTZWxlY3QgdGhlIGlucHV0IGZpZWxkcyBmb3IgZnV6emluZy4KICAgLSBPYnNlcnZlIHRoZSBjbGlja2FibGUgZWxlbWVudHMgYmVpbmcgdGVzdGVkLgoKNC4gKipSZXZpZXcgTG9ncyBhbmQgU2NyZWVuc2hvdHMqKjoKCiAgIC0gQ2hlY2sgYHNlbGVuaXVtX2Z1enplci5sb2dgIGZvciBkZXRhaWxlZCBsb2dzLgogICAtIExvb2sgYXQgdGhlIHNjcmVlbnNob3RzIHNhdmVkIGluIHRoZSBkaXJlY3RvcnkgaWYgZXJyb3JzIGFyZSBlbmNvdW50ZXJlZC4KCiMjIyAqKjguIFRyb3VibGVzaG9vdGluZyoqCgotICoqQ2hyb21lRHJpdmVyIElzc3VlcyoqOiBFbnN1cmUgdGhhdCB0aGUgdmVyc2lvbiBvZiBgY2hyb21lZHJpdmVyYCBtYXRjaGVzIHRoZSB2ZXJzaW9uIG9mIENocm9tZSB5b3UgaGF2ZSBpbnN0YWxsZWQuCi0gKipFbGVtZW50IE5vdCBGb3VuZCoqOiBJZiBpbnB1dCBmaWVsZHMgb3IgY2xpY2thYmxlIGVsZW1lbnRzIGFyZSBub3QgZm91bmQsIGVuc3VyZSB0aGF0IHRoZSB3ZWJwYWdlIGlzIGZ1bGx5IGxvYWRlZCBhbmQgdmlzaWJsZSBlbGVtZW50cyBhcmUgcHJlc2VudC4KLSAqKlZpcnR1YWwgRW52aXJvbm1lbnQgSXNzdWVzKio6IE1ha2Ugc3VyZSB5b3UgaGF2ZSBhY3RpdmF0ZWQgdGhlIHZpcnR1YWwgZW52aXJvbm1lbnQgYmVmb3JlIHJ1bm5pbmcgdGhlIHNjcmlwdC4KCiMjIyAqKjkuIFVuaW5zdGFsbGluZyoqCgpUbyB1bmluc3RhbGwgdGhlIHByb2plY3QsIHNpbXBseSBkZWFjdGl2YXRlIHRoZSB2aXJ0dWFsIGVudmlyb25tZW50IGFuZCByZW1vdmUgdGhlIHByb2plY3QgZm9sZGVyOgoKYGBgYmFzaAokIGRlYWN0aXZhdGUgICMgRGVhY3RpdmF0ZSB0aGUgdmlydHVhbCBlbnZpcm9ubWVudAokIGNkIC4uCiQgcm0gLXJmIHNlbGVuaXVtX2Z1enplciAgIyBEZWxldGUgdGhlIHByb2plY3QgZm9sZGVyCmBgYAoKIyMjICoqMTAuIENvbnRhY3QqKgoKRm9yIGFueSBpc3N1ZXMgb3IgcXVlc3Rpb25zLCBmZWVsIGZyZWUgdG8gY3JlYXRlIGFuIGlzc3VlIG9uIHRoZSBHaXRIdWIgcmVwb3NpdG9yeSBvciBjb250YWN0IHRoZSBhdXRob3IgdmlhIGVtYWlsOiB5b3VyLmVtYWlsQGV4YW1wbGUuY29tLgoKLS0tCgoqKkhhcHB5IGZ1enppbmchKiogRW5zdXJlIHlvdSBvbmx5IHRlc3Qgb24gd2Vic2l0ZXMgeW91IGhhdmUgcGVybWlzc2lvbiB0byB0ZXN0LCBhcyB1bmF1dGhvcml6ZWQgdGVzdGluZyBtYXkgYmUgaWxsZWdhbC4KCg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAM4RAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAFw4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "LICENSE",
			"settings":
			{
				"buffer_size": 1553,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAALgQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAuBAAATUlUIExpY2Vuc2UKCkNvcHlyaWdodCAoYykgMjAyNCBKYXNzZXIgQ2VyZGEKClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkKb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwKaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cwp0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsCmNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcwpmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgoKVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsCmNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCgpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgpJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFCkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIKTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwKT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUKU09GVFdBUkUuCgo",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAC4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAEQYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "CONTRIBUTING.md",
			"settings":
			{
				"buffer_size": 2041,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "# Contributing to Selenium Fuzzer"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "z"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAeg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "CONTR"
					},
					"BQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "IBUTING"
					},
					"BwAAAAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAADAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": ".md"
					},
					"AwAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQ09OVFJJQlVUSU5HLm1kCg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"paste",
					{
						"event":
						{
							"modifier_keys":
							{
							},
							"text_point": 0,
							"x": 454.09375,
							"y": 62.671875
						}
					},
					"AQAAAAAAAAAAAAAADwAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"",
					null,
					"AQAAAA8AAAAAAAAACAgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAQ09OVFJJQlVUSU5HLm1k",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "setup.py",
			"settings":
			{
				"buffer_size": 667,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAmgIAAAAAAAAAAAAA",
					"GwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					9,
					"left_delete",
					null,
					"CQAAAHkAAAAAAAAAeQAAAAAAAAABAAAAZXgAAAAAAAAAeAAAAAAAAAABAAAAbXcAAAAAAAAAdwAAAAAAAAABAAAAYXYAAAAAAAAAdgAAAAAAAAABAAAATnUAAAAAAAAAdQAAAAAAAAABAAAAIHQAAAAAAAAAdAAAAAAAAAABAAAAcnMAAAAAAAAAcwAAAAAAAAABAAAAdXIAAAAAAAAAcgAAAAAAAAABAAAAb3EAAAAAAAAAcQAAAAAAAAABAAAAWQ",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoAAAAAAAAAegAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "Jasser"
					},
					"BgAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAABzAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAdQAAAAAAAAAAAAAAdQAAAAAAAAB2AAAAAAAAAAAAAAB2AAAAAAAAAHcAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEAAAAAAAAAcQAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " Cerda"
					},
					"BgAAAHcAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB5AAAAAAAAAAAAAAB5AAAAAAAAAHoAAAAAAAAAAAAAAHoAAAAAAAAAewAAAAAAAAAAAAAAewAAAAAAAAB8AAAAAAAAAAAAAAB8AAAAAAAAAH0AAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcAAAAAAAAAdwAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					2,
					"left_delete",
					null,
					"AgAAAJMAAAAAAAAAkwAAAAAAAAAVAAAAb3VyLmVtYWlsQGV4YW1wbGUuY29tkgAAAAAAAACSAAAAAAAAAAEAAAB5",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKgAAAAAAAAAkwAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "cerdajasser@"
					},
					"DAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAACXAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIAAAAAAAAAkgAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "gmail.com"
					},
					"CQAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4AAAAAAAAAngAAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					12,
					"left_delete",
					null,
					"DAAAAJEBAAAAAAAAkQEAAAAAAAABAAAAZZABAAAAAAAAkAEAAAAAAAABAAAAbY8BAAAAAAAAjwEAAAAAAAABAAAAYY4BAAAAAAAAjgEAAAAAAAABAAAAbo0BAAAAAAAAjQEAAAAAAAABAAAAcowBAAAAAAAAjAEAAAAAAAABAAAAZYsBAAAAAAAAiwEAAAAAAAABAAAAc4oBAAAAAAAAigEAAAAAAAABAAAAdYkBAAAAAAAAiQEAAAAAAAABAAAAcogBAAAAAAAAiAEAAAAAAAABAAAAdYcBAAAAAAAAhwEAAAAAAAABAAAAb4YBAAAAAAAAhgEAAAAAAAABAAAAeQ",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIBAAAAAAAAkgEAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "cerdajasser"
					},
					"CwAAAIYBAAAAAAAAhwEAAAAAAAAAAAAAhwEAAAAAAACIAQAAAAAAAAAAAACIAQAAAAAAAIkBAAAAAAAAAAAAAIkBAAAAAAAAigEAAAAAAAAAAAAAigEAAAAAAACLAQAAAAAAAAAAAACLAQAAAAAAAIwBAAAAAAAAAAAAAIwBAAAAAAAAjQEAAAAAAAAAAAAAjQEAAAAAAACOAQAAAAAAAAAAAACOAQAAAAAAAI8BAAAAAAAAAAAAAI8BAAAAAAAAkAEAAAAAAAAAAAAAkAEAAAAAAACRAQAAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYBAAAAAAAAhgEAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAF0AAAAAAAAAXQAAAAAAAAABAAAAMQ",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAAAAAAAAAF4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAF0AAAAAAAAAXgAAAAAAAAAAAAAA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdAAAAAAAAAF0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAGEAAAAAAAAAYQAAAAAAAAABAAAAMA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiAAAAAAAAAGIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAGEAAAAAAAAAYgAAAAAAAAAAAAAA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAAAAAAAAAGEAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "requirements.txt",
			"settings":
			{
				"buffer_size": 17,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAEQAAAAAAAAAAAAAA",
					"GwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "main.py",
			"settings":
			{
				"buffer_size": 7085,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "from selenium_fuzzer.fuzzer import Fuzzer"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAqRkAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAqRkAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAmRkAAAAAAAAAAAAA",
					"DAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"",
					null,
					"",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAJkZAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAJkZAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAmRkAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAACZGQAAaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IGFyZ3BhcnNlCmZyb20gc2VsZW5pdW0gaW1wb3J0IHdlYmRyaXZlcgpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24uYnkgaW1wb3J0IEJ5CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQudWkgaW1wb3J0IFdlYkRyaXZlcldhaXQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydC51aSBpbXBvcnQgU2VsZWN0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQgaW1wb3J0IGV4cGVjdGVkX2NvbmRpdGlvbnMgYXMgRUMKZnJvbSBzZWxlbml1bV9mdXp6ZXIuZnV6emVyIGltcG9ydCBGdXp6ZXIKZnJvbSBzZWxlbml1bV9mdXp6ZXIudXRpbHMgaW1wb3J0IGdlbmVyYXRlX3NhZmVfcGF5bG9hZHMKZnJvbSBzZWxlbml1bV9mdXp6ZXIuY29uZmlnIGltcG9ydCBDb25maWcKZnJvbSBzZWxlbml1bV9mdXp6ZXIuanNfY2hhbmdlX2RldGVjdG9yIGltcG9ydCBKYXZhU2NyaXB0Q2hhbmdlRGV0ZWN0b3IKaW1wb3J0IHRpbWUKCmRlZiBtYWluKCk6CiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihkZXNjcmlwdGlvbj0iUnVuIFNlbGVuaXVtIEZ1enplciBvbiBhIHRhcmdldCBVUkwuIikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoInVybCIsIGhlbHA9IlRoZSBVUkwgdG8gcnVuIHRoZSBmdXp6ZXIgYWdhaW5zdC4iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1oZWFkbGVzcyIsIGFjdGlvbj0ic3RvcmVfdHJ1ZSIsIGhlbHA9IlJ1biBDaHJvbWUgaW4gaGVhZGxlc3MgbW9kZS4iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1kZWxheSIsIHR5cGU9aW50LCBkZWZhdWx0PTEsIGhlbHA9IkRlbGF5IGJldHdlZW4gZnV6emluZyBhdHRlbXB0cyBpbiBzZWNvbmRzLiIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLWZ1enotZmllbGRzIiwgYWN0aW9uPSJzdG9yZV90cnVlIiwgaGVscD0iRnV6eiBpbnB1dCBmaWVsZHMgb24gdGhlIHBhZ2UuIikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tY2hlY2stZHJvcGRvd25zIiwgYWN0aW9uPSJzdG9yZV90cnVlIiwgaGVscD0iQ2hlY2sgZHJvcGRvd24gbWVudXMgb24gdGhlIHBhZ2UuIikKICAgIGFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpCgogICAgIyBTZXQgdXAgbG9nZ2luZwogICAgbG9nZ2luZy5iYXNpY0NvbmZpZyhsZXZlbD1Db25maWcuTE9HX0xFVkVMLCBmaWxlbmFtZT1Db25maWcuTE9HX0ZJTEUsIAogICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQ9JyUoYXNjdGltZSlzIC0gJShuYW1lKXMgLSAlKGxldmVsbmFtZSlzIC0gJShtZXNzYWdlKXMnKQogICAgbG9nZ2VyID0gbG9nZ2luZy5nZXRMb2dnZXIoX19uYW1lX18pCgogICAgIyBTZXQgdXAgQ2hyb21lIG9wdGlvbnMKICAgIGNocm9tZV9vcHRpb25zID0gd2ViZHJpdmVyLkNocm9tZU9wdGlvbnMoKQogICAgaWYgYXJncy5oZWFkbGVzczoKICAgICAgICBjaHJvbWVfb3B0aW9ucy5hZGRfYXJndW1lbnQoIi0taGVhZGxlc3MiKQoKICAgICMgSW5pdGlhbGl6ZSB0aGUgV2ViRHJpdmVyCiAgICBkcml2ZXIgPSB3ZWJkcml2ZXIuQ2hyb21lKHNlcnZpY2U9d2ViZHJpdmVyLmNocm9tZS5zZXJ2aWNlLlNlcnZpY2UoQ29uZmlnLkNIUk9NRURSSVZFUl9QQVRIKSwgb3B0aW9ucz1jaHJvbWVfb3B0aW9ucykKCiAgICBqc19jaGFuZ2VfZGV0ZWN0b3IgPSBKYXZhU2NyaXB0Q2hhbmdlRGV0ZWN0b3IoZHJpdmVyKQoKICAgIHRyeToKICAgICAgICBkcml2ZXIuZ2V0KGFyZ3MudXJsKQogICAgICAgIGxvZ2dlci5pbmZvKGYiQWNjZXNzaW5nIFVSTDoge2FyZ3MudXJsfSIpCgogICAgICAgIGZ1enplciA9IEZ1enplcihkcml2ZXIpCgogICAgICAgIGlmIGFyZ3MuZnV6el9maWVsZHM6CiAgICAgICAgICAgICMgUHJvbXB0IHRoZSB1c2VyIHRvIHNlbGVjdCBmaWVsZHMgdG8gZnV6egogICAgICAgICAgICBpbnB1dF9maWVsZHMgPSBmdXp6ZXIuZGV0ZWN0X2lucHV0cygpCiAgICAgICAgICAgIGlmIG5vdCBpbnB1dF9maWVsZHM6CiAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZygiTm8gaW5wdXQgZmllbGRzIGRldGVjdGVkIG9uIHRoZSBwYWdlLiIpCiAgICAgICAgICAgICAgICByZXR1cm4KCiAgICAgICAgICAgIHByaW50KCJEZXRlY3RlZCBpbnB1dCBmaWVsZHM6IikKICAgICAgICAgICAgZm9yIGlkeCwgZmllbGQgaW4gZW51bWVyYXRlKGlucHV0X2ZpZWxkcyk6CiAgICAgICAgICAgICAgICBmaWVsZF90eXBlID0gZmllbGQuZ2V0X2F0dHJpYnV0ZSgidHlwZSIpIG9yICJ1bmtub3duIgogICAgICAgICAgICAgICAgZmllbGRfbmFtZSA9IGZpZWxkLmdldF9hdHRyaWJ1dGUoIm5hbWUiKSBvciAiVW5uYW1lZCIKICAgICAgICAgICAgICAgIHByaW50KGYie2lkeH06IHtmaWVsZF9uYW1lfSAodHlwZToge2ZpZWxkX3R5cGV9KSIpCgogICAgICAgICAgICBzZWxlY3RlZF9pbmRpY2VzID0gaW5wdXQoIkVudGVyIHRoZSBpbmRpY2VzIG9mIHRoZSBmaWVsZHMgdG8gZnV6eiAoY29tbWEtc2VwYXJhdGVkKTogIikKICAgICAgICAgICAgc2VsZWN0ZWRfaW5kaWNlcyA9IFtpbnQoaWR4LnN0cmlwKCkpIGZvciBpZHggaW4gc2VsZWN0ZWRfaW5kaWNlcy5zcGxpdCgiLCIpIGlmIGlkeC5zdHJpcCgpLmlzZGlnaXQoKV0KCiAgICAgICAgICAgIHBheWxvYWRzID0gZ2VuZXJhdGVfc2FmZV9wYXlsb2FkcygpCiAgICAgICAgICAgIGZvciBpZHggaW4gc2VsZWN0ZWRfaW5kaWNlczoKICAgICAgICAgICAgICAgIGlmIDAgPD0gaWR4IDwgbGVuKGlucHV0X2ZpZWxkcyk6CiAgICAgICAgICAgICAgICAgICAgZmllbGQgPSBpbnB1dF9maWVsZHNbaWR4XQogICAgICAgICAgICAgICAgICAgIGZvciBwYXlsb2FkIGluIHBheWxvYWRzOgogICAgICAgICAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZC5jbGVhcigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZC5zZW5kX2tleXMocGF5bG9hZCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkLnNlbmRfa2V5cyhLZXlzLlRBQikgICMgVHJpZ2dlciBwb3RlbnRpYWwgSmF2YVNjcmlwdCBldmVudHMgYWZ0ZXIgaW5wdXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkLnNlbmRfa2V5cyhLZXlzLkVOVEVSKSAgIyBFeHBsaWNpdGx5IGhpdCBlbnRlciBhZnRlciB0YWJiaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhmIkluc2VydGVkIHBheWxvYWQgJ3twYXlsb2FkfScgaW50byBmaWVsZCB7aWR4fS4iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcChhcmdzLmRlbGF5KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBWYWxpZGF0ZSB0aGF0IHRoZSBwYXlsb2FkIHdhcyBzdWNjZXNzZnVsbHkgZW50ZXJlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50ZXJlZF92YWx1ZSA9IGZpZWxkLmdldF9hdHRyaWJ1dGUoInZhbHVlIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGVudGVyZWRfdmFsdWUgPT0gcGF5bG9hZDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhmIlBheWxvYWQgJ3twYXlsb2FkfScgc3VjY2Vzc2Z1bGx5IGVudGVyZWQgaW50byBmaWVsZCB7aWR4fS4iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZyhmIlBheWxvYWQgJ3twYXlsb2FkfScgY291bGQgbm90IGJlIHZlcmlmaWVkIGluIGZpZWxkIHtpZHh9LiBFbnRlcmVkIHZhbHVlOiAne2VudGVyZWRfdmFsdWV9JyIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIENoZWNrIGZvciBKYXZhU2NyaXB0IGNoYW5nZXMgYWZ0ZXIgaW5wdXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpzX2NoYW5nZV9kZXRlY3Rvci5jaGVja19mb3JfanNfY2hhbmdlcygpCiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihmIkVycm9yIGluc2VydGluZyBwYXlsb2FkIGludG8gZmllbGQge2lkeH06IHtlfSIpCgogICAgICAgICAgICAjIFN1Ym1pdCB0aGUgZm9ybSBleHBsaWNpdGx5CiAgICAgICAgICAgIGZvciBmb3JtIGluIGRyaXZlci5maW5kX2VsZW1lbnRzKEJ5LlRBR19OQU1FLCAiZm9ybSIpOgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIHN1Ym1pdF9idXR0b24gPSBmb3JtLmZpbmRfZWxlbWVudChCeS5YUEFUSCwgIi8vaW5wdXRbQHR5cGU9J3N1Ym1pdCddIHwgLy9idXR0b25bQHR5cGU9J3N1Ym1pdCddIikKICAgICAgICAgICAgICAgICAgICBzdWJtaXRfYnV0dG9uLmNsaWNrKCkKICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbygiQ2xpY2tlZCBzdWJtaXQgYnV0dG9uIHRvIHN1Ym1pdCBmb3JtLiIpCiAgICAgICAgICAgICAgICBleGNlcHQgTm9TdWNoRWxlbWVudEV4Y2VwdGlvbjoKICAgICAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgICAgICMgSWYgbm8gc3VibWl0IGJ1dHRvbiwgdHJ5IHNlbmRpbmcgRU5URVIga2V5IHRvIGFueSBpbnB1dCBmaWVsZCBpbiB0aGUgZm9ybQogICAgICAgICAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50ID0gZm9ybS5maW5kX2VsZW1lbnQoQnkuWFBBVEgsICIuLy9pbnB1dCIpCiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQuc2VuZF9rZXlzKEtleXMuRU5URVIpCiAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKCJTZW50IEVOVEVSIGtleSB0byBpbnB1dCBlbGVtZW50IHRvIHN1Ym1pdCBmb3JtLiIpCiAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZXJyb3IoZiJFcnJvciBzdWJtaXR0aW5nIGZvcm0gYnkgc2VuZGluZyBFTlRFUiBrZXk6IHtlfSIpCiAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGYiRXJyb3IgY2xpY2tpbmcgc3VibWl0IGJ1dHRvbjoge2V9IikKICAgICAgICAgICAgICAgICMgQ2hlY2sgZm9yIEphdmFTY3JpcHQgY2hhbmdlcyBhZnRlciBmb3JtIHN1Ym1pc3Npb24KICAgICAgICAgICAgICAgIGpzX2NoYW5nZV9kZXRlY3Rvci5jaGVja19mb3JfanNfY2hhbmdlcygpCgogICAgICAgIGlmIGFyZ3MuY2hlY2tfZHJvcGRvd25zOgogICAgICAgICAgICAjIEZpbmQgYWxsIGRyb3Bkb3duIG1lbnVzIChzZWxlY3QgZWxlbWVudHMpCiAgICAgICAgICAgIGRyb3Bkb3ducyA9IGRyaXZlci5maW5kX2VsZW1lbnRzKEJ5LlRBR19OQU1FLCAic2VsZWN0IikKICAgICAgICAgICAgaWYgbm90IGRyb3Bkb3duczoKICAgICAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKCJObyBkcm9wZG93biBtZW51cyBkZXRlY3RlZCBvbiB0aGUgcGFnZS4iKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgZm9yIGlkeCwgZHJvcGRvd24gaW4gZW51bWVyYXRlKGRyb3Bkb3ducyk6CiAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3QgPSBTZWxlY3QoZHJvcGRvd24pCiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMgPSBzZWxlY3Qub3B0aW9ucwogICAgICAgICAgICAgICAgICAgICAgICBmb3Igb3B0aW9uIGluIG9wdGlvbnM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Quc2VsZWN0X2J5X3Zpc2libGVfdGV4dChvcHRpb24udGV4dCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKGYiU2VsZWN0ZWQgb3B0aW9uICd7b3B0aW9uLnRleHR9JyBmcm9tIGRyb3Bkb3duIHtpZHh9LiIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKGFyZ3MuZGVsYXkpICAjIFdhaXQgZm9yIHBvdGVudGlhbCBKYXZhU2NyaXB0IHVwZGF0ZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgQ2hlY2sgZm9yIEphdmFTY3JpcHQgY2hhbmdlcyBvciBlcnJvcnMgb24gdGhlIHBhZ2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpzX2NoYW5nZV9kZXRlY3Rvci5jaGVja19mb3JfanNfY2hhbmdlcygpCiAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZXJyb3IoZiJFcnJvciBpbnRlcmFjdGluZyB3aXRoIGRyb3Bkb3duIHtpZHh9OiB7ZX0iKQoKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBsb2dnZXIuZXJyb3IoZiJBbiBlcnJvciBvY2N1cnJlZDoge2V9IikKICAgIGZpbmFsbHk6CiAgICAgICAgaW5wdXQoIlByZXNzIEVudGVyIHRvIGNsb3NlIHRoZSBicm93c2VyLi4uIikgICMgS2VlcCB0aGUgYnJvd3NlciBvcGVuIHVudGlsIHVzZXIgaW5wdXQKICAgICAgICBkcml2ZXIucXVpdCgpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigpCg",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAJkZAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAFxoAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAABcaAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAABBgAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAQYAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAABBgAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					3,
					"left_delete",
					null,
					"AwAAAKkBAAAAAAAAqQEAAAAAAAABAAAAI6gBAAAAAAAAqAEAAAAAAAABAAAAI6cBAAAAAAAApwEAAAAAAAABAAAAIw",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoBAAAAAAAAqgEAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAABBgAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAPxgAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKYBAAAAAAAApwEAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYBAAAAAAAApgEAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"",
					null,
					"AQAAAKcBAAAAAAAAGQIAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKcBAAAAAAAApwEAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAACyGAAAaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IGFyZ3BhcnNlCmZyb20gc2VsZW5pdW0gaW1wb3J0IHdlYmRyaXZlcgpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24uYnkgaW1wb3J0IEJ5CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQudWkgaW1wb3J0IFdlYkRyaXZlcldhaXQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydC51aSBpbXBvcnQgU2VsZWN0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQgaW1wb3J0IGV4cGVjdGVkX2NvbmRpdGlvbnMgYXMgRUMKZnJvbSBzZWxlbml1bV9mdXp6ZXIudXRpbHMgaW1wb3J0IGdlbmVyYXRlX3NhZmVfcGF5bG9hZHMKZnJvbSBzZWxlbml1bV9mdXp6ZXIuY29uZmlnIGltcG9ydCBDb25maWcKZnJvbSBzZWxlbml1bV9mdXp6ZXIuanNfY2hhbmdlX2RldGVjdG9yIGltcG9ydCBKYXZhU2NyaXB0Q2hhbmdlRGV0ZWN0b3IKZnJvbSBzZWxlbml1bV9mdXp6ZXIuZnV6emVyIGltcG9ydCBGdXp6ZXIKCmltcG9ydCB0aW1lCgpkZWYgbWFpbigpOgogICAgIyBJbXBvcnQgaGVyZSB0byBhdm9pZCBjaXJjdWxhciBpbXBvcnQgaXNzdWVzCiAgICBmcm9tIHNlbGVuaXVtX2Z1enplci5qc19jaGFuZ2VfZGV0ZWN0b3IgaW1wb3J0IEphdmFTY3JpcHRDaGFuZ2VEZXRlY3RvcgogICAgZnJvbSBzZWxlbml1bV9mdXp6ZXIuZnV6emVyIGltcG9ydCBGdXp6ZXIKCiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcihkZXNjcmlwdGlvbj0iUnVuIFNlbGVuaXVtIEZ1enplciBvbiBhIHRhcmdldCBVUkwuIikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoInVybCIsIGhlbHA9IlRoZSBVUkwgdG8gcnVuIHRoZSBmdXp6ZXIgYWdhaW5zdC4iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1oZWFkbGVzcyIsIGFjdGlvbj0ic3RvcmVfdHJ1ZSIsIGhlbHA9IlJ1biBDaHJvbWUgaW4gaGVhZGxlc3MgbW9kZS4iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1kZWxheSIsIHR5cGU9aW50LCBkZWZhdWx0PTEsIGhlbHA9IkRlbGF5IGJldHdlZW4gZnV6emluZyBhdHRlbXB0cyBpbiBzZWNvbmRzLiIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLWZ1enotZmllbGRzIiwgYWN0aW9uPSJzdG9yZV90cnVlIiwgaGVscD0iRnV6eiBpbnB1dCBmaWVsZHMgb24gdGhlIHBhZ2UuIikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tY2hlY2stZHJvcGRvd25zIiwgYWN0aW9uPSJzdG9yZV90cnVlIiwgaGVscD0iQ2hlY2sgZHJvcGRvd24gbWVudXMgb24gdGhlIHBhZ2UuIikKICAgIGFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpCgogICAgIyBTZXQgdXAgbG9nZ2luZwogICAgbG9nZ2luZy5iYXNpY0NvbmZpZyhsZXZlbD1Db25maWcuTE9HX0xFVkVMLCBmaWxlbmFtZT1Db25maWcuTE9HX0ZJTEUsIAogICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQ9JyUoYXNjdGltZSlzIC0gJShuYW1lKXMgLSAlKGxldmVsbmFtZSlzIC0gJShtZXNzYWdlKXMnKQogICAgbG9nZ2VyID0gbG9nZ2luZy5nZXRMb2dnZXIoX19uYW1lX18pCgogICAgIyBTZXQgdXAgQ2hyb21lIG9wdGlvbnMKICAgIGNocm9tZV9vcHRpb25zID0gd2ViZHJpdmVyLkNocm9tZU9wdGlvbnMoKQogICAgaWYgYXJncy5oZWFkbGVzczoKICAgICAgICBjaHJvbWVfb3B0aW9ucy5hZGRfYXJndW1lbnQoIi0taGVhZGxlc3MiKQoKICAgICMgSW5pdGlhbGl6ZSB0aGUgV2ViRHJpdmVyCiAgICBkcml2ZXIgPSB3ZWJkcml2ZXIuQ2hyb21lKHNlcnZpY2U9d2ViZHJpdmVyLmNocm9tZS5zZXJ2aWNlLlNlcnZpY2UoQ29uZmlnLkNIUk9NRURSSVZFUl9QQVRIKSwgb3B0aW9ucz1jaHJvbWVfb3B0aW9ucykKCiAgICAjIENyZWF0ZSBKYXZhU2NyaXB0Q2hhbmdlRGV0ZWN0b3IgaW5zdGFuY2UKICAgIGpzX2NoYW5nZV9kZXRlY3RvciA9IEphdmFTY3JpcHRDaGFuZ2VEZXRlY3Rvcihkcml2ZXIpCgogICAgdHJ5OgogICAgICAgIGRyaXZlci5nZXQoYXJncy51cmwpCiAgICAgICAgbG9nZ2VyLmluZm8oZiJBY2Nlc3NpbmcgVVJMOiB7YXJncy51cmx9IikKCiAgICAgICAgIyBQYXNzIEphdmFTY3JpcHRDaGFuZ2VEZXRlY3RvciBpbnN0YW5jZSB0byBGdXp6ZXIKICAgICAgICBmdXp6ZXIgPSBGdXp6ZXIoZHJpdmVyLCBqc19jaGFuZ2VfZGV0ZWN0b3IpCgogICAgICAgIGlmIGFyZ3MuZnV6el9maWVsZHM6CiAgICAgICAgICAgICMgUHJvbXB0IHRoZSB1c2VyIHRvIHNlbGVjdCBmaWVsZHMgdG8gZnV6egogICAgICAgICAgICBpbnB1dF9maWVsZHMgPSBmdXp6ZXIuZGV0ZWN0X2lucHV0cygpCiAgICAgICAgICAgIGlmIG5vdCBpbnB1dF9maWVsZHM6CiAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZygiTm8gaW5wdXQgZmllbGRzIGRldGVjdGVkIG9uIHRoZSBwYWdlLiIpCiAgICAgICAgICAgICAgICByZXR1cm4KCiAgICAgICAgICAgIHByaW50KCJEZXRlY3RlZCBpbnB1dCBmaWVsZHM6IikKICAgICAgICAgICAgZm9yIGlkeCwgZmllbGQgaW4gZW51bWVyYXRlKGlucHV0X2ZpZWxkcyk6CiAgICAgICAgICAgICAgICBmaWVsZF90eXBlID0gZmllbGQuZ2V0X2F0dHJpYnV0ZSgidHlwZSIpIG9yICJ1bmtub3duIgogICAgICAgICAgICAgICAgZmllbGRfbmFtZSA9IGZpZWxkLmdldF9hdHRyaWJ1dGUoIm5hbWUiKSBvciAiVW5uYW1lZCIKICAgICAgICAgICAgICAgIHByaW50KGYie2lkeH06IHtmaWVsZF9uYW1lfSAodHlwZToge2ZpZWxkX3R5cGV9KSIpCgogICAgICAgICAgICBzZWxlY3RlZF9pbmRpY2VzID0gaW5wdXQoIkVudGVyIHRoZSBpbmRpY2VzIG9mIHRoZSBmaWVsZHMgdG8gZnV6eiAoY29tbWEtc2VwYXJhdGVkKTogIikKICAgICAgICAgICAgc2VsZWN0ZWRfaW5kaWNlcyA9IFtpbnQoaWR4LnN0cmlwKCkpIGZvciBpZHggaW4gc2VsZWN0ZWRfaW5kaWNlcy5zcGxpdCgiLCIpIGlmIGlkeC5zdHJpcCgpLmlzZGlnaXQoKV0KCiAgICAgICAgICAgIHBheWxvYWRzID0gZ2VuZXJhdGVfc2FmZV9wYXlsb2FkcygpCiAgICAgICAgICAgIGZvciBpZHggaW4gc2VsZWN0ZWRfaW5kaWNlczoKICAgICAgICAgICAgICAgIGlmIDAgPD0gaWR4IDwgbGVuKGlucHV0X2ZpZWxkcyk6CiAgICAgICAgICAgICAgICAgICAgZmllbGQgPSBpbnB1dF9maWVsZHNbaWR4XQogICAgICAgICAgICAgICAgICAgIGZvciBwYXlsb2FkIGluIHBheWxvYWRzOgogICAgICAgICAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZC5jbGVhcigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZC5zZW5kX2tleXMocGF5bG9hZCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkLnNlbmRfa2V5cyhLZXlzLlRBQikgICMgVHJpZ2dlciBwb3RlbnRpYWwgSmF2YVNjcmlwdCBldmVudHMgYWZ0ZXIgaW5wdXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkLnNlbmRfa2V5cyhLZXlzLkVOVEVSKSAgIyBFeHBsaWNpdGx5IGhpdCBlbnRlciBhZnRlciB0YWJiaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhmIkluc2VydGVkIHBheWxvYWQgJ3twYXlsb2FkfScgaW50byBmaWVsZCB7aWR4fS4iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcChhcmdzLmRlbGF5KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBWYWxpZGF0ZSB0aGF0IHRoZSBwYXlsb2FkIHdhcyBzdWNjZXNzZnVsbHkgZW50ZXJlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50ZXJlZF92YWx1ZSA9IGZpZWxkLmdldF9hdHRyaWJ1dGUoInZhbHVlIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGVudGVyZWRfdmFsdWUgPT0gcGF5bG9hZDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhmIlBheWxvYWQgJ3twYXlsb2FkfScgc3VjY2Vzc2Z1bGx5IGVudGVyZWQgaW50byBmaWVsZCB7aWR4fS4iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZyhmIlBheWxvYWQgJ3twYXlsb2FkfScgY291bGQgbm90IGJlIHZlcmlmaWVkIGluIGZpZWxkIHtpZHh9LiBFbnRlcmVkIHZhbHVlOiAne2VudGVyZWRfdmFsdWV9JyIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIENoZWNrIGZvciBKYXZhU2NyaXB0IGNoYW5nZXMgYWZ0ZXIgaW5wdXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpzX2NoYW5nZV9kZXRlY3Rvci5jaGVja19mb3JfanNfY2hhbmdlcygpCiAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihmIkVycm9yIGluc2VydGluZyBwYXlsb2FkIGludG8gZmllbGQge2lkeH06IHtlfSIpCgogICAgICAgICAgICAjIFN1Ym1pdCB0aGUgZm9ybSBleHBsaWNpdGx5CiAgICAgICAgICAgIGZvciBmb3JtIGluIGRyaXZlci5maW5kX2VsZW1lbnRzKEJ5LlRBR19OQU1FLCAiZm9ybSIpOgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIHN1Ym1pdF9idXR0b24gPSBmb3JtLmZpbmRfZWxlbWVudChCeS5YUEFUSCwgIi8vaW5wdXRbQHR5cGU9J3N1Ym1pdCddIHwgLy9idXR0b25bQHR5cGU9J3N1Ym1pdCddIikKICAgICAgICAgICAgICAgICAgICBzdWJtaXRfYnV0dG9uLmNsaWNrKCkKICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbygiQ2xpY2tlZCBzdWJtaXQgYnV0dG9uIHRvIHN1Ym1pdCBmb3JtLiIpCiAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGYiRXJyb3IgY2xpY2tpbmcgc3VibWl0IGJ1dHRvbjoge2V9IikKICAgICAgICAgICAgICAgICMgQ2hlY2sgZm9yIEphdmFTY3JpcHQgY2hhbmdlcyBhZnRlciBmb3JtIHN1Ym1pc3Npb24KICAgICAgICAgICAgICAgIGpzX2NoYW5nZV9kZXRlY3Rvci5jaGVja19mb3JfanNfY2hhbmdlcygpCgogICAgICAgIGlmIGFyZ3MuY2hlY2tfZHJvcGRvd25zOgogICAgICAgICAgICAjIEZpbmQgYWxsIGRyb3Bkb3duIG1lbnVzIChzZWxlY3QgZWxlbWVudHMpCiAgICAgICAgICAgIGRyb3Bkb3ducyA9IGRyaXZlci5maW5kX2VsZW1lbnRzKEJ5LlRBR19OQU1FLCAic2VsZWN0IikKICAgICAgICAgICAgaWYgbm90IGRyb3Bkb3duczoKICAgICAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKCJObyBkcm9wZG93biBtZW51cyBkZXRlY3RlZCBvbiB0aGUgcGFnZS4iKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgZm9yIGlkeCwgZHJvcGRvd24gaW4gZW51bWVyYXRlKGRyb3Bkb3ducyk6CiAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3QgPSBTZWxlY3QoZHJvcGRvd24pCiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnMgPSBzZWxlY3Qub3B0aW9ucwogICAgICAgICAgICAgICAgICAgICAgICBmb3Igb3B0aW9uIGluIG9wdGlvbnM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Quc2VsZWN0X2J5X3Zpc2libGVfdGV4dChvcHRpb24udGV4dCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKGYiU2VsZWN0ZWQgb3B0aW9uICd7b3B0aW9uLnRleHR9JyBmcm9tIGRyb3Bkb3duIHtpZHh9LiIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKGFyZ3MuZGVsYXkpICAjIFdhaXQgZm9yIHBvdGVudGlhbCBKYXZhU2NyaXB0IHVwZGF0ZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgQ2hlY2sgZm9yIEphdmFTY3JpcHQgY2hhbmdlcyBvciBlcnJvcnMgb24gdGhlIHBhZ2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGpzX2NoYW5nZV9kZXRlY3Rvci5jaGVja19mb3JfanNfY2hhbmdlcygpCiAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZXJyb3IoZiJFcnJvciBpbnRlcmFjdGluZyB3aXRoIGRyb3Bkb3duIHtpZHh9OiB7ZX0iKQoKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBsb2dnZXIuZXJyb3IoZiJBbiBlcnJvciBvY2N1cnJlZDoge2V9IikKICAgIGZpbmFsbHk6CiAgICAgICAgaW5wdXQoIlByZXNzIEVudGVyIHRvIGNsb3NlIHRoZSBicm93c2VyLi4uIikgICMgS2VlcCB0aGUgYnJvd3NlciBvcGVuIHVudGlsIHVzZXIgaW5wdXQKICAgICAgICBkcml2ZXIucXVpdCgpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigpCg",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAALIYAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAArRkAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAK0ZAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAA5RoAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAC0CAAAAAAAALgIAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAgAAAAAAAC0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"",
					null,
					"AQAAAC0CAAAAAAAAVwIAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAgAAAAAAAC0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAFcCAAAAAAAAVwIAAAAAAAABAAAACg",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYAgAAAAAAAFgCAAAAAAAAAAAAAAAAAAA"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAA8bAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAIxsAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAjGwAAaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IGFyZ3BhcnNlCmZyb20gc2VsZW5pdW0gaW1wb3J0IHdlYmRyaXZlcgpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24uYnkgaW1wb3J0IEJ5CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQudWkgaW1wb3J0IFdlYkRyaXZlcldhaXQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydC51aSBpbXBvcnQgU2VsZWN0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQgaW1wb3J0IGV4cGVjdGVkX2NvbmRpdGlvbnMgYXMgRUMKZnJvbSBzZWxlbml1bS5jb21tb24uZXhjZXB0aW9ucyBpbXBvcnQgTm9TdWNoRWxlbWVudEV4Y2VwdGlvbgpmcm9tIHNlbGVuaXVtX2Z1enplci51dGlscyBpbXBvcnQgZ2VuZXJhdGVfc2FmZV9wYXlsb2Fkcwpmcm9tIHNlbGVuaXVtX2Z1enplci5jb25maWcgaW1wb3J0IENvbmZpZwpmcm9tIHNlbGVuaXVtX2Z1enplci5qc19jaGFuZ2VfZGV0ZWN0b3IgaW1wb3J0IEphdmFTY3JpcHRDaGFuZ2VEZXRlY3Rvcgpmcm9tIHNlbGVuaXVtX2Z1enplci5mdXp6ZXIgaW1wb3J0IEZ1enplcgppbXBvcnQgdGltZQoKZGVmIG1haW4oKToKICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKGRlc2NyaXB0aW9uPSJSdW4gU2VsZW5pdW0gRnV6emVyIG9uIGEgdGFyZ2V0IFVSTC4iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgidXJsIiwgaGVscD0iVGhlIFVSTCB0byBydW4gdGhlIGZ1enplciBhZ2FpbnN0LiIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLWhlYWRsZXNzIiwgYWN0aW9uPSJzdG9yZV90cnVlIiwgaGVscD0iUnVuIENocm9tZSBpbiBoZWFkbGVzcyBtb2RlLiIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLWRlbGF5IiwgdHlwZT1pbnQsIGRlZmF1bHQ9MSwgaGVscD0iRGVsYXkgYmV0d2VlbiBmdXp6aW5nIGF0dGVtcHRzIGluIHNlY29uZHMuIikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tZnV6ei1maWVsZHMiLCBhY3Rpb249InN0b3JlX3RydWUiLCBoZWxwPSJGdXp6IGlucHV0IGZpZWxkcyBvbiB0aGUgcGFnZS4iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1jaGVjay1kcm9wZG93bnMiLCBhY3Rpb249InN0b3JlX3RydWUiLCBoZWxwPSJDaGVjayBkcm9wZG93biBtZW51cyBvbiB0aGUgcGFnZS4iKQogICAgYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkKCiAgICAjIFNldCB1cCBsb2dnaW5nCiAgICBsb2dnaW5nLmJhc2ljQ29uZmlnKGxldmVsPUNvbmZpZy5MT0dfTEVWRUwsIGZpbGVuYW1lPUNvbmZpZy5MT0dfRklMRSwgCiAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdD0nJShhc2N0aW1lKXMgLSAlKG5hbWUpcyAtICUobGV2ZWxuYW1lKXMgLSAlKG1lc3NhZ2UpcycpCiAgICBsb2dnZXIgPSBsb2dnaW5nLmdldExvZ2dlcihfX25hbWVfXykKICAgIGNvbnNvbGVfaGFuZGxlciA9IGxvZ2dpbmcuU3RyZWFtSGFuZGxlcigpCiAgICBjb25zb2xlX2hhbmRsZXIuc2V0TGV2ZWwobG9nZ2luZy5JTkZPKQogICAgbG9nZ2VyLmFkZEhhbmRsZXIoY29uc29sZV9oYW5kbGVyKQoKICAgICMgU2V0IHVwIENocm9tZSBvcHRpb25zCiAgICBjaHJvbWVfb3B0aW9ucyA9IHdlYmRyaXZlci5DaHJvbWVPcHRpb25zKCkKICAgIGlmIGFyZ3MuaGVhZGxlc3M6CiAgICAgICAgY2hyb21lX29wdGlvbnMuYWRkX2FyZ3VtZW50KCItLWhlYWRsZXNzIikKCiAgICAjIEluaXRpYWxpemUgdGhlIFdlYkRyaXZlcgogICAgZHJpdmVyID0gd2ViZHJpdmVyLkNocm9tZShzZXJ2aWNlPXdlYmRyaXZlci5jaHJvbWUuc2VydmljZS5TZXJ2aWNlKENvbmZpZy5DSFJPTUVEUklWRVJfUEFUSCksIG9wdGlvbnM9Y2hyb21lX29wdGlvbnMpCgogICAganNfY2hhbmdlX2RldGVjdG9yID0gSmF2YVNjcmlwdENoYW5nZURldGVjdG9yKGRyaXZlcikKCiAgICB0cnk6CiAgICAgICAgbG9nZ2VyLmluZm8oIlN0YXJ0aW5nIHRoZSBTZWxlbml1bSBGdXp6ZXIuLi4iKQogICAgICAgIGRyaXZlci5nZXQoYXJncy51cmwpCiAgICAgICAgbG9nZ2VyLmluZm8oZiJBY2Nlc3NpbmcgVVJMOiB7YXJncy51cmx9IikKCiAgICAgICAgZnV6emVyID0gRnV6emVyKGRyaXZlciwganNfY2hhbmdlX2RldGVjdG9yKQoKICAgICAgICBpZiBhcmdzLmZ1enpfZmllbGRzOgogICAgICAgICAgICBsb2dnZXIuaW5mbygiRnV6emluZyBpbnB1dCBmaWVsZHMgb24gdGhlIHBhZ2UuLi4iKQogICAgICAgICAgICAjIFByb21wdCB0aGUgdXNlciB0byBzZWxlY3QgZmllbGRzIHRvIGZ1enoKICAgICAgICAgICAgaW5wdXRfZmllbGRzID0gZnV6emVyLmRldGVjdF9pbnB1dHMoKQogICAgICAgICAgICBpZiBub3QgaW5wdXRfZmllbGRzOgogICAgICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoIk5vIGlucHV0IGZpZWxkcyBkZXRlY3RlZCBvbiB0aGUgcGFnZS4iKQogICAgICAgICAgICAgICAgcmV0dXJuCgogICAgICAgICAgICBwcmludCgiRGV0ZWN0ZWQgaW5wdXQgZmllbGRzOiIpCiAgICAgICAgICAgIGZvciBpZHgsIGZpZWxkIGluIGVudW1lcmF0ZShpbnB1dF9maWVsZHMpOgogICAgICAgICAgICAgICAgZmllbGRfdHlwZSA9IGZpZWxkLmdldF9hdHRyaWJ1dGUoInR5cGUiKSBvciAidW5rbm93biIKICAgICAgICAgICAgICAgIGZpZWxkX25hbWUgPSBmaWVsZC5nZXRfYXR0cmlidXRlKCJuYW1lIikgb3IgIlVubmFtZWQiCiAgICAgICAgICAgICAgICBwcmludChmIntpZHh9OiB7ZmllbGRfbmFtZX0gKHR5cGU6IHtmaWVsZF90eXBlfSkiKQoKICAgICAgICAgICAgc2VsZWN0ZWRfaW5kaWNlcyA9IGlucHV0KCJFbnRlciB0aGUgaW5kaWNlcyBvZiB0aGUgZmllbGRzIHRvIGZ1enogKGNvbW1hLXNlcGFyYXRlZCk6ICIpCiAgICAgICAgICAgIHNlbGVjdGVkX2luZGljZXMgPSBbaW50KGlkeC5zdHJpcCgpKSBmb3IgaWR4IGluIHNlbGVjdGVkX2luZGljZXMuc3BsaXQoIiwiKSBpZiBpZHguc3RyaXAoKS5pc2RpZ2l0KCldCgogICAgICAgICAgICBwYXlsb2FkcyA9IGdlbmVyYXRlX3NhZmVfcGF5bG9hZHMoKQogICAgICAgICAgICBmb3IgaWR4IGluIHNlbGVjdGVkX2luZGljZXM6CiAgICAgICAgICAgICAgICBpZiAwIDw9IGlkeCA8IGxlbihpbnB1dF9maWVsZHMpOgogICAgICAgICAgICAgICAgICAgIGZpZWxkID0gaW5wdXRfZmllbGRzW2lkeF0KICAgICAgICAgICAgICAgICAgICBmb3IgcGF5bG9hZCBpbiBwYXlsb2FkczoKICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQuY2xlYXIoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQuc2VuZF9rZXlzKHBheWxvYWQpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZC5zZW5kX2tleXMoS2V5cy5UQUIpICAjIFRyaWdnZXIgcG90ZW50aWFsIEphdmFTY3JpcHQgZXZlbnRzIGFmdGVyIGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZC5zZW5kX2tleXMoS2V5cy5FTlRFUikgICMgRXhwbGljaXRseSBoaXQgZW50ZXIgYWZ0ZXIgdGFiYmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oZiJJbnNlcnRlZCBwYXlsb2FkICd7cGF5bG9hZH0nIGludG8gZmllbGQge2lkeH0uIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoYXJncy5kZWxheSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICMgVmFsaWRhdGUgdGhhdCB0aGUgcGF5bG9hZCB3YXMgc3VjY2Vzc2Z1bGx5IGVudGVyZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudGVyZWRfdmFsdWUgPSBmaWVsZC5nZXRfYXR0cmlidXRlKCJ2YWx1ZSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBlbnRlcmVkX3ZhbHVlID09IHBheWxvYWQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oZiJQYXlsb2FkICd7cGF5bG9hZH0nIHN1Y2Nlc3NmdWxseSBlbnRlcmVkIGludG8gZmllbGQge2lkeH0uIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoZiJQYXlsb2FkICd7cGF5bG9hZH0nIGNvdWxkIG5vdCBiZSB2ZXJpZmllZCBpbiBmaWVsZCB7aWR4fS4gRW50ZXJlZCB2YWx1ZTogJ3tlbnRlcmVkX3ZhbHVlfSciKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBDaGVjayBmb3IgSmF2YVNjcmlwdCBjaGFuZ2VzIGFmdGVyIGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqc19jaGFuZ2VfZGV0ZWN0b3IuY2hlY2tfZm9yX2pzX2NoYW5nZXMoKQogICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZXJyb3IoZiJFcnJvciBpbnNlcnRpbmcgcGF5bG9hZCBpbnRvIGZpZWxkIHtpZHh9OiB7ZX0iKQoKICAgICAgICAgICAgIyBTdWJtaXQgdGhlIGZvcm0gZXhwbGljaXRseQogICAgICAgICAgICBmb3IgZm9ybSBpbiBkcml2ZXIuZmluZF9lbGVtZW50cyhCeS5UQUdfTkFNRSwgImZvcm0iKToKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBzdWJtaXRfYnV0dG9uID0gZm9ybS5maW5kX2VsZW1lbnQoQnkuWFBBVEgsICIvL2lucHV0W0B0eXBlPSdzdWJtaXQnXSB8IC8vYnV0dG9uW0B0eXBlPSdzdWJtaXQnXSIpCiAgICAgICAgICAgICAgICAgICAgc3VibWl0X2J1dHRvbi5jbGljaygpCiAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oIkNsaWNrZWQgc3VibWl0IGJ1dHRvbiB0byBzdWJtaXQgZm9ybS4iKQogICAgICAgICAgICAgICAgZXhjZXB0IE5vU3VjaEVsZW1lbnRFeGNlcHRpb246CiAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAjIElmIG5vIHN1Ym1pdCBidXR0b24sIHRyeSBzZW5kaW5nIEVOVEVSIGtleSB0byBhbnkgaW5wdXQgZmllbGQgaW4gdGhlIGZvcm0KICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXRfZWxlbWVudCA9IGZvcm0uZmluZF9lbGVtZW50KEJ5LlhQQVRILCAiLi8vaW5wdXQiKQogICAgICAgICAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LnNlbmRfa2V5cyhLZXlzLkVOVEVSKQogICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbygiU2VudCBFTlRFUiBrZXkgdG8gaW5wdXQgZWxlbWVudCB0byBzdWJtaXQgZm9ybS4iKQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGYiRXJyb3Igc3VibWl0dGluZyBmb3JtIGJ5IHNlbmRpbmcgRU5URVIga2V5OiB7ZX0iKQogICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihmIkVycm9yIGNsaWNraW5nIHN1Ym1pdCBidXR0b246IHtlfSIpCiAgICAgICAgICAgICAgICAjIENoZWNrIGZvciBKYXZhU2NyaXB0IGNoYW5nZXMgYWZ0ZXIgZm9ybSBzdWJtaXNzaW9uCiAgICAgICAgICAgICAgICBqc19jaGFuZ2VfZGV0ZWN0b3IuY2hlY2tfZm9yX2pzX2NoYW5nZXMoKQoKICAgICAgICBpZiBhcmdzLmNoZWNrX2Ryb3Bkb3duczoKICAgICAgICAgICAgbG9nZ2VyLmluZm8oIkNoZWNraW5nIGRyb3Bkb3duIG1lbnVzIG9uIHRoZSBwYWdlLi4uIikKICAgICAgICAgICAgIyBGaW5kIGFsbCBkcm9wZG93biBtZW51cyAoc2VsZWN0IGVsZW1lbnRzKQogICAgICAgICAgICBkcm9wZG93bnMgPSBkcml2ZXIuZmluZF9lbGVtZW50cyhCeS5UQUdfTkFNRSwgInNlbGVjdCIpCiAgICAgICAgICAgIGlmIG5vdCBkcm9wZG93bnM6CiAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZygiTm8gZHJvcGRvd24gbWVudXMgZGV0ZWN0ZWQgb24gdGhlIHBhZ2UuIikKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGZvciBpZHgsIGRyb3Bkb3duIGluIGVudW1lcmF0ZShkcm9wZG93bnMpOgogICAgICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0ID0gU2VsZWN0KGRyb3Bkb3duKQogICAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zID0gc2VsZWN0Lm9wdGlvbnMKICAgICAgICAgICAgICAgICAgICAgICAgZm9yIG9wdGlvbiBpbiBvcHRpb25zOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0LnNlbGVjdF9ieV92aXNpYmxlX3RleHQob3B0aW9uLnRleHQpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhmIlNlbGVjdGVkIG9wdGlvbiAne29wdGlvbi50ZXh0fScgZnJvbSBkcm9wZG93biB7aWR4fS4iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcChhcmdzLmRlbGF5KSAgIyBXYWl0IGZvciBwb3RlbnRpYWwgSmF2YVNjcmlwdCB1cGRhdGVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIENoZWNrIGZvciBKYXZhU2NyaXB0IGNoYW5nZXMgb3IgZXJyb3JzIG9uIHRoZSBwYWdlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBqc19jaGFuZ2VfZGV0ZWN0b3IuY2hlY2tfZm9yX2pzX2NoYW5nZXMoKQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGYiRXJyb3IgaW50ZXJhY3Rpbmcgd2l0aCBkcm9wZG93biB7aWR4fToge2V9IikKCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgbG9nZ2VyLmVycm9yKGYiQW4gZXJyb3Igb2NjdXJyZWQ6IHtlfSIpCiAgICBmaW5hbGx5OgogICAgICAgIGlucHV0KCJQcmVzcyBFbnRlciB0byBjbG9zZSB0aGUgYnJvd3Nlci4uLiIpICAjIEtlZXAgdGhlIGJyb3dzZXIgb3BlbiB1bnRpbCB1c2VyIGlucHV0CiAgICAgICAgZHJpdmVyLnF1aXQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIG1haW4oKQo",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAIxsAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAArRsAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAArRsAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAA/A0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAD8DQAAaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IGFyZ3BhcnNlCmZyb20gc2VsZW5pdW0gaW1wb3J0IHdlYmRyaXZlcgpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24uYnkgaW1wb3J0IEJ5CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLmNocm9tZS5zZXJ2aWNlIGltcG9ydCBTZXJ2aWNlCmZyb20gc2VsZW5pdW1fZnV6emVyLnV0aWxzIGltcG9ydCBnZW5lcmF0ZV9zYWZlX3BheWxvYWRzCmZyb20gc2VsZW5pdW1fZnV6emVyLmNvbmZpZyBpbXBvcnQgQ29uZmlnCmZyb20gc2VsZW5pdW1fZnV6emVyLmpzX2NoYW5nZV9kZXRlY3RvciBpbXBvcnQgSmF2YVNjcmlwdENoYW5nZURldGVjdG9yCmZyb20gc2VsZW5pdW1fZnV6emVyLmRyb3Bkb3duX2hhbmRsZXIgaW1wb3J0IERyb3Bkb3duSGFuZGxlcgpmcm9tIHNlbGVuaXVtX2Z1enplci5mdXp6ZXIgaW1wb3J0IEZ1enplcgppbXBvcnQgdGltZQoKZGVmIG1haW4oKToKICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKGRlc2NyaXB0aW9uPSJSdW4gU2VsZW5pdW0gRnV6emVyIG9uIGEgdGFyZ2V0IFVSTC4iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgidXJsIiwgaGVscD0iVGhlIFVSTCB0byBydW4gdGhlIGZ1enplciBhZ2FpbnN0LiIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLWhlYWRsZXNzIiwgYWN0aW9uPSJzdG9yZV90cnVlIiwgaGVscD0iUnVuIENocm9tZSBpbiBoZWFkbGVzcyBtb2RlLiIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLWRlbGF5IiwgdHlwZT1pbnQsIGRlZmF1bHQ9MSwgaGVscD0iRGVsYXkgYmV0d2VlbiBpbnRlcmFjdGlvbnMgaW4gc2Vjb25kcy4iKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1mdXp6LWZpZWxkcyIsIGFjdGlvbj0ic3RvcmVfdHJ1ZSIsIGhlbHA9IkZ1enogaW5wdXQgZmllbGRzIG9uIHRoZSBwYWdlLiIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLWNoZWNrLWRyb3Bkb3ducyIsIGFjdGlvbj0ic3RvcmVfdHJ1ZSIsIGhlbHA9IkNoZWNrIGRyb3Bkb3duIG1lbnVzIG9uIHRoZSBwYWdlLiIpCiAgICBhcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKICAgICMgU2V0IHVwIGxvZ2dpbmcKICAgIGxvZ2dpbmcuYmFzaWNDb25maWcobGV2ZWw9Q29uZmlnLkxPR19MRVZFTCwgZmlsZW5hbWU9Q29uZmlnLkxPR19GSUxFLAogICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQ9JyUoYXNjdGltZSlzIC0gJShuYW1lKXMgLSAlKGxldmVsbmFtZSlzIC0gJShtZXNzYWdlKXMnKQogICAgbG9nZ2VyID0gbG9nZ2luZy5nZXRMb2dnZXIoX19uYW1lX18pCgogICAgIyBTZXQgdXAgQ2hyb21lIG9wdGlvbnMKICAgIGNocm9tZV9vcHRpb25zID0gd2ViZHJpdmVyLkNocm9tZU9wdGlvbnMoKQogICAgaWYgYXJncy5oZWFkbGVzczoKICAgICAgICBjaHJvbWVfb3B0aW9ucy5hZGRfYXJndW1lbnQoIi0taGVhZGxlc3MiKQoKICAgICMgSW5pdGlhbGl6ZSB0aGUgV2ViRHJpdmVyCiAgICBkcml2ZXIgPSB3ZWJkcml2ZXIuQ2hyb21lKHNlcnZpY2U9U2VydmljZShDb25maWcuQ0hST01FRFJJVkVSX1BBVEgpLCBvcHRpb25zPWNocm9tZV9vcHRpb25zKQoKICAgIGpzX2NoYW5nZV9kZXRlY3RvciA9IEphdmFTY3JpcHRDaGFuZ2VEZXRlY3Rvcihkcml2ZXIpCiAgICBkcm9wZG93bl9oYW5kbGVyID0gRHJvcGRvd25IYW5kbGVyKGRyaXZlciwganNfY2hhbmdlX2RldGVjdG9yKQoKICAgIHRyeToKICAgICAgICBsb2dnZXIuaW5mbygiU3RhcnRpbmcgdGhlIFNlbGVuaXVtIEZ1enplci4uLiIpCiAgICAgICAgZHJpdmVyLmdldChhcmdzLnVybCkKICAgICAgICBsb2dnZXIuaW5mbyhmIkFjY2Vzc2luZyBVUkw6IHthcmdzLnVybH0iKQoKICAgICAgICBmdXp6ZXIgPSBGdXp6ZXIoZHJpdmVyLCBqc19jaGFuZ2VfZGV0ZWN0b3IpCgogICAgICAgIGlmIGFyZ3MuZnV6el9maWVsZHM6CiAgICAgICAgICAgIGxvZ2dlci5pbmZvKCJGdXp6aW5nIGlucHV0IGZpZWxkcy4uLiIpCiAgICAgICAgICAgIGlucHV0X2ZpZWxkcyA9IGZ1enplci5kZXRlY3RfaW5wdXRzKCkKICAgICAgICAgICAgaWYgbm90IGlucHV0X2ZpZWxkczoKICAgICAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKCJObyBpbnB1dCBmaWVsZHMgZGV0ZWN0ZWQgb24gdGhlIHBhZ2UuIikKICAgICAgICAgICAgICAgIHJldHVybgoKICAgICAgICAgICAgcHJpbnQoIkRldGVjdGVkIGlucHV0IGZpZWxkczoiKQogICAgICAgICAgICBmb3IgaWR4LCBmaWVsZCBpbiBlbnVtZXJhdGUoaW5wdXRfZmllbGRzKToKICAgICAgICAgICAgICAgIGZpZWxkX3R5cGUgPSBmaWVsZC5nZXRfYXR0cmlidXRlKCJ0eXBlIikgb3IgInVua25vd24iCiAgICAgICAgICAgICAgICBmaWVsZF9uYW1lID0gZmllbGQuZ2V0X2F0dHJpYnV0ZSgibmFtZSIpIG9yICJVbm5hbWVkIgogICAgICAgICAgICAgICAgcHJpbnQoZiJ7aWR4fToge2ZpZWxkX25hbWV9ICh0eXBlOiB7ZmllbGRfdHlwZX0pIikKCiAgICAgICAgICAgIHNlbGVjdGVkX2luZGljZXMgPSBpbnB1dCgiRW50ZXIgdGhlIGluZGljZXMgb2YgdGhlIGZpZWxkcyB0byBmdXp6IChjb21tYS1zZXBhcmF0ZWQpOiAiKQogICAgICAgICAgICBzZWxlY3RlZF9pbmRpY2VzID0gW2ludChpZHguc3RyaXAoKSkgZm9yIGlkeCBpbiBzZWxlY3RlZF9pbmRpY2VzLnNwbGl0KCIsIikgaWYgaWR4LnN0cmlwKCkuaXNkaWdpdCgpXQoKICAgICAgICAgICAgcGF5bG9hZHMgPSBnZW5lcmF0ZV9zYWZlX3BheWxvYWRzKCkKICAgICAgICAgICAgZm9yIGlkeCBpbiBzZWxlY3RlZF9pbmRpY2VzOgogICAgICAgICAgICAgICAgaWYgMCA8PSBpZHggPCBsZW4oaW5wdXRfZmllbGRzKToKICAgICAgICAgICAgICAgICAgICBmdXp6ZXIuZnV6el9maWVsZChpbnB1dF9maWVsZHNbaWR4XSwgcGF5bG9hZHMsIGRlbGF5PWFyZ3MuZGVsYXkpCgogICAgICAgIGlmIGFyZ3MuY2hlY2tfZHJvcGRvd25zOgogICAgICAgICAgICBsb2dnZXIuaW5mbygiQ2hlY2tpbmcgZHJvcGRvd24gbWVudXMuLi4iKQogICAgICAgICAgICAjIFByb2Nlc3MgZHJvcGRvd25zIGluIHNwZWNpZmljIHNlY3Rpb25zCiAgICAgICAgICAgIGRyb3Bkb3duX2hhbmRsZXIucHJvY2Vzc19kaXZfZHJvcGRvd25zKCJwcmR1Y3RzaXplIiwgZGVsYXk9YXJncy5kZWxheSkKICAgICAgICAgICAgZHJvcGRvd25faGFuZGxlci5wcm9jZXNzX2Rpdl9kcm9wZG93bnMoInByZHVjdHF0eSIsIGRlbGF5PWFyZ3MuZGVsYXkpCiAgICAgICAgICAgIGRyb3Bkb3duX2hhbmRsZXIucHJvY2Vzc19kaXZfZHJvcGRvd25zKCJhZGRpdGlvbmFsb3B0aW9uaWQiLCBkZWxheT1hcmdzLmRlbGF5KQoKICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICBsb2dnZXIuZXJyb3IoZiJBbiBlcnJvciBvY2N1cnJlZDoge2V9IikKICAgIGZpbmFsbHk6CiAgICAgICAgaW5wdXQoIlByZXNzIEVudGVyIHRvIGNsb3NlIHRoZSBicm93c2VyLi4uIikgICMgS2VlcCB0aGUgYnJvd3NlciBvcGVuIHVudGlsIHVzZXIgaW5wdXQKICAgICAgICBkcml2ZXIucXVpdCgpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgbWFpbigpCgAAAAAAAAAArRsAAAAAAAAAAAAAAAAAAAAAAACtGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8DQAAAAAAAPwNAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "selenium_fuzzer/js_change_detector.py",
			"settings":
			{
				"buffer_size": 9334,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "import logging"
			},
			"undo_stack":
			[
				[
					58,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAQRoAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"left_delete",
					null,
					"",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAQRoAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAuBsAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"left_delete",
					null,
					"",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAuBsAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAApiIAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"left_delete",
					null,
					"",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAApiIAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAApiIAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAACmIgAAaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IHRpbWUKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5zdXBwb3J0LnVpIGltcG9ydCBXZWJEcml2ZXJXYWl0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQgaW1wb3J0IGV4cGVjdGVkX2NvbmRpdGlvbnMgYXMgRUMKZnJvbSBzZWxlbml1bS5jb21tb24uZXhjZXB0aW9ucyBpbXBvcnQgVGltZW91dEV4Y2VwdGlvbgoKY2xhc3MgSmF2YVNjcmlwdENoYW5nZURldGVjdG9yOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGRyaXZlcik6CiAgICAgICAgc2VsZi5kcml2ZXIgPSBkcml2ZXIKICAgICAgICBzZWxmLmxvZ2dlciA9IGxvZ2dpbmcuZ2V0TG9nZ2VyKF9fbmFtZV9fKQogICAgICAgIHNlbGYucHJldmlvdXNfcGFnZV9zb3VyY2UgPSAiIgoKICAgICAgICAjIFNldCB1cCBjb25zb2xlIGhhbmRsZXIgZm9yIGxvZ2dpbmcgaW1wb3J0YW50IGluZm9ybWF0aW9uCiAgICAgICAgY29uc29sZV9oYW5kbGVyID0gbG9nZ2luZy5TdHJlYW1IYW5kbGVyKCkKICAgICAgICBjb25zb2xlX2hhbmRsZXIuc2V0TGV2ZWwobG9nZ2luZy5JTkZPKQogICAgICAgIGNvbnNvbGVfZm9ybWF0dGVyID0gbG9nZ2luZy5Gb3JtYXR0ZXIoJyUoYXNjdGltZSlzIC0gJShsZXZlbG5hbWUpcyAtICUobWVzc2FnZSlzJykKICAgICAgICBjb25zb2xlX2hhbmRsZXIuc2V0Rm9ybWF0dGVyKGNvbnNvbGVfZm9ybWF0dGVyKQogICAgICAgIHNlbGYuY29uc29sZV9sb2dnZXIgPSBsb2dnaW5nLmdldExvZ2dlcignY29uc29sZV9sb2dnZXInKQogICAgICAgIHNlbGYuY29uc29sZV9sb2dnZXIuYWRkSGFuZGxlcihjb25zb2xlX2hhbmRsZXIpCiAgICAgICAgc2VsZi5jb25zb2xlX2xvZ2dlci5zZXRMZXZlbChsb2dnaW5nLklORk8pCgogICAgICAgICMgSW5pdGlhbGl6ZSBKYXZhU2NyaXB0IGxvZyBzdG9yYWdlIG9uIHRoZSBwYWdlCiAgICAgICAgc2VsZi5faW5pdGlhbGl6ZV9qc19sb2dnaW5nKCkKCiAgICBkZWYgY2hlY2tfZm9yX2pzX2NoYW5nZXMoc2VsZiwgc3VjY2Vzc19tZXNzYWdlPU5vbmUsIGVycm9yX2tleXdvcmRzPU5vbmUsIGRlbGF5PTIpOgogICAgICAgICIiIkNoZWNrIGZvciBKYXZhU2NyaXB0IGNoYW5nZXMgb3IgZXJyb3IgbWVzc2FnZXMgb24gdGhlIHBhZ2UuCgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIHN1Y2Nlc3NfbWVzc2FnZSAoc3RyKTogVGhlIGV4cGVjdGVkIHN1Y2Nlc3MgbWVzc2FnZSBhZnRlciBjaGFuZ2VzIGFyZSBhcHBsaWVkLgogICAgICAgICAgICBlcnJvcl9rZXl3b3JkcyAobGlzdCBvZiBzdHIpOiBMaXN0IG9mIGtleXdvcmRzIGluZGljYXRpbmcgZXJyb3JzLgogICAgICAgICAgICBkZWxheSAoaW50KTogVGltZSBpbiBzZWNvbmRzIHRvIHdhaXQgZm9yIGNoYW5nZXMgdG8gYXBwZWFyLgogICAgICAgICIiIgogICAgICAgIGlmIGVycm9yX2tleXdvcmRzIGlzIE5vbmU6CiAgICAgICAgICAgIGVycm9yX2tleXdvcmRzID0gWyJlcnJvciIsICJmYWlsZWQiLCAiaW52YWxpZCJdCgogICAgICAgICMgV2FpdCBmb3IgcG90ZW50aWFsIGNoYW5nZXMgb24gdGhlIHBhZ2UKICAgICAgICB0aW1lLnNsZWVwKGRlbGF5KQoKICAgICAgICAjIENhcHR1cmUgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIHBhZ2Ugc291cmNlCiAgICAgICAgcGFnZV9zb3VyY2UgPSBzZWxmLmRyaXZlci5wYWdlX3NvdXJjZS5sb3dlcigpCgogICAgICAgICMgTG9nIHRoZSBsZW5ndGhzIG9mIHByZXZpb3VzIGFuZCBjdXJyZW50IHBhZ2Ugc291cmNlcyBmb3IgZGVidWdnaW5nIHB1cnBvc2VzCiAgICAgICAgc2VsZi5sb2dnZXIuZGVidWcoZiJQcmV2aW91cyBwYWdlIHNvdXJjZSBsZW5ndGg6IHtsZW4oc2VsZi5wcmV2aW91c19wYWdlX3NvdXJjZSl9IikKICAgICAgICBzZWxmLmxvZ2dlci5kZWJ1ZyhmIkN1cnJlbnQgcGFnZSBzb3VyY2UgbGVuZ3RoOiB7bGVuKHBhZ2Vfc291cmNlKX0iKQoKICAgICAgICAjIENvbXBhcmUgdGhlIGN1cnJlbnQgcGFnZSBzb3VyY2Ugd2l0aCB0aGUgcHJldmlvdXMgb25lIHRvIGRldGVjdCBhbnkgY2hhbmdlcwogICAgICAgIGlmIHNlbGYucHJldmlvdXNfcGFnZV9zb3VyY2UgYW5kIHNlbGYucHJldmlvdXNfcGFnZV9zb3VyY2UgIT0gcGFnZV9zb3VyY2U6CiAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oIkRldGVjdGVkIGNoYW5nZXMgaW4gdGhlIHBhZ2Ugc291cmNlLiIpCiAgICAgICAgICAgIHNlbGYuY29uc29sZV9sb2dnZXIuaW5mbygiRGV0ZWN0ZWQgY2hhbmdlcyBpbiB0aGUgcGFnZSBzb3VyY2UuIikKICAgICAgICAgICAgc2VsZi5fbG9nX3VwZGF0ZWRfdGV4dCgpICAjIExvZyB0aGUgdXBkYXRlZCB0ZXh0IGZyb20gSmF2YVNjcmlwdCBjaGFuZ2VzCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc2VsZi5sb2dnZXIuaW5mbygiTm8gY2hhbmdlcyBkZXRlY3RlZCBpbiB0aGUgcGFnZSBzb3VyY2UuIikKICAgICAgICAgICAgc2VsZi5jb25zb2xlX2xvZ2dlci5pbmZvKCJObyBjaGFuZ2VzIGRldGVjdGVkIGluIHRoZSBwYWdlIHNvdXJjZS4iKQogICAgICAgIHNlbGYucHJldmlvdXNfcGFnZV9zb3VyY2UgPSBwYWdlX3NvdXJjZQoKICAgICAgICAjIENoZWNrIGZvciBzdWNjZXNzIG1lc3NhZ2VzCiAgICAgICAgaWYgc3VjY2Vzc19tZXNzYWdlIGFuZCBzdWNjZXNzX21lc3NhZ2UubG93ZXIoKSBpbiBwYWdlX3NvdXJjZToKICAgICAgICAgICAgc2VsZi5sb2dnZXIuaW5mbyhmIlN1Y2Nlc3MgbWVzc2FnZSBkZXRlY3RlZDogJ3tzdWNjZXNzX21lc3NhZ2V9JyIpCiAgICAgICAgICAgIHNlbGYuY29uc29sZV9sb2dnZXIuaW5mbyhmIlN1Y2Nlc3MgbWVzc2FnZSBkZXRlY3RlZDogJ3tzdWNjZXNzX21lc3NhZ2V9JyIpCgogICAgICAgICMgQ2hlY2sgZm9yIGVycm9yIGtleXdvcmRzIGluIHRoZSBwYWdlIHNvdXJjZQogICAgICAgIGZvciBrZXl3b3JkIGluIGVycm9yX2tleXdvcmRzOgogICAgICAgICAgICBpZiBrZXl3b3JkIGluIHBhZ2Vfc291cmNlOgogICAgICAgICAgICAgICAgc2VsZi5sb2dnZXIud2FybmluZyhmIkVycm9yIGRldGVjdGVkOiBrZXl3b3JkICd7a2V5d29yZH0nIGZvdW5kIG9uIHRoZSBwYWdlLiIpCiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGVfbG9nZ2VyLndhcm5pbmcoZiJFcnJvciBkZXRlY3RlZDoga2V5d29yZCAne2tleXdvcmR9JyBmb3VuZCBvbiB0aGUgcGFnZS4iKQoKICAgIGRlZiBvYnNlcnZlX2VsZW1lbnRfY2hhbmdlcyhzZWxmLCBlbGVtZW50X2xvY2F0b3IsIHRpbWVvdXQ9MTApOgogICAgICAgICIiIk9ic2VydmUgc3BlY2lmaWMgZWxlbWVudHMgZm9yIGNoYW5nZXMgdXNpbmcgU2VsZW5pdW0ncyBleHBsaWNpdCB3YWl0cy4KCiAgICAgICAgQXJnczoKICAgICAgICAgICAgZWxlbWVudF9sb2NhdG9yICh0dXBsZSk6IExvY2F0b3IgdHVwbGUgdG8gZmluZCB0aGUgZWxlbWVudCAoZS5nLiwgKEJ5LklELCAnZWxlbWVudF9pZCcpKS4KICAgICAgICAgICAgdGltZW91dCAoaW50KTogVGltZSBpbiBzZWNvbmRzIHRvIHdhaXQgZm9yIHRoZSBlbGVtZW50IHRvIGNoYW5nZS4KICAgICAgICAiIiIKICAgICAgICB0cnk6CiAgICAgICAgICAgIFdlYkRyaXZlcldhaXQoc2VsZi5kcml2ZXIsIHRpbWVvdXQpLnVudGlsKEVDLnN0YWxlbmVzc19vZihzZWxmLmRyaXZlci5maW5kX2VsZW1lbnQoKmVsZW1lbnRfbG9jYXRvcikpKQogICAgICAgICAgICBzZWxmLmxvZ2dlci5pbmZvKCJEZXRlY3RlZCBhIGNoYW5nZSBpbiB0aGUgdGFyZ2V0ZWQgZWxlbWVudC4iKQogICAgICAgICAgICBzZWxmLmNvbnNvbGVfbG9nZ2VyLmluZm8oIkRldGVjdGVkIGEgY2hhbmdlIGluIHRoZSB0YXJnZXRlZCBlbGVtZW50LiIpCiAgICAgICAgZXhjZXB0IFRpbWVvdXRFeGNlcHRpb246CiAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oIk5vIGNoYW5nZSBkZXRlY3RlZCBpbiB0aGUgdGFyZ2V0ZWQgZWxlbWVudCB3aXRoaW4gdGhlIHRpbWVvdXQgcGVyaW9kLiIpCiAgICAgICAgICAgIHNlbGYuY29uc29sZV9sb2dnZXIuaW5mbygiTm8gY2hhbmdlIGRldGVjdGVkIGluIHRoZSB0YXJnZXRlZCBlbGVtZW50IHdpdGhpbiB0aGUgdGltZW91dCBwZXJpb2QuIikKCiAgICBkZWYgYWRkX211dGF0aW9uX29ic2VydmVyKHNlbGYsIHRhcmdldF9zZWxlY3Rvcik6CiAgICAgICAgIiIiSW5qZWN0IEphdmFTY3JpcHQgdG8gYWRkIGEgTXV0YXRpb25PYnNlcnZlciB0byB0aGUgdGFyZ2V0IGVsZW1lbnQuCgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIHRhcmdldF9zZWxlY3RvciAoc3RyKTogQ1NTIHNlbGVjdG9yIGZvciB0aGUgdGFyZ2V0IGVsZW1lbnQgdG8gb2JzZXJ2ZS4KICAgICAgICAiIiIKICAgICAgICBzY3JpcHQgPSBmIiIiCiAgICAgICAgdmFyIHRhcmdldE5vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCd7dGFyZ2V0X3NlbGVjdG9yfScpOwogICAgICAgIGlmICh0YXJnZXROb2RlKSB7ewogICAgICAgICAgICB2YXIgY29uZmlnID0ge3sgYXR0cmlidXRlczogdHJ1ZSwgY2hpbGRMaXN0OiB0cnVlLCBzdWJ0cmVlOiB0cnVlIH19OwogICAgICAgICAgICB2YXIgY2FsbGJhY2sgPSBmdW5jdGlvbihtdXRhdGlvbnNMaXN0LCBvYnNlcnZlcikge3sKICAgICAgICAgICAgICAgIG11dGF0aW9uc0xpc3QuZm9yRWFjaChmdW5jdGlvbihtdXRhdGlvbikge3sKICAgICAgICAgICAgICAgICAgICBpZiAobXV0YXRpb24udHlwZSA9PT0gJ2NoaWxkTGlzdCcgJiYgbXV0YXRpb24uYWRkZWROb2Rlcy5sZW5ndGggPiAwKSB7ewogICAgICAgICAgICAgICAgICAgICAgICBtdXRhdGlvbi5hZGRlZE5vZGVzLmZvckVhY2goZnVuY3Rpb24obm9kZSkge3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub2RlLm5vZGVUeXBlID09PSBOb2RlLlRFWFRfTk9ERSB8fCBub2RlLm5vZGVUeXBlID09PSBOb2RlLkVMRU1FTlRfTk9ERSkge3sKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cudXBkYXRlZFRleHRMb2dzLnB1c2gobm9kZS50ZXh0Q29udGVudC50cmltKCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0KICAgICAgICAgICAgICAgICAgICAgICAgfX0pOwogICAgICAgICAgICAgICAgICAgIH19IGVsc2UgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdhdHRyaWJ1dGVzJykge3sKICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnVwZGF0ZWRUZXh0TG9ncy5wdXNoKCdUaGUgJyArIG11dGF0aW9uLmF0dHJpYnV0ZU5hbWUgKyAnIGF0dHJpYnV0ZSB3YXMgbW9kaWZpZWQuIFVwZGF0ZWQgdmFsdWU6ICcgKyBtdXRhdGlvbi50YXJnZXQuZ2V0QXR0cmlidXRlKG11dGF0aW9uLmF0dHJpYnV0ZU5hbWUpKTsKICAgICAgICAgICAgICAgICAgICB9fQogICAgICAgICAgICAgICAgfX0pOwogICAgICAgICAgICB9fTsKICAgICAgICAgICAgdmFyIG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoY2FsbGJhY2spOwogICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKHRhcmdldE5vZGUsIGNvbmZpZyk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdNdXRhdGlvbk9ic2VydmVyIGFkZGVkIHRvIHRhcmdldCBub2RlOiB7dGFyZ2V0X3NlbGVjdG9yfScpOwogICAgICAgIH19IGVsc2Uge3sKICAgICAgICAgICAgY29uc29sZS5sb2coJ1RhcmdldCBub2RlIG5vdCBmb3VuZDoge3RhcmdldF9zZWxlY3Rvcn0nKTsKICAgICAgICB9fQogICAgICAgICIiIgogICAgICAgIHNlbGYuZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KHNjcmlwdCkKICAgICAgICBzZWxmLmxvZ2dlci5pbmZvKGYiTXV0YXRpb25PYnNlcnZlciBhZGRlZCB0byB0YXJnZXQgZWxlbWVudDoge3RhcmdldF9zZWxlY3Rvcn0iKQogICAgICAgIHNlbGYuY29uc29sZV9sb2dnZXIuaW5mbyhmIk11dGF0aW9uT2JzZXJ2ZXIgYWRkZWQgdG8gdGFyZ2V0IGVsZW1lbnQ6IHt0YXJnZXRfc2VsZWN0b3J9IikKCiAgICBkZWYgYWRkX29ic2VydmVyc19mb3JfZHluYW1pY19lbGVtZW50cyhzZWxmKToKICAgICAgICAiIiJBZGQgbXV0YXRpb24gb2JzZXJ2ZXJzIHRvIGVsZW1lbnRzIHRoYXQgYXJlIGtub3duIHRvIGNoYW5nZSBkeW5hbWljYWxseS4iIiIKICAgICAgICAjIEFkZCBvYnNlcnZlciBmb3IgdGhlIHZhbGlkaXR5IGRpc3BsYXkgc3BhbgogICAgICAgIHNlbGYuYWRkX211dGF0aW9uX29ic2VydmVyKCIuaW5wdXQtaXRlbV9fdmFsaWRpdHktZGlzcGxheSIpCiAgICAgICAgIyBBZGQgb2JzZXJ2ZXIgZm9yIHRoZSBmb3JtIGNvbnRyb2xzIHRoYXQgbWlnaHQgY2hhbmdlIGR5bmFtaWNhbGx5CiAgICAgICAgc2VsZi5hZGRfbXV0YXRpb25fb2JzZXJ2ZXIoIi5pbnB1dC1pdGVtX19jb250cm9scyIpCiAgICAgICAgc2VsZi5hZGRfbXV0YXRpb25fb2JzZXJ2ZXIoIi5pbnB1dC1pdGVtX19kaXNwbGF5LWlucHV0IikKCiAgICBkZWYgX2luaXRpYWxpemVfanNfbG9nZ2luZyhzZWxmKToKICAgICAgICAiIiJJbml0aWFsaXplIEphdmFTY3JpcHQgbG9nZ2luZyB0byBzdG9yZSB1cGRhdGVzIGluIGEgZ2xvYmFsIHZhcmlhYmxlLiIiIgogICAgICAgIHNjcmlwdCA9ICJ3aW5kb3cudXBkYXRlZFRleHRMb2dzID0gW107IgogICAgICAgIHNlbGYuZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KHNjcmlwdCkKCiAgICBkZWYgX2xvZ191cGRhdGVkX3RleHQoc2VsZik6CiAgICAgICAgIiIiUmV0cmlldmUgdXBkYXRlZCB0ZXh0IGxvZ2dlZCBieSBKYXZhU2NyaXB0IGFuZCBsb2cgaXQgdG8gdGhlIGNvbnNvbGUuIiIiCiAgICAgICAgc2NyaXB0ID0gInJldHVybiB3aW5kb3cudXBkYXRlZFRleHRMb2dzIHx8IFtdOyIKICAgICAgICB1cGRhdGVkX3RleHRfbG9ncyA9IHNlbGYuZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KHNjcmlwdCkKICAgICAgICBmb3IgbG9nIGluIHVwZGF0ZWRfdGV4dF9sb2dzOgogICAgICAgICAgICBpZiBsb2c6ICAjIE9ubHkgbG9nIG5vbi1lbXB0eSBjaGFuZ2VzCiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGVfbG9nZ2VyLmluZm8oZiJVcGRhdGVkIHRleHQgZGV0ZWN0ZWQ6IHtsb2d9IikKCiAgICAgICAgIyBDbGVhciB0aGUgbG9ncyBhZnRlciByZXRyaWV2YWwKICAgICAgICBzZWxmLmRyaXZlci5leGVjdXRlX3NjcmlwdCgid2luZG93LnVwZGF0ZWRUZXh0TG9ncyA9IFtdOyIpCgogICAgZGVmIHBvbGxfZm9yX2NoYW5nZXMoc2VsZiwgcG9sbGluZ19pbnRlcnZhbD0yLCBtYXhfYXR0ZW1wdHM9MTApOgogICAgICAgICIiIlBlcmlvZGljYWxseSBwb2xsIHRoZSBwYWdlIHNvdXJjZSB0byBjaGVjayBmb3IgYW55IGNoYW5nZXMuCgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIHBvbGxpbmdfaW50ZXJ2YWwgKGludCk6IEludGVydmFsIGJldHdlZW4gcG9sbGluZyBhdHRlbXB0cyBpbiBzZWNvbmRzLgogICAgICAgICAgICBtYXhfYXR0ZW1wdHMgKGludCk6IE1heGltdW0gbnVtYmVyIG9mIHBvbGxpbmcgYXR0ZW1wdHMuCiAgICAgICAgIiIiCiAgICAgICAgZm9yIGF0dGVtcHQgaW4gcmFuZ2UobWF4X2F0dGVtcHRzKToKICAgICAgICAgICAgdGltZS5zbGVlcChwb2xsaW5nX2ludGVydmFsKQogICAgICAgICAgICBjdXJyZW50X3BhZ2Vfc291cmNlID0gc2VsZi5kcml2ZXIucGFnZV9zb3VyY2UubG93ZXIoKQogICAgICAgICAgICBpZiBzZWxmLnByZXZpb3VzX3BhZ2Vfc291cmNlIGFuZCBzZWxmLnByZXZpb3VzX3BhZ2Vfc291cmNlICE9IGN1cnJlbnRfcGFnZV9zb3VyY2U6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5pbmZvKCJEZXRlY3RlZCBjaGFuZ2VzIGR1cmluZyBwb2xsaW5nLiIpCiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGVfbG9nZ2VyLmluZm8oIkRldGVjdGVkIGNoYW5nZXMgZHVyaW5nIHBvbGxpbmcuIikKICAgICAgICAgICAgICAgIHNlbGYuX2xvZ191cGRhdGVkX3RleHQoKQogICAgICAgICAgICAgICAgc2VsZi5wcmV2aW91c19wYWdlX3NvdXJjZSA9IGN1cnJlbnRfcGFnZV9zb3VyY2UKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5kZWJ1ZyhmIlBvbGxpbmcgYXR0ZW1wdCB7YXR0ZW1wdCArIDF9OiBObyBjaGFuZ2VzIGRldGVjdGVkLiIpCgogICAgZGVmIGNvbXBhcmVfZWxlbWVudF90ZXh0KHNlbGYsIGVsZW1lbnRfbG9jYXRvciwgcHJldmlvdXNfdGV4dD0iIik6CiAgICAgICAgIiIiQ29tcGFyZSB0aGUgdGV4dCBjb250ZW50IG9mIGEgc3BlY2lmaWMgZWxlbWVudCB0byBkZXRlY3QgY2hhbmdlcy4KCiAgICAgICAgQXJnczoKICAgICAgICAgICAgZWxlbWVudF9sb2NhdG9yICh0dXBsZSk6IExvY2F0b3IgdHVwbGUgdG8gZmluZCB0aGUgZWxlbWVudCAoZS5nLiwgKEJ5LklELCAnZWxlbWVudF9pZCcpKS4KICAgICAgICAgICAgcHJldmlvdXNfdGV4dCAoc3RyKTogVGhlIHByZXZpb3VzIHRleHQgY29udGVudCB0byBjb21wYXJlIGFnYWluc3QuCiAgICAgICAgIiIiCiAgICAgICAgdHJ5OgogICAgICAgICAgICBlbGVtZW50ID0gc2VsZi5kcml2ZXIuZmluZF9lbGVtZW50KCplbGVtZW50X2xvY2F0b3IpCiAgICAgICAgICAgIGN1cnJlbnRfdGV4dCA9IGVsZW1lbnQudGV4dC5zdHJpcCgpCiAgICAgICAgICAgIGlmIGN1cnJlbnRfdGV4dCBhbmQgY3VycmVudF90ZXh0ICE9IHByZXZpb3VzX3RleHQ6CiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGVfbG9nZ2VyLmluZm8oZiJFbGVtZW50IHRleHQgdXBkYXRlZDoge2N1cnJlbnRfdGV4dH0iKQogICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRfdGV4dAogICAgICAgICAgICByZXR1cm4gcHJldmlvdXNfdGV4dAogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgc2VsZi5sb2dnZXIuZXJyb3IoZiJFcnJvciBjb21wYXJpbmcgZWxlbWVudCB0ZXh0OiB7ZX0iKQogICAgICAgICAgICByZXR1cm4gcHJldmlvdXNfdGV4dAo",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAKYiAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAfCMAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"left_delete",
					null,
					"",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAHwjAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAfCMAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAHwjAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAfCMAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAADCQAAAAAAAAAAAAADCQAAAAAAAAMJAAAAAAAAHwjAABpbXBvcnQgbG9nZ2luZwppbXBvcnQgdGltZQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24uYnkgaW1wb3J0IEJ5CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQudWkgaW1wb3J0IFdlYkRyaXZlcldhaXQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydCBpbXBvcnQgZXhwZWN0ZWRfY29uZGl0aW9ucyBhcyBFQwpmcm9tIHNlbGVuaXVtLmNvbW1vbi5leGNlcHRpb25zIGltcG9ydCBUaW1lb3V0RXhjZXB0aW9uCgpjbGFzcyBKYXZhU2NyaXB0Q2hhbmdlRGV0ZWN0b3I6CiAgICBkZWYgX19pbml0X18oc2VsZiwgZHJpdmVyKToKICAgICAgICBzZWxmLmRyaXZlciA9IGRyaXZlcgogICAgICAgIHNlbGYubG9nZ2VyID0gbG9nZ2luZy5nZXRMb2dnZXIoX19uYW1lX18pCiAgICAgICAgc2VsZi5wcmV2aW91c19wYWdlX3NvdXJjZSA9ICIiCgogICAgICAgICMgU2V0IHVwIGNvbnNvbGUgaGFuZGxlciBmb3IgbG9nZ2luZyBpbXBvcnRhbnQgaW5mb3JtYXRpb24KICAgICAgICBjb25zb2xlX2hhbmRsZXIgPSBsb2dnaW5nLlN0cmVhbUhhbmRsZXIoKQogICAgICAgIGNvbnNvbGVfaGFuZGxlci5zZXRMZXZlbChsb2dnaW5nLklORk8pCiAgICAgICAgY29uc29sZV9mb3JtYXR0ZXIgPSBsb2dnaW5nLkZvcm1hdHRlcignJShhc2N0aW1lKXMgLSAlKGxldmVsbmFtZSlzIC0gJShtZXNzYWdlKXMnKQogICAgICAgIGNvbnNvbGVfaGFuZGxlci5zZXRGb3JtYXR0ZXIoY29uc29sZV9mb3JtYXR0ZXIpCiAgICAgICAgc2VsZi5jb25zb2xlX2xvZ2dlciA9IGxvZ2dpbmcuZ2V0TG9nZ2VyKCdjb25zb2xlX2xvZ2dlcicpCiAgICAgICAgc2VsZi5jb25zb2xlX2xvZ2dlci5hZGRIYW5kbGVyKGNvbnNvbGVfaGFuZGxlcikKICAgICAgICBzZWxmLmNvbnNvbGVfbG9nZ2VyLnNldExldmVsKGxvZ2dpbmcuSU5GTykKCiAgICAgICAgIyBJbml0aWFsaXplIEphdmFTY3JpcHQgbG9nIHN0b3JhZ2Ugb24gdGhlIHBhZ2UKICAgICAgICBzZWxmLl9pbml0aWFsaXplX2pzX2xvZ2dpbmcoKQoKICAgIGRlZiBjaGVja19mb3JfanNfY2hhbmdlcyhzZWxmLCBzdWNjZXNzX21lc3NhZ2U9Tm9uZSwgZXJyb3Jfa2V5d29yZHM9Tm9uZSwgZGVsYXk9Mik6CiAgICAgICAgIiIiQ2hlY2sgZm9yIEphdmFTY3JpcHQgY2hhbmdlcyBvciBlcnJvciBtZXNzYWdlcyBvbiB0aGUgcGFnZS4KCiAgICAgICAgQXJnczoKICAgICAgICAgICAgc3VjY2Vzc19tZXNzYWdlIChzdHIpOiBUaGUgZXhwZWN0ZWQgc3VjY2VzcyBtZXNzYWdlIGFmdGVyIGNoYW5nZXMgYXJlIGFwcGxpZWQuCiAgICAgICAgICAgIGVycm9yX2tleXdvcmRzIChsaXN0IG9mIHN0cik6IExpc3Qgb2Yga2V5d29yZHMgaW5kaWNhdGluZyBlcnJvcnMuCiAgICAgICAgICAgIGRlbGF5IChpbnQpOiBUaW1lIGluIHNlY29uZHMgdG8gd2FpdCBmb3IgY2hhbmdlcyB0byBhcHBlYXIuCiAgICAgICAgIiIiCiAgICAgICAgaWYgZXJyb3Jfa2V5d29yZHMgaXMgTm9uZToKICAgICAgICAgICAgZXJyb3Jfa2V5d29yZHMgPSBbImVycm9yIiwgImZhaWxlZCIsICJpbnZhbGlkIl0KCiAgICAgICAgIyBXYWl0IGZvciBwb3RlbnRpYWwgY2hhbmdlcyBvbiB0aGUgcGFnZQogICAgICAgIHRpbWUuc2xlZXAoZGVsYXkpCgogICAgICAgICMgQ2FwdHVyZSB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgcGFnZSBzb3VyY2UKICAgICAgICBwYWdlX3NvdXJjZSA9IHNlbGYuZHJpdmVyLnBhZ2Vfc291cmNlLmxvd2VyKCkKCiAgICAgICAgIyBMb2cgdGhlIGxlbmd0aHMgb2YgcHJldmlvdXMgYW5kIGN1cnJlbnQgcGFnZSBzb3VyY2VzIGZvciBkZWJ1Z2dpbmcgcHVycG9zZXMKICAgICAgICBzZWxmLmxvZ2dlci5kZWJ1ZyhmIlByZXZpb3VzIHBhZ2Ugc291cmNlIGxlbmd0aDoge2xlbihzZWxmLnByZXZpb3VzX3BhZ2Vfc291cmNlKX0iKQogICAgICAgIHNlbGYubG9nZ2VyLmRlYnVnKGYiQ3VycmVudCBwYWdlIHNvdXJjZSBsZW5ndGg6IHtsZW4ocGFnZV9zb3VyY2UpfSIpCgogICAgICAgICMgQ29tcGFyZSB0aGUgY3VycmVudCBwYWdlIHNvdXJjZSB3aXRoIHRoZSBwcmV2aW91cyBvbmUgdG8gZGV0ZWN0IGFueSBjaGFuZ2VzCiAgICAgICAgaWYgc2VsZi5wcmV2aW91c19wYWdlX3NvdXJjZSBhbmQgc2VsZi5wcmV2aW91c19wYWdlX3NvdXJjZSAhPSBwYWdlX3NvdXJjZToKICAgICAgICAgICAgc2VsZi5sb2dnZXIuaW5mbygiRGV0ZWN0ZWQgY2hhbmdlcyBpbiB0aGUgcGFnZSBzb3VyY2UuIikKICAgICAgICAgICAgc2VsZi5jb25zb2xlX2xvZ2dlci5pbmZvKCJEZXRlY3RlZCBjaGFuZ2VzIGluIHRoZSBwYWdlIHNvdXJjZS4iKQogICAgICAgICAgICBzZWxmLl9sb2dfdXBkYXRlZF90ZXh0KCkgICMgTG9nIHRoZSB1cGRhdGVkIHRleHQgZnJvbSBKYXZhU2NyaXB0IGNoYW5nZXMKICAgICAgICBlbHNlOgogICAgICAgICAgICBzZWxmLmxvZ2dlci5pbmZvKCJObyBjaGFuZ2VzIGRldGVjdGVkIGluIHRoZSBwYWdlIHNvdXJjZS4iKQogICAgICAgICAgICBzZWxmLmNvbnNvbGVfbG9nZ2VyLmluZm8oIk5vIGNoYW5nZXMgZGV0ZWN0ZWQgaW4gdGhlIHBhZ2Ugc291cmNlLiIpCiAgICAgICAgc2VsZi5wcmV2aW91c19wYWdlX3NvdXJjZSA9IHBhZ2Vfc291cmNlCgogICAgICAgICMgQ2hlY2sgZm9yIHN1Y2Nlc3MgbWVzc2FnZXMKICAgICAgICBpZiBzdWNjZXNzX21lc3NhZ2UgYW5kIHN1Y2Nlc3NfbWVzc2FnZS5sb3dlcigpIGluIHBhZ2Vfc291cmNlOgogICAgICAgICAgICBzZWxmLmxvZ2dlci5pbmZvKGYiU3VjY2VzcyBtZXNzYWdlIGRldGVjdGVkOiAne3N1Y2Nlc3NfbWVzc2FnZX0nIikKICAgICAgICAgICAgc2VsZi5jb25zb2xlX2xvZ2dlci5pbmZvKGYiU3VjY2VzcyBtZXNzYWdlIGRldGVjdGVkOiAne3N1Y2Nlc3NfbWVzc2FnZX0nIikKCiAgICAgICAgIyBDaGVjayBmb3IgZXJyb3Iga2V5d29yZHMgaW4gdGhlIHBhZ2Ugc291cmNlCiAgICAgICAgZm9yIGtleXdvcmQgaW4gZXJyb3Jfa2V5d29yZHM6CiAgICAgICAgICAgIGlmIGtleXdvcmQgaW4gcGFnZV9zb3VyY2U6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci53YXJuaW5nKGYiRXJyb3IgZGV0ZWN0ZWQ6IGtleXdvcmQgJ3trZXl3b3JkfScgZm91bmQgb24gdGhlIHBhZ2UuIikKICAgICAgICAgICAgICAgIHNlbGYuY29uc29sZV9sb2dnZXIud2FybmluZyhmIkVycm9yIGRldGVjdGVkOiBrZXl3b3JkICd7a2V5d29yZH0nIGZvdW5kIG9uIHRoZSBwYWdlLiIpCgogICAgZGVmIG9ic2VydmVfZWxlbWVudF9jaGFuZ2VzKHNlbGYsIGVsZW1lbnRfbG9jYXRvciwgdGltZW91dD0xMCk6CiAgICAgICAgIiIiT2JzZXJ2ZSBzcGVjaWZpYyBlbGVtZW50cyBmb3IgY2hhbmdlcyB1c2luZyBTZWxlbml1bSdzIGV4cGxpY2l0IHdhaXRzLgoKICAgICAgICBBcmdzOgogICAgICAgICAgICBlbGVtZW50X2xvY2F0b3IgKHR1cGxlKTogTG9jYXRvciB0dXBsZSB0byBmaW5kIHRoZSBlbGVtZW50IChlLmcuLCAoQnkuSUQsICdlbGVtZW50X2lkJykpLgogICAgICAgICAgICB0aW1lb3V0IChpbnQpOiBUaW1lIGluIHNlY29uZHMgdG8gd2FpdCBmb3IgdGhlIGVsZW1lbnQgdG8gY2hhbmdlLgogICAgICAgICIiIgogICAgICAgIHRyeToKICAgICAgICAgICAgV2ViRHJpdmVyV2FpdChzZWxmLmRyaXZlciwgdGltZW91dCkudW50aWwoRUMuc3RhbGVuZXNzX29mKHNlbGYuZHJpdmVyLmZpbmRfZWxlbWVudCgqZWxlbWVudF9sb2NhdG9yKSkpCiAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oIkRldGVjdGVkIGEgY2hhbmdlIGluIHRoZSB0YXJnZXRlZCBlbGVtZW50LiIpCiAgICAgICAgICAgIHNlbGYuY29uc29sZV9sb2dnZXIuaW5mbygiRGV0ZWN0ZWQgYSBjaGFuZ2UgaW4gdGhlIHRhcmdldGVkIGVsZW1lbnQuIikKICAgICAgICBleGNlcHQgVGltZW91dEV4Y2VwdGlvbjoKICAgICAgICAgICAgc2VsZi5sb2dnZXIuaW5mbygiTm8gY2hhbmdlIGRldGVjdGVkIGluIHRoZSB0YXJnZXRlZCBlbGVtZW50IHdpdGhpbiB0aGUgdGltZW91dCBwZXJpb2QuIikKICAgICAgICAgICAgc2VsZi5jb25zb2xlX2xvZ2dlci5pbmZvKCJObyBjaGFuZ2UgZGV0ZWN0ZWQgaW4gdGhlIHRhcmdldGVkIGVsZW1lbnQgd2l0aGluIHRoZSB0aW1lb3V0IHBlcmlvZC4iKQoKICAgIGRlZiBhZGRfbXV0YXRpb25fb2JzZXJ2ZXIoc2VsZiwgdGFyZ2V0X3NlbGVjdG9yKToKICAgICAgICAiIiJJbmplY3QgSmF2YVNjcmlwdCB0byBhZGQgYSBNdXRhdGlvbk9ic2VydmVyIHRvIHRoZSB0YXJnZXQgZWxlbWVudC4KCiAgICAgICAgQXJnczoKICAgICAgICAgICAgdGFyZ2V0X3NlbGVjdG9yIChzdHIpOiBDU1Mgc2VsZWN0b3IgZm9yIHRoZSB0YXJnZXQgZWxlbWVudCB0byBvYnNlcnZlLgogICAgICAgICIiIgogICAgICAgIHNjcmlwdCA9IGYiIiIKICAgICAgICB2YXIgdGFyZ2V0Tm9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3t0YXJnZXRfc2VsZWN0b3J9Jyk7CiAgICAgICAgaWYgKHRhcmdldE5vZGUpIHt7CiAgICAgICAgICAgIHZhciBjb25maWcgPSB7eyBhdHRyaWJ1dGVzOiB0cnVlLCBjaGlsZExpc3Q6IHRydWUsIHN1YnRyZWU6IHRydWUgfX07CiAgICAgICAgICAgIHZhciBjYWxsYmFjayA9IGZ1bmN0aW9uKG11dGF0aW9uc0xpc3QsIG9ic2VydmVyKSB7ewogICAgICAgICAgICAgICAgbXV0YXRpb25zTGlzdC5mb3JFYWNoKGZ1bmN0aW9uKG11dGF0aW9uKSB7ewogICAgICAgICAgICAgICAgICAgIGlmIChtdXRhdGlvbi50eXBlID09PSAnY2hpbGRMaXN0JyAmJiBtdXRhdGlvbi5hZGRlZE5vZGVzLmxlbmd0aCA+IDApIHt7CiAgICAgICAgICAgICAgICAgICAgICAgIG11dGF0aW9uLmFkZGVkTm9kZXMuZm9yRWFjaChmdW5jdGlvbihub2RlKSB7ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFIHx8IG5vZGUubm9kZVR5cGUgPT09IE5vZGUuRUxFTUVOVF9OT0RFKSB7ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdNdXRhdGlvbiBkZXRlY3RlZDogJyArIG5vZGUudGV4dENvbnRlbnQudHJpbSgpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cudXBkYXRlZFRleHRMb2dzLnB1c2gobm9kZS50ZXh0Q29udGVudC50cmltKCkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0KICAgICAgICAgICAgICAgICAgICAgICAgfX0pOwogICAgICAgICAgICAgICAgICAgIH19IGVsc2UgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdhdHRyaWJ1dGVzJykge3sKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVwZGF0ZWRBdHRyaWJ1dGUgPSAnVGhlICcgKyBtdXRhdGlvbi5hdHRyaWJ1dGVOYW1lICsgJyBhdHRyaWJ1dGUgd2FzIG1vZGlmaWVkLiBVcGRhdGVkIHZhbHVlOiAnICsgbXV0YXRpb24udGFyZ2V0LmdldEF0dHJpYnV0ZShtdXRhdGlvbi5hdHRyaWJ1dGVOYW1lKTsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codXBkYXRlZEF0dHJpYnV0ZSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy51cGRhdGVkVGV4dExvZ3MucHVzaCh1cGRhdGVkQXR0cmlidXRlKTsKICAgICAgICAgICAgICAgICAgICB9fQogICAgICAgICAgICAgICAgfX0pOwogICAgICAgICAgICB9fTsKICAgICAgICAgICAgdmFyIG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoY2FsbGJhY2spOwogICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKHRhcmdldE5vZGUsIGNvbmZpZyk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdNdXRhdGlvbk9ic2VydmVyIGFkZGVkIHRvIHRhcmdldCBub2RlOiB7dGFyZ2V0X3NlbGVjdG9yfScpOwogICAgICAgIH19IGVsc2Uge3sKICAgICAgICAgICAgY29uc29sZS5sb2coJ1RhcmdldCBub2RlIG5vdCBmb3VuZDoge3RhcmdldF9zZWxlY3Rvcn0nKTsKICAgICAgICB9fQogICAgICAgICIiIgogICAgICAgIHNlbGYuZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KHNjcmlwdCkKICAgICAgICBzZWxmLmxvZ2dlci5pbmZvKGYiTXV0YXRpb25PYnNlcnZlciBhZGRlZCB0byB0YXJnZXQgZWxlbWVudDoge3RhcmdldF9zZWxlY3Rvcn0iKQogICAgICAgIHNlbGYuY29uc29sZV9sb2dnZXIuaW5mbyhmIk11dGF0aW9uT2JzZXJ2ZXIgYWRkZWQgdG8gdGFyZ2V0IGVsZW1lbnQ6IHt0YXJnZXRfc2VsZWN0b3J9IikKCiAgICBkZWYgYWRkX29ic2VydmVyc19mb3JfZHluYW1pY19lbGVtZW50cyhzZWxmKToKICAgICAgICAiIiJBZGQgbXV0YXRpb24gb2JzZXJ2ZXJzIHRvIGVsZW1lbnRzIHRoYXQgYXJlIGtub3duIHRvIGNoYW5nZSBkeW5hbWljYWxseS4iIiIKICAgICAgICAjIEFkZCBvYnNlcnZlciBmb3IgdGhlIHZhbGlkaXR5IGRpc3BsYXkgc3BhbgogICAgICAgIHNlbGYuYWRkX211dGF0aW9uX29ic2VydmVyKCIuaW5wdXQtaXRlbV9fdmFsaWRpdHktZGlzcGxheSIpCiAgICAgICAgIyBBZGQgb2JzZXJ2ZXIgZm9yIHRoZSBmb3JtIGNvbnRyb2xzIHRoYXQgbWlnaHQgY2hhbmdlIGR5bmFtaWNhbGx5CiAgICAgICAgc2VsZi5hZGRfbXV0YXRpb25fb2JzZXJ2ZXIoIi5pbnB1dC1pdGVtX19jb250cm9scyIpCiAgICAgICAgc2VsZi5hZGRfbXV0YXRpb25fb2JzZXJ2ZXIoIi5pbnB1dC1pdGVtX19kaXNwbGF5LWlucHV0IikKCiAgICBkZWYgX2luaXRpYWxpemVfanNfbG9nZ2luZyhzZWxmKToKICAgICAgICAiIiJJbml0aWFsaXplIEphdmFTY3JpcHQgbG9nZ2luZyB0byBzdG9yZSB1cGRhdGVzIGluIGEgZ2xvYmFsIHZhcmlhYmxlLiIiIgogICAgICAgIHNjcmlwdCA9ICJ3aW5kb3cudXBkYXRlZFRleHRMb2dzID0gW107IgogICAgICAgIHNlbGYuZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KHNjcmlwdCkKCiAgICBkZWYgX2xvZ191cGRhdGVkX3RleHQoc2VsZik6CiAgICAgICAgIiIiUmV0cmlldmUgdXBkYXRlZCB0ZXh0IGxvZ2dlZCBieSBKYXZhU2NyaXB0IGFuZCBsb2cgaXQgdG8gdGhlIGNvbnNvbGUuIiIiCiAgICAgICAgc2NyaXB0ID0gInJldHVybiB3aW5kb3cudXBkYXRlZFRleHRMb2dzIHx8IFtdOyIKICAgICAgICB1cGRhdGVkX3RleHRfbG9ncyA9IHNlbGYuZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KHNjcmlwdCkKICAgICAgICBmb3IgbG9nIGluIHVwZGF0ZWRfdGV4dF9sb2dzOgogICAgICAgICAgICBpZiBsb2c6ICAjIE9ubHkgbG9nIG5vbi1lbXB0eSBjaGFuZ2VzCiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGVfbG9nZ2VyLmluZm8oZiJVcGRhdGVkIHRleHQgZGV0ZWN0ZWQ6IHtsb2d9IikKCiAgICAgICAgIyBDbGVhciB0aGUgbG9ncyBhZnRlciByZXRyaWV2YWwKICAgICAgICBzZWxmLmRyaXZlci5leGVjdXRlX3NjcmlwdCgid2luZG93LnVwZGF0ZWRUZXh0TG9ncyA9IFtdOyIpCgogICAgZGVmIHBvbGxfZm9yX2NoYW5nZXMoc2VsZiwgcG9sbGluZ19pbnRlcnZhbD0yLCBtYXhfYXR0ZW1wdHM9MTApOgogICAgICAgICIiIlBlcmlvZGljYWxseSBwb2xsIHRoZSBwYWdlIHNvdXJjZSB0byBjaGVjayBmb3IgYW55IGNoYW5nZXMuCgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIHBvbGxpbmdfaW50ZXJ2YWwgKGludCk6IEludGVydmFsIGJldHdlZW4gcG9sbGluZyBhdHRlbXB0cyBpbiBzZWNvbmRzLgogICAgICAgICAgICBtYXhfYXR0ZW1wdHMgKGludCk6IE1heGltdW0gbnVtYmVyIG9mIHBvbGxpbmcgYXR0ZW1wdHMuCiAgICAgICAgIiIiCiAgICAgICAgZm9yIGF0dGVtcHQgaW4gcmFuZ2UobWF4X2F0dGVtcHRzKToKICAgICAgICAgICAgdGltZS5zbGVlcChwb2xsaW5nX2ludGVydmFsKQogICAgICAgICAgICBjdXJyZW50X3BhZ2Vfc291cmNlID0gc2VsZi5kcml2ZXIucGFnZV9zb3VyY2UubG93ZXIoKQogICAgICAgICAgICBpZiBzZWxmLnByZXZpb3VzX3BhZ2Vfc291cmNlIGFuZCBzZWxmLnByZXZpb3VzX3BhZ2Vfc291cmNlICE9IGN1cnJlbnRfcGFnZV9zb3VyY2U6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5pbmZvKCJEZXRlY3RlZCBjaGFuZ2VzIGR1cmluZyBwb2xsaW5nLiIpCiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGVfbG9nZ2VyLmluZm8oIkRldGVjdGVkIGNoYW5nZXMgZHVyaW5nIHBvbGxpbmcuIikKICAgICAgICAgICAgICAgIHNlbGYuX2xvZ191cGRhdGVkX3RleHQoKQogICAgICAgICAgICAgICAgc2VsZi5wcmV2aW91c19wYWdlX3NvdXJjZSA9IGN1cnJlbnRfcGFnZV9zb3VyY2UKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5kZWJ1ZyhmIlBvbGxpbmcgYXR0ZW1wdCB7YXR0ZW1wdCArIDF9OiBObyBjaGFuZ2VzIGRldGVjdGVkLiIpCgogICAgZGVmIGNvbXBhcmVfZWxlbWVudF90ZXh0KHNlbGYsIGVsZW1lbnRfbG9jYXRvciwgcHJldmlvdXNfdGV4dD0iIik6CiAgICAgICAgIiIiQ29tcGFyZSB0aGUgdGV4dCBjb250ZW50IG9mIGEgc3BlY2lmaWMgZWxlbWVudCB0byBkZXRlY3QgY2hhbmdlcy4KCiAgICAgICAgQXJnczoKICAgICAgICAgICAgZWxlbWVudF9sb2NhdG9yICh0dXBsZSk6IExvY2F0b3IgdHVwbGUgdG8gZmluZCB0aGUgZWxlbWVudCAoZS5nLiwgKEJ5LklELCAnZWxlbWVudF9pZCcpKS4KICAgICAgICAgICAgcHJldmlvdXNfdGV4dCAoc3RyKTogVGhlIHByZXZpb3VzIHRleHQgY29udGVudCB0byBjb21wYXJlIGFnYWluc3QuCiAgICAgICAgIiIiCiAgICAgICAgdHJ5OgogICAgICAgICAgICBlbGVtZW50ID0gc2VsZi5kcml2ZXIuZmluZF9lbGVtZW50KCplbGVtZW50X2xvY2F0b3IpCiAgICAgICAgICAgIGN1cnJlbnRfdGV4dCA9IGVsZW1lbnQudGV4dC5zdHJpcCgpCiAgICAgICAgICAgIGlmIGN1cnJlbnRfdGV4dCBhbmQgY3VycmVudF90ZXh0ICE9IHByZXZpb3VzX3RleHQ6CiAgICAgICAgICAgICAgICBzZWxmLmNvbnNvbGVfbG9nZ2VyLmluZm8oZiJFbGVtZW50IHRleHQgdXBkYXRlZDoge2N1cnJlbnRfdGV4dH0iKQogICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRfdGV4dAogICAgICAgICAgICByZXR1cm4gcHJldmlvdXNfdGV4dAogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgc2VsZi5sb2dnZXIuZXJyb3IoZiJFcnJvciBjb21wYXJpbmcgZWxlbWVudCB0ZXh0OiB7ZX0iKQogICAgICAgICAgICByZXR1cm4gcHJldmlvdXNfdGV4dAo",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAHwjAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAwkAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAaiQAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAGokAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAaiQAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"left_delete",
					null,
					"",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAGokAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAdiQAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "selenium_fuzzer/__init__.py",
			"settings":
			{
				"buffer_size": 112,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAKQAAAAAAAAAAAAAA",
					"GwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"left_delete",
					null,
					"AQAAACgAAAAAAAAAKAAAAAAAAAABAAAACg",
					"GwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkAAAAAAAAAKQAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACgAAAAAAAAAKQAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAAAAAAAAAAoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAApAAAAIyBJbml0aWFsaXplIHRoZSBzZWxlbml1bV9mdXp6ZXIgcGFja2FnZQo",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKQAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAiwAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					2,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAaAAAAZnJvbSAuZnV6emVyIGltcG9ydCBGdXp6ZXI",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAACg",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "selenium_fuzzer/config.py",
			"settings":
			{
				"buffer_size": 343,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAKAAAAAAAAAAAAAAA",
					"GwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIyBJbml0aWFsaXplIHRoZSBzZWxlbml1bV9mdXp6ZXIgcGFja2FnZQ",
					"GwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAKAAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAVwEAAAAAAAAAAAAA",
					"GwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAVgEAAAAAAAAAAAAAVgEAAAAAAABWAQAAAAAAAFcBAABpbXBvcnQgb3MKCmNsYXNzIENvbmZpZzoKICAgICIiIkNvbmZpZ3VyYXRpb24gc2V0dGluZ3MgZm9yIHRoZSBzZWxlbml1bSBmdXp6ZXIuIiIiCiAgICBDSFJPTUVEUklWRVJfUEFUSCA9IG9zLmdldGVudignQ0hST01FRFJJVkVSX1BBVEgnLCAnL3Vzci9iaW4vY2hyb21lZHJpdmVyJykKICAgIFNFTEVOSVVNX0hFQURMRVNTID0gb3MuZ2V0ZW52KCdTRUxFTklVTV9IRUFETEVTUycsICdUcnVlJykgPT0gJ1RydWUnCiAgICBMT0dfTEVWRUwgPSBvcy5nZXRlbnYoJ0xPR19MRVZFTCcsICdJTkZPJykKICAgIExPR19GSUxFID0gb3MuZ2V0ZW52KCdMT0dfRklMRScsICdzZWxlbml1bV9mdXp6ZXIubG9nJykK",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXAQAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABWAQAAaW1wb3J0IG9zCgpjbGFzcyBDb25maWc6CiAgICAiIiJDb25maWd1cmF0aW9uIHNldHRpbmdzIGZvciB0aGUgc2VsZW5pdW0gZnV6emVyLiIiIgogICAgQ0hST01FRFJJVkVSX1BBVEggPSBvcy5nZXRlbnYoJ0NIUk9NRURSSVZFUl9QQVRIJywgJy91c3IvYmluL2Nocm9tZWRyaXZlcicpCiAgICBTRUxFTklVTV9IRUFETEVTUyA9IG9zLmdldGVudignU0VMRU5JVU1fSEVBRExFU1MnLCAnVHJ1ZScpID09ICdUcnVlJwogICAgTE9HX0xFVkVMID0gb3MuZ2V0ZW52KCdMT0dfTEVWRUwnLCAnSU5GTycpCiAgICBMT0dfRklMRSA9IG9zLmdldGVudignTE9HX0ZJTEUnLCAnc2VsZW5pdW1fZnV6emVyLmxvZycp",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAFYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAADgMAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAVgEAAAAAAAAAAAAAVgEAAAAAAABWAQAAAAAAAA4DAABmcm9tIHNlbGVuaXVtIGltcG9ydCB3ZWJkcml2ZXIKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY2hyb21lLm9wdGlvbnMgaW1wb3J0IE9wdGlvbnMKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY2hyb21lLnNlcnZpY2UgaW1wb3J0IFNlcnZpY2UKZnJvbSBzZWxlbml1bV9mdXp6ZXIuY29uZmlnIGltcG9ydCBDb25maWcKCmRlZiBjcmVhdGVfZHJpdmVyKGhlYWRsZXNzOiBib29sID0gRmFsc2UpOgogICAgIiIiQ3JlYXRlIGFuZCBjb25maWd1cmUgYSBTZWxlbml1bSBXZWJEcml2ZXIgaW5zdGFuY2UuIiIiCiAgICBvcHRpb25zID0gT3B0aW9ucygpCiAgICBpZiBoZWFkbGVzczoKICAgICAgICBvcHRpb25zLmFkZF9hcmd1bWVudCgiLS1oZWFkbGVzcyIpCiAgICBvcHRpb25zLmFkZF9hcmd1bWVudCgiLS1kaXNhYmxlLWdwdSIpCiAgICBvcHRpb25zLmFkZF9hcmd1bWVudCgiLS13aW5kb3ctc2l6ZT0xOTIwLDEwODAiKQogICAgb3B0aW9ucy5hZGRfYXJndW1lbnQoIi0tbm8tc2FuZGJveCIpCiAgICBvcHRpb25zLmFkZF9hcmd1bWVudCgiLS1kaXNhYmxlLWRldi1zaG0tdXNhZ2UiKQoKICAgICMgVXNlIHRoZSBDaHJvbWVEcml2ZXIgcGF0aCBmcm9tIGNvbmZpZy5weQogICAgZHJpdmVyX3BhdGggPSBDb25maWcuQ0hST01FRFJJVkVSX1BBVEgKICAgIHNlcnZpY2UgPSBTZXJ2aWNlKGV4ZWN1dGFibGVfcGF0aD1kcml2ZXJfcGF0aCkKCiAgICBkcml2ZXIgPSB3ZWJkcml2ZXIuQ2hyb21lKHNlcnZpY2U9c2VydmljZSwgb3B0aW9ucz1vcHRpb25zKQogICAgcmV0dXJuIGRyaXZlcg",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOAwAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					4,
					"left_delete",
					null,
					"BAAAABcBAAAAAAAAFwEAAAAAAAABAAAATxYBAAAAAAAAFgEAAAAAAAABAAAARhUBAAAAAAAAFQEAAAAAAAABAAAAThQBAAAAAAAAFAEAAAAAAAABAAAASQ",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgBAAAAAAAAGAEAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "DEBUG"
					},
					"BQAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABcBAAAAAAAAAAAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAZAQAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABQBAAAAAAAAFAEAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "selenium_fuzzer/utils.py",
			"settings":
			{
				"buffer_size": 3306,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAdwUAAAAAAAAAAAAA",
					"GwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"",
					null,
					"AQAAAHcFAAAAAAAAigwAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdwUAAAAAAAB3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAHcFAAAAAAAAdwUAAAAAAAA7AAAAZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIucmVtb3RlLndlYmVsZW1lbnQgaW1wb3J0IFdlYkVsZW1lbnQ",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsgUAAAAAAAB3BQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"cut",
					{
						"event":
						{
							"modifier_keys":
							{
							},
							"text_point": 1401,
							"x": 331.529571533,
							"y": 949.570800781
						}
					},
					"AQAAAHgFAAAAAAAAeAUAAAAAAAArAAAAZnJvbSBzZWxlbml1bV9mdXp6ZXIudXRpbHMgaW1wb3J0IGdldF94cGF0aA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAowUAAAAAAAB4BQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					2,
					"left_delete",
					null,
					"AgAAAHcFAAAAAAAAdwUAAAAAAAABAAAACnYFAAAAAAAAdgUAAAAAAAABAAAACg",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeAUAAAAAAAB4BQAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"paste",
					{
						"event":
						{
							"modifier_keys":
							{
							},
							"text_point": 170,
							"x": 360.734436035,
							"y": 130.64024353
						}
					},
					"AQAAAKoAAAAAAAAA1QAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANUAAAAAAAAA1gAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1QAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					2,
					"left_delete",
					null,
					"AgAAAKoAAAAAAAAAqgAAAAAAAAArAAAAZnJvbSBzZWxlbml1bV9mdXp6ZXIudXRpbHMgaW1wb3J0IGdldF94cGF0aKkAAAAAAAAAqQAAAAAAAAABAAAACg",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1QAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKkAAAAAAAAAqgAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqQAAAAAAAACpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"",
					null,
					"AQAAAKoAAAAAAAAA8AAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgAAAAAAAACqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAACBDAAAaW1wb3J0IHJhbmRvbQppbXBvcnQgc3RyaW5nCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnJlbW90ZS53ZWJkcml2ZXIgaW1wb3J0IFdlYkRyaXZlcgpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5yZW1vdGUud2ViZWxlbWVudCBpbXBvcnQgV2ViRWxlbWVudApmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24uYnkgaW1wb3J0IEJ5ICAjIEVuc3VyZSB0aGlzIGlzIGltcG9ydGVkCgpkZWYgZ2VuZXJhdGVfc2FmZV9wYXlsb2FkcygpIC0+IExpc3Rbc3RyXToKICAgICIiIkdlbmVyYXRlIGEgbGlzdCBvZiBzYWZlIHBheWxvYWRzIGZvciBmdXp6aW5nLiIiIgogICAgcGF5bG9hZHMgPSBbXQoKICAgICMgU2hvcnQgcmFuZG9tIHN0cmluZ3MKICAgIGZvciBfIGluIHJhbmdlKDUpOgogICAgICAgIHBheWxvYWRzLmFwcGVuZCgnJy5qb2luKHJhbmRvbS5jaG9pY2VzKHN0cmluZy5hc2NpaV9sZXR0ZXJzICsgc3RyaW5nLmRpZ2l0cywgaz0xMCkpKQoKICAgICMgTG9uZyBzdHJpbmdzIHRvIHRlc3QgaW5wdXQgbGltaXRzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ0EnICogMjU2KQogICAgcGF5bG9hZHMuYXBwZW5kKCdCJyAqIDEwMjQpCgogICAgIyBTdHJpbmdzIHdpdGggc3BlY2lhbCBjaGFyYWN0ZXJzCiAgICBzcGVjaWFsX2NoYXJzID0gIiFAIyQlXiYqKClfKy09W117fXw7OicsLjw+Lz8iCiAgICBwYXlsb2Fkcy5hcHBlbmQoc3BlY2lhbF9jaGFycykKCiAgICAjIFVuaWNvZGUgY2hhcmFjdGVycwogICAgcGF5bG9hZHMuYXBwZW5kKCfmtYvor5XkuK3mloflrZfnrKYnKSAgIyBDaGluZXNlIGNoYXJhY3RlcnMKICAgIHBheWxvYWRzLmFwcGVuZCgn8J+Yg/CfkY3wn4+78J+UpScpICAgICAgIyBFbW9qaXMKCiAgICAjIE51bWVyaWMgaW5wdXRzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJzEyMzQ1Njc4OTAnKQogICAgcGF5bG9hZHMuYXBwZW5kKCctOTk5OTk5OTk5JykKCiAgICAjIEVtcHR5IHN0cmluZwogICAgcGF5bG9hZHMuYXBwZW5kKCcnKQoKICAgICMgV2hpdGVzcGFjZSBjaGFyYWN0ZXJzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJyAgICcpICAjIFNwYWNlcwogICAgcGF5bG9hZHMuYXBwZW5kKCdcdFxuJykgICMgVGFiIGFuZCBuZXdsaW5lCgogICAgIyBFbWFpbHMKICAgIHBheWxvYWRzLmFwcGVuZCgndGVzdEBleGFtcGxlLmNvbScpCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ3VzZXIubmFtZSt0YWcrc29ydGluZ0BleGFtcGxlLmNvbScpCgogICAgcmV0dXJuIHBheWxvYWRzCgpkZWYgc2Nyb2xsX2ludG9fdmlldyhkcml2ZXI6IFdlYkRyaXZlciwgZWxlbWVudDogV2ViRWxlbWVudCkgLT4gTm9uZToKICAgICIiIlNjcm9sbCB0aGUgZWxlbWVudCBpbnRvIHZpZXcuIiIiCiAgICBkcml2ZXIuZXhlY3V0ZV9zY3JpcHQoCiAgICAgICAgImFyZ3VtZW50c1swXS5zY3JvbGxJbnRvVmlldyh7YmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2NlbnRlcid9KTsiLAogICAgICAgIGVsZW1lbnQKICAgICkKCmRlZiBzY3JvbGxfaW50b192aWV3KGRyaXZlciwgZWxlbWVudDogV2ViRWxlbWVudCkgLT4gTm9uZToKICAgICIiIlNjcm9sbCB0aGUgZWxlbWVudCBpbnRvIHZpZXcuIiIiCiAgICBkcml2ZXIuZXhlY3V0ZV9zY3JpcHQoImFyZ3VtZW50c1swXS5zY3JvbGxJbnRvVmlldyh7IGJlaGF2aW9yOiAnc21vb3RoJywgYmxvY2s6ICdjZW50ZXInIH0pOyIsIGVsZW1lbnQpCgpkZWYgZ2V0X3hwYXRoKGVsZW1lbnQ6IFdlYkVsZW1lbnQpIC0+IHN0cjoKICAgICIiIkdldCB0aGUgWFBhdGggb2YgYSBXZWJFbGVtZW50IGJ5IHRyYXZlcnNpbmcgdGhlIERPTS4iIiIKICAgIGNvbXBvbmVudHMgPSBbXQogICAgY2hpbGQgPSBlbGVtZW50CiAgICB3aGlsZSBjaGlsZCBpcyBub3QgTm9uZToKICAgICAgICBwYXJlbnQgPSBjaGlsZC5maW5kX2VsZW1lbnQoQnkuWFBBVEgsICIuLiIpCiAgICAgICAgc2libGluZ3MgPSBwYXJlbnQuZmluZF9lbGVtZW50cyhCeS5YUEFUSCwgY2hpbGQudGFnX25hbWUpCgogICAgICAgIGlmIGxlbihzaWJsaW5ncykgPiAxOgogICAgICAgICAgICBpbmRleCA9IDEKICAgICAgICAgICAgZm9yIGkgaW4gcmFuZ2UobGVuKHNpYmxpbmdzKSk6CiAgICAgICAgICAgICAgICBpZiBzaWJsaW5nc1tpXSA9PSBjaGlsZDoKICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGkgKyAxCiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgY29tcG9uZW50cy5hcHBlbmQoZid7Y2hpbGQudGFnX25hbWV9W3tpbmRleH1dJykKICAgICAgICBlbHNlOgogICAgICAgICAgICBjb21wb25lbnRzLmFwcGVuZChjaGlsZC50YWdfbmFtZSkKCiAgICAgICAgdHJ5OgogICAgICAgICAgICBjaGlsZCA9IHBhcmVudAogICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgYnJlYWsKCiAgICBjb21wb25lbnRzLnJldmVyc2UoKQogICAgcmV0dXJuICcvJyArICcvJy5qb2luKGNvbXBvbmVudHMpCmRlZiBnZXRfeHBhdGgoZWxlbWVudDogV2ViRWxlbWVudCkgLT4gc3RyOgogICAgIiIiR2V0IHRoZSBYUGF0aCBvZiBhIFdlYkVsZW1lbnQgYnkgdHJhdmVyc2luZyB0aGUgRE9NLiIiIgogICAgY29tcG9uZW50cyA9IFtdCiAgICBjaGlsZCA9IGVsZW1lbnQKICAgIHdoaWxlIGNoaWxkIGlzIG5vdCBOb25lOgogICAgICAgIHBhcmVudCA9IGNoaWxkLmZpbmRfZWxlbWVudChCeS5YUEFUSCwgIi4uIikKICAgICAgICBzaWJsaW5ncyA9IHBhcmVudC5maW5kX2VsZW1lbnRzKEJ5LlhQQVRILCBjaGlsZC50YWdfbmFtZSkKCiAgICAgICAgaWYgbGVuKHNpYmxpbmdzKSA+IDE6CiAgICAgICAgICAgIGluZGV4ID0gMQogICAgICAgICAgICBmb3IgaSBpbiByYW5nZShsZW4oc2libGluZ3MpKToKICAgICAgICAgICAgICAgIGlmIHNpYmxpbmdzW2ldID09IGNoaWxkOgogICAgICAgICAgICAgICAgICAgIGluZGV4ID0gaSArIDEKICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICBjb21wb25lbnRzLmFwcGVuZChmJ3tjaGlsZC50YWdfbmFtZX1be2luZGV4fV0nKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGNvbXBvbmVudHMuYXBwZW5kKGNoaWxkLnRhZ19uYW1lKQoKICAgICAgICB0cnk6CiAgICAgICAgICAgIGNoaWxkID0gcGFyZW50CiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICBicmVhawoKICAgIGNvbXBvbmVudHMucmV2ZXJzZSgpCiAgICByZXR1cm4gJy8nICsgJy8nLmpvaW4oY29tcG9uZW50cykK",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAABpDAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAkgUAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAACSBQAAZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIucmVtb3RlLndlYmVsZW1lbnQgaW1wb3J0IFdlYkVsZW1lbnQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLmNvbW1vbi5leGNlcHRpb25zIGltcG9ydCBOb1N1Y2hFbGVtZW50RXhjZXB0aW9uCgpkZWYgc2Nyb2xsX2ludG9fdmlldyhkcml2ZXIsIGVsZW1lbnQ6IFdlYkVsZW1lbnQpIC0+IE5vbmU6CiAgICAiIiJTY3JvbGwgdGhlIGVsZW1lbnQgaW50byB2aWV3LiIiIgogICAgZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KCJhcmd1bWVudHNbMF0uc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnY2VudGVyJyB9KTsiLCBlbGVtZW50KQoKZGVmIGdldF94cGF0aChlbGVtZW50OiBXZWJFbGVtZW50KSAtPiBzdHI6CiAgICAiIiJHZXQgdGhlIFhQYXRoIG9mIGEgV2ViRWxlbWVudCBieSB0cmF2ZXJzaW5nIHRoZSBET00uIiIiCiAgICBjb21wb25lbnRzID0gW10KICAgIGNoaWxkID0gZWxlbWVudAogICAgd2hpbGUgY2hpbGQgaXMgbm90IE5vbmU6CiAgICAgICAgdHJ5OgogICAgICAgICAgICAjIEdldCB0aGUgcGFyZW50IGVsZW1lbnQgb2YgdGhlIGN1cnJlbnQgbm9kZQogICAgICAgICAgICBwYXJlbnQgPSBjaGlsZC5maW5kX2VsZW1lbnQoQnkuWFBBVEgsICIuLiIpCiAgICAgICAgICAgIAogICAgICAgICAgICAjIEZpbmQgc2libGluZ3Mgd2l0aCB0aGUgc2FtZSB0YWcgbmFtZSB0byBkZXRlcm1pbmUgdGhlIGluZGV4CiAgICAgICAgICAgIHNpYmxpbmdzID0gcGFyZW50LmZpbmRfZWxlbWVudHMoQnkuWFBBVEgsIGNoaWxkLnRhZ19uYW1lKQoKICAgICAgICAgICAgaWYgbGVuKHNpYmxpbmdzKSA+IDE6CiAgICAgICAgICAgICAgICBpbmRleCA9IDEKICAgICAgICAgICAgICAgIGZvciBpIGluIHJhbmdlKGxlbihzaWJsaW5ncykpOgogICAgICAgICAgICAgICAgICAgIGlmIHNpYmxpbmdzW2ldID09IGNoaWxkOgogICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGkgKyAxCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICBjb21wb25lbnRzLmFwcGVuZChmJ3tjaGlsZC50YWdfbmFtZX1be2luZGV4fV0nKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgY29tcG9uZW50cy5hcHBlbmQoY2hpbGQudGFnX25hbWUpCgogICAgICAgICAgICBjaGlsZCA9IHBhcmVudAogICAgICAgIGV4Y2VwdCAoTm9TdWNoRWxlbWVudEV4Y2VwdGlvbiwgRXhjZXB0aW9uKSBhcyBlOgogICAgICAgICAgICAjIElmIHdlIGVuY291bnRlciBhbiBlcnJvciBnZXR0aW5nIHRoZSBwYXJlbnQsIGJyZWFrIHRoZSBsb29wCiAgICAgICAgICAgIGJyZWFrCgogICAgY29tcG9uZW50cy5yZXZlcnNlKCkKICAgIHJldHVybiAnLycgKyAnLycuam9pbihjb21wb25lbnRzKQ",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAACSBQAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAxQsAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAADdCwAAZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIucmVtb3RlLndlYmVsZW1lbnQgaW1wb3J0IFdlYkVsZW1lbnQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLmNvbW1vbi5leGNlcHRpb25zIGltcG9ydCBOb1N1Y2hFbGVtZW50RXhjZXB0aW9uCmltcG9ydCByYW5kb20KaW1wb3J0IHN0cmluZwpmcm9tIHR5cGluZyBpbXBvcnQgTGlzdAoKZGVmIHNjcm9sbF9pbnRvX3ZpZXcoZHJpdmVyLCBlbGVtZW50OiBXZWJFbGVtZW50KSAtPiBOb25lOgogICAgIiIiU2Nyb2xsIHRoZSBlbGVtZW50IGludG8gdmlldy4iIiIKICAgIGRyaXZlci5leGVjdXRlX3NjcmlwdCgiYXJndW1lbnRzWzBdLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2NlbnRlcicgfSk7IiwgZWxlbWVudCkKCmRlZiBnZXRfeHBhdGgoZWxlbWVudDogV2ViRWxlbWVudCkgLT4gc3RyOgogICAgIiIiR2V0IHRoZSBYUGF0aCBvZiBhIFdlYkVsZW1lbnQgYnkgdHJhdmVyc2luZyB0aGUgRE9NLiIiIgogICAgY29tcG9uZW50cyA9IFtdCiAgICBjaGlsZCA9IGVsZW1lbnQKICAgIHdoaWxlIGNoaWxkIGlzIG5vdCBOb25lOgogICAgICAgIHRyeToKICAgICAgICAgICAgIyBHZXQgdGhlIHBhcmVudCBlbGVtZW50IG9mIHRoZSBjdXJyZW50IG5vZGUKICAgICAgICAgICAgcGFyZW50ID0gY2hpbGQuZmluZF9lbGVtZW50KEJ5LlhQQVRILCAiLi4iKQogICAgICAgICAgICAKICAgICAgICAgICAgIyBGaW5kIHNpYmxpbmdzIHdpdGggdGhlIHNhbWUgdGFnIG5hbWUgdG8gZGV0ZXJtaW5lIHRoZSBpbmRleAogICAgICAgICAgICBzaWJsaW5ncyA9IHBhcmVudC5maW5kX2VsZW1lbnRzKEJ5LlhQQVRILCBjaGlsZC50YWdfbmFtZSkKCiAgICAgICAgICAgIGlmIGxlbihzaWJsaW5ncykgPiAxOgogICAgICAgICAgICAgICAgaW5kZXggPSAxCiAgICAgICAgICAgICAgICBmb3IgaSBpbiByYW5nZShsZW4oc2libGluZ3MpKToKICAgICAgICAgICAgICAgICAgICBpZiBzaWJsaW5nc1tpXSA9PSBjaGlsZDoKICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBpICsgMQogICAgICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgY29tcG9uZW50cy5hcHBlbmQoZid7Y2hpbGQudGFnX25hbWV9W3tpbmRleH1dJykKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGNvbXBvbmVudHMuYXBwZW5kKGNoaWxkLnRhZ19uYW1lKQoKICAgICAgICAgICAgY2hpbGQgPSBwYXJlbnQKICAgICAgICBleGNlcHQgKE5vU3VjaEVsZW1lbnRFeGNlcHRpb24sIEV4Y2VwdGlvbikgYXMgZToKICAgICAgICAgICAgIyBJZiB3ZSBlbmNvdW50ZXIgYW4gZXJyb3IgZ2V0dGluZyB0aGUgcGFyZW50LCBicmVhayB0aGUgbG9vcAogICAgICAgICAgICBicmVhawoKICAgIGNvbXBvbmVudHMucmV2ZXJzZSgpCiAgICByZXR1cm4gJy8nICsgJy8nLmpvaW4oY29tcG9uZW50cykKCmRlZiBnZW5lcmF0ZV9zYWZlX3BheWxvYWRzKCkgLT4gTGlzdFtzdHJdOgogICAgIiIiR2VuZXJhdGUgYSBsaXN0IG9mIHNhZmUgcGF5bG9hZHMgZm9yIGZ1enppbmcuIiIiCiAgICBwYXlsb2FkcyA9IFtdCgogICAgIyBTaG9ydCByYW5kb20gc3RyaW5ncwogICAgZm9yIF8gaW4gcmFuZ2UoNSk6CiAgICAgICAgcGF5bG9hZHMuYXBwZW5kKCcnLmpvaW4ocmFuZG9tLmNob2ljZXMoc3RyaW5nLmFzY2lpX2xldHRlcnMgKyBzdHJpbmcuZGlnaXRzLCBrPTEwKSkpCgogICAgIyBMb25nIHN0cmluZ3MgdG8gdGVzdCBpbnB1dCBsaW1pdHMKICAgIHBheWxvYWRzLmFwcGVuZCgnQScgKiAyNTYpCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ0InICogMTAyNCkKCiAgICAjIFN0cmluZ3Mgd2l0aCBzcGVjaWFsIGNoYXJhY3RlcnMKICAgIHNwZWNpYWxfY2hhcnMgPSAiIUAjJCVeJiooKV8rLT1bXXt9fDs6JywuPD4vPyIKICAgIHBheWxvYWRzLmFwcGVuZChzcGVjaWFsX2NoYXJzKQoKICAgICMgVW5pY29kZSBjaGFyYWN0ZXJzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ+a1i+ivleS4reaWh+Wtl+espicpICAjIENoaW5lc2UgY2hhcmFjdGVycwogICAgcGF5bG9hZHMuYXBwZW5kKCfwn5iD8J+RjfCfj7vwn5SlJykgICAgICAjIEVtb2ppcwoKICAgICMgTnVtZXJpYyBpbnB1dHMKICAgIHBheWxvYWRzLmFwcGVuZCgnMTIzNDU2Nzg5MCcpCiAgICBwYXlsb2Fkcy5hcHBlbmQoJy05OTk5OTk5OTknKQoKICAgICMgRW1wdHkgc3RyaW5nCiAgICBwYXlsb2Fkcy5hcHBlbmQoJycpCgogICAgIyBXaGl0ZXNwYWNlIGNoYXJhY3RlcnMKICAgIHBheWxvYWRzLmFwcGVuZCgnICAgJykgICMgU3BhY2VzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ1x0XG4nKSAgIyBUYWIgYW5kIG5ld2xpbmUKCiAgICAjIEVtYWlscwogICAgcGF5bG9hZHMuYXBwZW5kKCd0ZXN0QGV4YW1wbGUuY29tJykKICAgIHBheWxvYWRzLmFwcGVuZCgndXNlci5uYW1lK3RhZytzb3J0aW5nQGV4YW1wbGUuY29tJykKCiAgICAjIFNRTCBpbmplY3Rpb24gYXR0ZW1wdHMgKHNhZmUsIG5vdCBoYXJtZnVsKQogICAgcGF5bG9hZHMuYXBwZW5kKCInIE9SICcxJz0nMSIpCiAgICBwYXlsb2Fkcy5hcHBlbmQoIic7IERST1AgVEFCTEUgdXNlcnM7IC0tIikKCiAgICAjIEhUTUwgdGFncyB0byB0ZXN0IFhTUyBhbmQgcmVuZGVyaW5nIGlzc3VlcwogICAgcGF5bG9hZHMuYXBwZW5kKCc8c2NyaXB0PmFsZXJ0KCJYU1MiKTwvc2NyaXB0PicpCiAgICBwYXlsb2Fkcy5hcHBlbmQoJzxkaXY+PHA+VGVzdDwvcD48L2Rpdj4nKQoKICAgICMgVHlwaWNhbCBjb3Jwb3JhdGUgaW5wdXRzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ2h0dHBzOi8vZXhhbXBsZS5jb20nKSAgIyBVUkwKICAgIHBheWxvYWRzLmFwcGVuZCgnMTIzIE1haW4gU3QuLCBTcHJpbmdmaWVsZCwgVVNBJykgICMgQWRkcmVzcwogICAgcGF5bG9hZHMuYXBwZW5kKCdKb2huIERvZScpICAjIE5hbWUKICAgIHBheWxvYWRzLmFwcGVuZCgnIlNFTEVDVCAqIEZST00gdXNlcnMgV0hFUkUgaWQgPSAxIicpICAjIFNRTC1saWtlIGlucHV0CgogICAgcmV0dXJuIHBheWxvYWRzCg",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAADFCwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAATAwAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABkDAAAaW1wb3J0IHJhbmRvbQppbXBvcnQgc3RyaW5nCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnJlbW90ZS53ZWJkcml2ZXIgaW1wb3J0IFdlYkRyaXZlcgpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5yZW1vdGUud2ViZWxlbWVudCBpbXBvcnQgV2ViRWxlbWVudApmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24uYnkgaW1wb3J0IEJ5CmZyb20gc2VsZW5pdW0uY29tbW9uLmV4Y2VwdGlvbnMgaW1wb3J0IE5vU3VjaEVsZW1lbnRFeGNlcHRpb24sIFN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbgppbXBvcnQgdGltZQoKZGVmIHNjcm9sbF9pbnRvX3ZpZXcoZHJpdmVyOiBXZWJEcml2ZXIsIGVsZW1lbnQ6IFdlYkVsZW1lbnQpIC0+IE5vbmU6CiAgICAiIiJTY3JvbGwgdGhlIGVsZW1lbnQgaW50byB2aWV3LiIiIgogICAgZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KCJhcmd1bWVudHNbMF0uc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnY2VudGVyJyB9KTsiLCBlbGVtZW50KQoKZGVmIGdldF94cGF0aChlbGVtZW50OiBXZWJFbGVtZW50KSAtPiBzdHI6CiAgICAiIiJHZXQgdGhlIFhQYXRoIG9mIGEgV2ViRWxlbWVudCBieSB0cmF2ZXJzaW5nIHRoZSBET00uIiIiCiAgICBjb21wb25lbnRzID0gW10KICAgIGNoaWxkID0gZWxlbWVudAogICAgd2hpbGUgY2hpbGQgaXMgbm90IE5vbmU6CiAgICAgICAgdHJ5OgogICAgICAgICAgICAjIEdldCB0aGUgcGFyZW50IGVsZW1lbnQgb2YgdGhlIGN1cnJlbnQgbm9kZQogICAgICAgICAgICBwYXJlbnQgPSBjaGlsZC5maW5kX2VsZW1lbnQoQnkuWFBBVEgsICIuLiIpCiAgICAgICAgICAgIAogICAgICAgICAgICAjIEZpbmQgc2libGluZ3Mgd2l0aCB0aGUgc2FtZSB0YWcgbmFtZSB0byBkZXRlcm1pbmUgdGhlIGluZGV4CiAgICAgICAgICAgIHNpYmxpbmdzID0gcGFyZW50LmZpbmRfZWxlbWVudHMoQnkuWFBBVEgsIGNoaWxkLnRhZ19uYW1lKQoKICAgICAgICAgICAgaWYgbGVuKHNpYmxpbmdzKSA+IDE6CiAgICAgICAgICAgICAgICBpbmRleCA9IDEKICAgICAgICAgICAgICAgIGZvciBpIGluIHJhbmdlKGxlbihzaWJsaW5ncykpOgogICAgICAgICAgICAgICAgICAgIGlmIHNpYmxpbmdzW2ldID09IGNoaWxkOgogICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGkgKyAxCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICBjb21wb25lbnRzLmFwcGVuZChmJ3tjaGlsZC50YWdfbmFtZX1be2luZGV4fV0nKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgY29tcG9uZW50cy5hcHBlbmQoY2hpbGQudGFnX25hbWUpCgogICAgICAgICAgICBjaGlsZCA9IHBhcmVudAogICAgICAgIGV4Y2VwdCAoTm9TdWNoRWxlbWVudEV4Y2VwdGlvbiwgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uKSBhcyBlOgogICAgICAgICAgICAjIElmIHdlIGVuY291bnRlciBhbiBlcnJvciBnZXR0aW5nIHRoZSBwYXJlbnQsIGJyZWFrIHRoZSBsb29wCiAgICAgICAgICAgIGJyZWFrCgogICAgY29tcG9uZW50cy5yZXZlcnNlKCkKICAgIHJldHVybiAnLycgKyAnLycuam9pbihjb21wb25lbnRzKQoKZGVmIGdlbmVyYXRlX3NhZmVfcGF5bG9hZHMoKSAtPiBMaXN0W3N0cl06CiAgICAiIiJHZW5lcmF0ZSBhIGxpc3Qgb2Ygc2FmZSBwYXlsb2FkcyBmb3IgZnV6emluZy4iIiIKICAgIHBheWxvYWRzID0gW10KCiAgICAjIFNob3J0IHJhbmRvbSBzdHJpbmdzCiAgICBmb3IgXyBpbiByYW5nZSg1KToKICAgICAgICBwYXlsb2Fkcy5hcHBlbmQoJycuam9pbihyYW5kb20uY2hvaWNlcyhzdHJpbmcuYXNjaWlfbGV0dGVycyArIHN0cmluZy5kaWdpdHMsIGs9MTApKSkKCiAgICAjIExvbmcgc3RyaW5ncyB0byB0ZXN0IGlucHV0IGxpbWl0cwogICAgcGF5bG9hZHMuYXBwZW5kKCdBJyAqIDI1NikKICAgIHBheWxvYWRzLmFwcGVuZCgnQicgKiAxMDI0KQoKICAgICMgU3RyaW5ncyB3aXRoIHNwZWNpYWwgY2hhcmFjdGVycwogICAgc3BlY2lhbF9jaGFycyA9ICIhQCMkJV4mKigpXystPVtde318OzonLC48Pi8/IgogICAgcGF5bG9hZHMuYXBwZW5kKHNwZWNpYWxfY2hhcnMpCgogICAgIyBVbmljb2RlIGNoYXJhY3RlcnMKICAgIHBheWxvYWRzLmFwcGVuZCgn5rWL6K+V5Lit5paH5a2X56ymJykgICMgQ2hpbmVzZSBjaGFyYWN0ZXJzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ/CfmIPwn5GN8J+Pu/CflKUnKSAgICAgICMgRW1vamlzCgogICAgIyBOdW1lcmljIGlucHV0cwogICAgcGF5bG9hZHMuYXBwZW5kKCcxMjM0NTY3ODkwJykKICAgIHBheWxvYWRzLmFwcGVuZCgnLTk5OTk5OTk5OScpCgogICAgIyBFbXB0eSBzdHJpbmcKICAgIHBheWxvYWRzLmFwcGVuZCgnJykKCiAgICAjIFdoaXRlc3BhY2UgY2hhcmFjdGVycwogICAgcGF5bG9hZHMuYXBwZW5kKCcgICAnKSAgIyBTcGFjZXMKICAgIHBheWxvYWRzLmFwcGVuZCgnXHRcbicpICAjIFRhYiBhbmQgbmV3bGluZQoKICAgICMgRW1haWxzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ3Rlc3RAZXhhbXBsZS5jb20nKQogICAgcGF5bG9hZHMuYXBwZW5kKCd1c2VyLm5hbWUrdGFnK3NvcnRpbmdAZXhhbXBsZS5jb20nKQoKICAgICMgU1FMIGluamVjdGlvbiBhdHRlbXB0cyAoc2FmZSwgbm90IGhhcm1mdWwpCiAgICBwYXlsb2Fkcy5hcHBlbmQoIicgT1IgJzEnPScxIikKICAgIHBheWxvYWRzLmFwcGVuZCgiJzsgRFJPUCBUQUJMRSB1c2VyczsgLS0iKQoKICAgICMgSFRNTCB0YWdzIHRvIHRlc3QgWFNTIGFuZCByZW5kZXJpbmcgaXNzdWVzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJzxzY3JpcHQ+YWxlcnQoIlhTUyIpPC9zY3JpcHQ+JykKICAgIHBheWxvYWRzLmFwcGVuZCgnPGRpdj48cD5UZXN0PC9wPjwvZGl2PicpCgogICAgIyBUeXBpY2FsIGNvcnBvcmF0ZSBpbnB1dHMKICAgIHBheWxvYWRzLmFwcGVuZCgnaHR0cHM6Ly9leGFtcGxlLmNvbScpICAjIFVSTAogICAgcGF5bG9hZHMuYXBwZW5kKCcxMjMgTWFpbiBTdC4sIFNwcmluZ2ZpZWxkLCBVU0EnKSAgIyBBZGRyZXNzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ0pvaG4gRG9lJykgICMgTmFtZQogICAgcGF5bG9hZHMuYXBwZW5kKCciU0VMRUNUICogRlJPTSB1c2VycyBXSEVSRSBpZCA9IDEiJykgICMgU1FMLWxpa2UgaW5wdXQKCiAgICByZXR1cm4gcGF5bG9hZHMKCg",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAABMDAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAwwwAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAADbDAAAZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIucmVtb3RlLndlYmVsZW1lbnQgaW1wb3J0IFdlYkVsZW1lbnQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLmNvbW1vbi5leGNlcHRpb25zIGltcG9ydCBOb1N1Y2hFbGVtZW50RXhjZXB0aW9uLCBTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24KaW1wb3J0IHJhbmRvbQppbXBvcnQgc3RyaW5nCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CgpkZWYgc2Nyb2xsX2ludG9fdmlldyhkcml2ZXIsIGVsZW1lbnQ6IFdlYkVsZW1lbnQpIC0+IE5vbmU6CiAgICAiIiJTY3JvbGwgdGhlIGVsZW1lbnQgaW50byB2aWV3LiIiIgogICAgZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KCJhcmd1bWVudHNbMF0uc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnY2VudGVyJyB9KTsiLCBlbGVtZW50KQoKZGVmIGdldF94cGF0aChlbGVtZW50OiBXZWJFbGVtZW50KSAtPiBzdHI6CiAgICAiIiJHZXQgdGhlIFhQYXRoIG9mIGEgV2ViRWxlbWVudCBieSB0cmF2ZXJzaW5nIHRoZSBET00uIiIiCiAgICBjb21wb25lbnRzID0gW10KICAgIGNoaWxkID0gZWxlbWVudAogICAgd2hpbGUgY2hpbGQgaXMgbm90IE5vbmU6CiAgICAgICAgdHJ5OgogICAgICAgICAgICAjIEdldCB0aGUgcGFyZW50IGVsZW1lbnQgb2YgdGhlIGN1cnJlbnQgbm9kZQogICAgICAgICAgICBwYXJlbnQgPSBjaGlsZC5maW5kX2VsZW1lbnQoQnkuWFBBVEgsICIuLiIpCgogICAgICAgICAgICAjIEVuc3VyZSB0aGUgcGFyZW50IGlzIG5vdCB0aGUgZG9jdW1lbnQgcm9vdCBvciBhbiBpbnZhbGlkIGVsZW1lbnQKICAgICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2UocGFyZW50LCBXZWJFbGVtZW50KToKICAgICAgICAgICAgICAgIGJyZWFrCgogICAgICAgICAgICAjIEZpbmQgc2libGluZ3Mgd2l0aCB0aGUgc2FtZSB0YWcgbmFtZSB0byBkZXRlcm1pbmUgdGhlIGluZGV4CiAgICAgICAgICAgIHNpYmxpbmdzID0gcGFyZW50LmZpbmRfZWxlbWVudHMoQnkuWFBBVEgsIGNoaWxkLnRhZ19uYW1lKQoKICAgICAgICAgICAgaWYgbGVuKHNpYmxpbmdzKSA+IDE6CiAgICAgICAgICAgICAgICBpbmRleCA9IDEKICAgICAgICAgICAgICAgIGZvciBpIGluIHJhbmdlKGxlbihzaWJsaW5ncykpOgogICAgICAgICAgICAgICAgICAgIGlmIHNpYmxpbmdzW2ldID09IGNoaWxkOgogICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGkgKyAxCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICBjb21wb25lbnRzLmFwcGVuZChmJ3tjaGlsZC50YWdfbmFtZX1be2luZGV4fV0nKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgY29tcG9uZW50cy5hcHBlbmQoY2hpbGQudGFnX25hbWUpCgogICAgICAgICAgICAjIE1vdmUgdXAgdG8gdGhlIHBhcmVudCBmb3IgdGhlIG5leHQgaXRlcmF0aW9uCiAgICAgICAgICAgIGNoaWxkID0gcGFyZW50CgogICAgICAgIGV4Y2VwdCAoTm9TdWNoRWxlbWVudEV4Y2VwdGlvbiwgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uKSBhcyBlOgogICAgICAgICAgICAjIElmIHdlIGVuY291bnRlciBhbiBlcnJvciBnZXR0aW5nIHRoZSBwYXJlbnQsIGJyZWFrIHRoZSBsb29wCiAgICAgICAgICAgIGJyZWFrCgogICAgY29tcG9uZW50cy5yZXZlcnNlKCkKICAgIHJldHVybiAnLycgKyAnLycuam9pbihjb21wb25lbnRzKQoKZGVmIGdlbmVyYXRlX3NhZmVfcGF5bG9hZHMoKSAtPiBMaXN0W3N0cl06CiAgICAiIiJHZW5lcmF0ZSBhIGxpc3Qgb2Ygc2FmZSBwYXlsb2FkcyBmb3IgZnV6emluZy4iIiIKICAgIHBheWxvYWRzID0gW10KCiAgICAjIFNob3J0IHJhbmRvbSBzdHJpbmdzCiAgICBmb3IgXyBpbiByYW5nZSg1KToKICAgICAgICBwYXlsb2Fkcy5hcHBlbmQoJycuam9pbihyYW5kb20uY2hvaWNlcyhzdHJpbmcuYXNjaWlfbGV0dGVycyArIHN0cmluZy5kaWdpdHMsIGs9MTApKSkKCiAgICAjIExvbmcgc3RyaW5ncyB0byB0ZXN0IGlucHV0IGxpbWl0cwogICAgcGF5bG9hZHMuYXBwZW5kKCdBJyAqIDI1NikKICAgIHBheWxvYWRzLmFwcGVuZCgnQicgKiAxMDI0KQoKICAgICMgU3RyaW5ncyB3aXRoIHNwZWNpYWwgY2hhcmFjdGVycwogICAgc3BlY2lhbF9jaGFycyA9ICIhQCMkJV4mKigpXystPVtde318OzonLC48Pi8/IgogICAgcGF5bG9hZHMuYXBwZW5kKHNwZWNpYWxfY2hhcnMpCgogICAgIyBVbmljb2RlIGNoYXJhY3RlcnMKICAgIHBheWxvYWRzLmFwcGVuZCgn5rWL6K+V5Lit5paH5a2X56ymJykgICMgQ2hpbmVzZSBjaGFyYWN0ZXJzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ/CfmIPwn5GN8J+Pu/CflKUnKSAgICAgICMgRW1vamlzCgogICAgIyBOdW1lcmljIGlucHV0cwogICAgcGF5bG9hZHMuYXBwZW5kKCcxMjM0NTY3ODkwJykKICAgIHBheWxvYWRzLmFwcGVuZCgnLTk5OTk5OTk5OScpCgogICAgIyBFbXB0eSBzdHJpbmcKICAgIHBheWxvYWRzLmFwcGVuZCgnJykKCiAgICAjIFdoaXRlc3BhY2UgY2hhcmFjdGVycwogICAgcGF5bG9hZHMuYXBwZW5kKCcgICAnKSAgIyBTcGFjZXMKICAgIHBheWxvYWRzLmFwcGVuZCgnXHRcbicpICAjIFRhYiBhbmQgbmV3bGluZQoKICAgICMgRW1haWxzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ3Rlc3RAZXhhbXBsZS5jb20nKQogICAgcGF5bG9hZHMuYXBwZW5kKCd1c2VyLm5hbWUrdGFnK3NvcnRpbmdAZXhhbXBsZS5jb20nKQoKICAgICMgU1FMIGluamVjdGlvbiBhdHRlbXB0cyAoc2FmZSwgbm90IGhhcm1mdWwpCiAgICBwYXlsb2Fkcy5hcHBlbmQoIicgT1IgJzEnPScxIikKICAgIHBheWxvYWRzLmFwcGVuZCgiJzsgRFJPUCBUQUJMRSB1c2VyczsgLS0iKQoKICAgICMgSFRNTCB0YWdzIHRvIHRlc3QgWFNTIGFuZCByZW5kZXJpbmcgaXNzdWVzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJzxzY3JpcHQ+YWxlcnQoIlhTUyIpPC9zY3JpcHQ+JykKICAgIHBheWxvYWRzLmFwcGVuZCgnPGRpdj48cD5UZXN0PC9wPjwvZGl2PicpCgogICAgIyBUeXBpY2FsIGNvcnBvcmF0ZSBpbnB1dHMKICAgIHBheWxvYWRzLmFwcGVuZCgnaHR0cHM6Ly9leGFtcGxlLmNvbScpICAjIFVSTAogICAgcGF5bG9hZHMuYXBwZW5kKCcxMjMgTWFpbiBTdC4sIFNwcmluZ2ZpZWxkLCBVU0EnKSAgIyBBZGRyZXNzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ0pvaG4gRG9lJykgICMgTmFtZQogICAgcGF5bG9hZHMuYXBwZW5kKCciU0VMRUNUICogRlJPTSB1c2VycyBXSEVSRSBpZCA9IDEiJykgICMgU1FMLWxpa2UgaW5wdXQKCiAgICByZXR1cm4gcGF5bG9hZHMK",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAADDDAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAeg8AAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAACSDwAAZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIucmVtb3RlLndlYmVsZW1lbnQgaW1wb3J0IFdlYkVsZW1lbnQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLmNvbW1vbi5leGNlcHRpb25zIGltcG9ydCBOb1N1Y2hFbGVtZW50RXhjZXB0aW9uLCBTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24KaW1wb3J0IHJhbmRvbQppbXBvcnQgc3RyaW5nCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmltcG9ydCB0aW1lCgpkZWYgc2Nyb2xsX2ludG9fdmlldyhkcml2ZXIsIGVsZW1lbnQ6IFdlYkVsZW1lbnQpIC0+IE5vbmU6CiAgICAiIiJTY3JvbGwgdGhlIGVsZW1lbnQgaW50byB2aWV3LiIiIgogICAgZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KCJhcmd1bWVudHNbMF0uc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnY2VudGVyJyB9KTsiLCBlbGVtZW50KQoKZGVmIGdldF94cGF0aChlbGVtZW50OiBXZWJFbGVtZW50KSAtPiBzdHI6CiAgICAiIiJHZXQgdGhlIFhQYXRoIG9mIGEgV2ViRWxlbWVudCBieSB0cmF2ZXJzaW5nIHRoZSBET00uIiIiCiAgICBjb21wb25lbnRzID0gW10KICAgIGNoaWxkID0gZWxlbWVudAogICAgd2hpbGUgY2hpbGQgaXMgbm90IE5vbmU6CiAgICAgICAgdHJ5OgogICAgICAgICAgICAjIEdldCB0aGUgcGFyZW50IGVsZW1lbnQgb2YgdGhlIGN1cnJlbnQgbm9kZQogICAgICAgICAgICBwYXJlbnQgPSBjaGlsZC5maW5kX2VsZW1lbnQoQnkuWFBBVEgsICIuLiIpCgogICAgICAgICAgICAjIEVuc3VyZSB0aGUgcGFyZW50IGlzIG5vdCB0aGUgZG9jdW1lbnQgcm9vdCBvciBhbiBpbnZhbGlkIGVsZW1lbnQKICAgICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2UocGFyZW50LCBXZWJFbGVtZW50KToKICAgICAgICAgICAgICAgIGJyZWFrCgogICAgICAgICAgICAjIEZpbmQgc2libGluZ3Mgd2l0aCB0aGUgc2FtZSB0YWcgbmFtZSB0byBkZXRlcm1pbmUgdGhlIGluZGV4CiAgICAgICAgICAgIHNpYmxpbmdzID0gcGFyZW50LmZpbmRfZWxlbWVudHMoQnkuWFBBVEgsIGNoaWxkLnRhZ19uYW1lKQoKICAgICAgICAgICAgaWYgbGVuKHNpYmxpbmdzKSA+IDE6CiAgICAgICAgICAgICAgICBpbmRleCA9IDEKICAgICAgICAgICAgICAgIGZvciBpIGluIHJhbmdlKGxlbihzaWJsaW5ncykpOgogICAgICAgICAgICAgICAgICAgIGlmIHNpYmxpbmdzW2ldID09IGNoaWxkOgogICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9IGkgKyAxCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICBjb21wb25lbnRzLmFwcGVuZChmJ3tjaGlsZC50YWdfbmFtZX1be2luZGV4fV0nKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgY29tcG9uZW50cy5hcHBlbmQoY2hpbGQudGFnX25hbWUpCgogICAgICAgICAgICAjIE1vdmUgdXAgdG8gdGhlIHBhcmVudCBmb3IgdGhlIG5leHQgaXRlcmF0aW9uCiAgICAgICAgICAgIGNoaWxkID0gcGFyZW50CgogICAgICAgIGV4Y2VwdCAoTm9TdWNoRWxlbWVudEV4Y2VwdGlvbiwgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uKSBhcyBlOgogICAgICAgICAgICAjIElmIHdlIGVuY291bnRlciBhbiBlcnJvciBnZXR0aW5nIHRoZSBwYXJlbnQsIGJyZWFrIHRoZSBsb29wCiAgICAgICAgICAgIGJyZWFrCgogICAgY29tcG9uZW50cy5yZXZlcnNlKCkKICAgIHJldHVybiAnLycgKyAnLycuam9pbihjb21wb25lbnRzKQoKZGVmIGdlbmVyYXRlX3NhZmVfcGF5bG9hZHMoKSAtPiBMaXN0W3N0cl06CiAgICAiIiJHZW5lcmF0ZSBhIGxpc3Qgb2Ygc2FmZSBwYXlsb2FkcyBmb3IgZnV6emluZy4iIiIKICAgIHBheWxvYWRzID0gW10KCiAgICAjIFNob3J0IHJhbmRvbSBzdHJpbmdzCiAgICBmb3IgXyBpbiByYW5nZSg1KToKICAgICAgICBwYXlsb2Fkcy5hcHBlbmQoJycuam9pbihyYW5kb20uY2hvaWNlcyhzdHJpbmcuYXNjaWlfbGV0dGVycyArIHN0cmluZy5kaWdpdHMsIGs9MTApKSkKCiAgICAjIExvbmcgc3RyaW5ncyB0byB0ZXN0IGlucHV0IGxpbWl0cwogICAgcGF5bG9hZHMuYXBwZW5kKCdBJyAqIDI1NikKICAgIHBheWxvYWRzLmFwcGVuZCgnQicgKiAxMDI0KQoKICAgICMgU3RyaW5ncyB3aXRoIHNwZWNpYWwgY2hhcmFjdGVycwogICAgc3BlY2lhbF9jaGFycyA9ICIhQCMkJV4mKigpXystPVtde318OzonLC48Pi8/IgogICAgcGF5bG9hZHMuYXBwZW5kKHNwZWNpYWxfY2hhcnMpCgogICAgIyBVbmljb2RlIGNoYXJhY3RlcnMKICAgIHBheWxvYWRzLmFwcGVuZCgn5rWL6K+V5Lit5paH5a2X56ymJykgICMgQ2hpbmVzZSBjaGFyYWN0ZXJzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ/CfmIPwn5GN8J+Pu/CflKUnKSAgICAgICMgRW1vamlzCgogICAgIyBOdW1lcmljIGlucHV0cwogICAgcGF5bG9hZHMuYXBwZW5kKCcxMjM0NTY3ODkwJykKICAgIHBheWxvYWRzLmFwcGVuZCgnLTk5OTk5OTk5OScpCgogICAgIyBFbXB0eSBzdHJpbmcKICAgIHBheWxvYWRzLmFwcGVuZCgnJykKCiAgICAjIFdoaXRlc3BhY2UgY2hhcmFjdGVycwogICAgcGF5bG9hZHMuYXBwZW5kKCcgICAnKSAgIyBTcGFjZXMKICAgIHBheWxvYWRzLmFwcGVuZCgnXHRcbicpICAjIFRhYiBhbmQgbmV3bGluZQoKICAgICMgRW1haWxzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ3Rlc3RAZXhhbXBsZS5jb20nKQogICAgcGF5bG9hZHMuYXBwZW5kKCd1c2VyLm5hbWUrdGFnK3NvcnRpbmdAZXhhbXBsZS5jb20nKQoKICAgICMgU1FMIGluamVjdGlvbiBhdHRlbXB0cyAoc2FmZSwgbm90IGhhcm1mdWwpCiAgICBwYXlsb2Fkcy5hcHBlbmQoIicgT1IgJzEnPScxIikKICAgIHBheWxvYWRzLmFwcGVuZCgiJzsgRFJPUCBUQUJMRSB1c2VyczsgLS0iKQoKICAgICMgSFRNTCB0YWdzIHRvIHRlc3QgWFNTIGFuZCByZW5kZXJpbmcgaXNzdWVzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJzxzY3JpcHQ+YWxlcnQoIlhTUyIpPC9zY3JpcHQ+JykKICAgIHBheWxvYWRzLmFwcGVuZCgnPGRpdj48cD5UZXN0PC9wPjwvZGl2PicpCgogICAgIyBUeXBpY2FsIGNvcnBvcmF0ZSBpbnB1dHMKICAgIHBheWxvYWRzLmFwcGVuZCgnaHR0cHM6Ly9leGFtcGxlLmNvbScpICAjIFVSTAogICAgcGF5bG9hZHMuYXBwZW5kKCcxMjMgTWFpbiBTdC4sIFNwcmluZ2ZpZWxkLCBVU0EnKSAgIyBBZGRyZXNzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ0pvaG4gRG9lJykgICMgTmFtZQogICAgcGF5bG9hZHMuYXBwZW5kKCciU0VMRUNUICogRlJPTSB1c2VycyBXSEVSRSBpZCA9IDEiJykgICMgU1FMLWxpa2UgaW5wdXQKCiAgICByZXR1cm4gcGF5bG9hZHMKCmRlZiByZXRyeV9vbl9zdGFsZV9lbGVtZW50KGZ1bmMpOgogICAgIiIiRGVjb3JhdG9yIHRvIHJldHJ5IGEgZnVuY3Rpb24gaWYgYSBTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24gaXMgZW5jb3VudGVyZWQuIiIiCiAgICBkZWYgd3JhcHBlcigqYXJncywgKiprd2FyZ3MpOgogICAgICAgIG1heF9yZXRyaWVzID0gMwogICAgICAgIGZvciBhdHRlbXB0IGluIHJhbmdlKG1heF9yZXRyaWVzKToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmMoKmFyZ3MsICoqa3dhcmdzKQogICAgICAgICAgICBleGNlcHQgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uOgogICAgICAgICAgICAgICAgaWYgYXR0ZW1wdCA8IG1heF9yZXRyaWVzIC0gMToKICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHJhaXNlCiAgICByZXR1cm4gd3JhcHBlcgoKQHJldHJ5X29uX3N0YWxlX2VsZW1lbnQKZGVmIGlzX2VsZW1lbnRfZGlzcGxheWVkKGVsZW1lbnQ6IFdlYkVsZW1lbnQpIC0+IGJvb2w6CiAgICAiIiJDaGVjayBpZiBhbiBlbGVtZW50IGlzIGRpc3BsYXllZCwgd2l0aCByZXRyeSBsb2dpYyBmb3Igc3RhbGUgZWxlbWVudHMuIiIiCiAgICByZXR1cm4gZWxlbWVudC5pc19kaXNwbGF5ZWQoKQo",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAB6DwAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAA/hAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAWEQAAaW1wb3J0IGxvZ2dpbmcKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIucmVtb3RlLndlYmVsZW1lbnQgaW1wb3J0IFdlYkVsZW1lbnQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLmNvbW1vbi5leGNlcHRpb25zIGltcG9ydCBOb1N1Y2hFbGVtZW50RXhjZXB0aW9uLCBTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24KaW1wb3J0IHJhbmRvbQppbXBvcnQgc3RyaW5nCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmltcG9ydCB0aW1lCgpsb2dnZXIgPSBsb2dnaW5nLmdldExvZ2dlcihfX25hbWVfXykKCgpkZWYgc2Nyb2xsX2ludG9fdmlldyhkcml2ZXIsIGVsZW1lbnQ6IFdlYkVsZW1lbnQpIC0+IE5vbmU6CiAgICAiIiJTY3JvbGwgdGhlIGVsZW1lbnQgaW50byB2aWV3LiIiIgogICAgZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KCJhcmd1bWVudHNbMF0uc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnY2VudGVyJyB9KTsiLCBlbGVtZW50KQoKCmRlZiBnZXRfeHBhdGgoZWxlbWVudDogV2ViRWxlbWVudCkgLT4gc3RyOgogICAgIiIiR2V0IHRoZSBYUGF0aCBvZiBhIFdlYkVsZW1lbnQgYnkgdHJhdmVyc2luZyB0aGUgRE9NLiIiIgogICAgY29tcG9uZW50cyA9IFtdCiAgICBjaGlsZCA9IGVsZW1lbnQKICAgIHdoaWxlIGNoaWxkIGlzIG5vdCBOb25lOgogICAgICAgIHRyeToKICAgICAgICAgICAgIyBHZXQgdGhlIHBhcmVudCBlbGVtZW50IG9mIHRoZSBjdXJyZW50IG5vZGUKICAgICAgICAgICAgcGFyZW50ID0gY2hpbGQuZmluZF9lbGVtZW50KEJ5LlhQQVRILCAiLi4iKQoKICAgICAgICAgICAgIyBFbnN1cmUgdGhlIHBhcmVudCBpcyBub3QgdGhlIGRvY3VtZW50IHJvb3Qgb3IgYW4gaW52YWxpZCBlbGVtZW50CiAgICAgICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKHBhcmVudCwgV2ViRWxlbWVudCk6CiAgICAgICAgICAgICAgICBicmVhawoKICAgICAgICAgICAgIyBGaW5kIHNpYmxpbmdzIHdpdGggdGhlIHNhbWUgdGFnIG5hbWUgdG8gZGV0ZXJtaW5lIHRoZSBpbmRleAogICAgICAgICAgICBzaWJsaW5ncyA9IHBhcmVudC5maW5kX2VsZW1lbnRzKEJ5LlhQQVRILCBjaGlsZC50YWdfbmFtZSkKCiAgICAgICAgICAgIGlmIGxlbihzaWJsaW5ncykgPiAxOgogICAgICAgICAgICAgICAgaW5kZXggPSAxCiAgICAgICAgICAgICAgICBmb3IgaSBpbiByYW5nZShsZW4oc2libGluZ3MpKToKICAgICAgICAgICAgICAgICAgICBpZiBzaWJsaW5nc1tpXSA9PSBjaGlsZDoKICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBpICsgMQogICAgICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgY29tcG9uZW50cy5hcHBlbmQoZid7Y2hpbGQudGFnX25hbWV9W3tpbmRleH1dJykKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGNvbXBvbmVudHMuYXBwZW5kKGNoaWxkLnRhZ19uYW1lKQoKICAgICAgICAgICAgIyBNb3ZlIHVwIHRvIHRoZSBwYXJlbnQgZm9yIHRoZSBuZXh0IGl0ZXJhdGlvbgogICAgICAgICAgICBjaGlsZCA9IHBhcmVudAoKICAgICAgICBleGNlcHQgKE5vU3VjaEVsZW1lbnRFeGNlcHRpb24sIFN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbikgYXMgZToKICAgICAgICAgICAgIyBJZiB3ZSBlbmNvdW50ZXIgYW4gZXJyb3IgZ2V0dGluZyB0aGUgcGFyZW50LCBicmVhayB0aGUgbG9vcAogICAgICAgICAgICBsb2dnZXIud2FybmluZyhmIkVuY291bnRlcmVkIGV4Y2VwdGlvbiB3aGlsZSBnZXR0aW5nIHBhcmVudDoge2V9IikKICAgICAgICAgICAgYnJlYWsKCiAgICBjb21wb25lbnRzLnJldmVyc2UoKQogICAgcmV0dXJuICcvJyArICcvJy5qb2luKGNvbXBvbmVudHMpCgoKZGVmIGdlbmVyYXRlX3NhZmVfcGF5bG9hZHMoKSAtPiBMaXN0W3N0cl06CiAgICAiIiJHZW5lcmF0ZSBhIGxpc3Qgb2Ygc2FmZSBwYXlsb2FkcyBmb3IgZnV6emluZy4iIiIKICAgIHBheWxvYWRzID0gW10KCiAgICAjIFNob3J0IHJhbmRvbSBzdHJpbmdzCiAgICBmb3IgXyBpbiByYW5nZSg1KToKICAgICAgICBwYXlsb2Fkcy5hcHBlbmQoJycuam9pbihyYW5kb20uY2hvaWNlcyhzdHJpbmcuYXNjaWlfbGV0dGVycyArIHN0cmluZy5kaWdpdHMsIGs9MTApKSkKCiAgICAjIExvbmcgc3RyaW5ncyB0byB0ZXN0IGlucHV0IGxpbWl0cwogICAgcGF5bG9hZHMuYXBwZW5kKCdBJyAqIDI1NikKICAgIHBheWxvYWRzLmFwcGVuZCgnQicgKiAxMDI0KQoKICAgICMgU3RyaW5ncyB3aXRoIHNwZWNpYWwgY2hhcmFjdGVycwogICAgc3BlY2lhbF9jaGFycyA9ICIhQCMkJV4mKigpXystPVtde318OzonLC48Pi8/IgogICAgcGF5bG9hZHMuYXBwZW5kKHNwZWNpYWxfY2hhcnMpCgogICAgIyBVbmljb2RlIGNoYXJhY3RlcnMKICAgIHBheWxvYWRzLmFwcGVuZCgn5rWL6K+V5Lit5paH5a2X56ymJykgICMgQ2hpbmVzZSBjaGFyYWN0ZXJzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ/CfmIPwn5GN8J+Pu/CflKUnKSAgICAgICMgRW1vamlzCgogICAgIyBOdW1lcmljIGlucHV0cwogICAgcGF5bG9hZHMuYXBwZW5kKCcxMjM0NTY3ODkwJykKICAgIHBheWxvYWRzLmFwcGVuZCgnLTk5OTk5OTk5OScpCgogICAgIyBFbXB0eSBzdHJpbmcKICAgIHBheWxvYWRzLmFwcGVuZCgnJykKCiAgICAjIFdoaXRlc3BhY2UgY2hhcmFjdGVycwogICAgcGF5bG9hZHMuYXBwZW5kKCcgICAnKSAgIyBTcGFjZXMKICAgIHBheWxvYWRzLmFwcGVuZCgnXHRcbicpICAjIFRhYiBhbmQgbmV3bGluZQoKICAgICMgRW1haWxzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ3Rlc3RAZXhhbXBsZS5jb20nKQogICAgcGF5bG9hZHMuYXBwZW5kKCd1c2VyLm5hbWUrdGFnK3NvcnRpbmdAZXhhbXBsZS5jb20nKQoKICAgICMgU1FMIGluamVjdGlvbiBhdHRlbXB0cyAoc2FmZSwgbm90IGhhcm1mdWwpCiAgICBwYXlsb2Fkcy5hcHBlbmQoIicgT1IgJzEnPScxIikKICAgIHBheWxvYWRzLmFwcGVuZCgiJzsgRFJPUCBUQUJMRSB1c2VyczsgLS0iKQoKICAgICMgSFRNTCB0YWdzIHRvIHRlc3QgWFNTIGFuZCByZW5kZXJpbmcgaXNzdWVzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJzxzY3JpcHQ+YWxlcnQoIlhTUyIpPC9zY3JpcHQ+JykKICAgIHBheWxvYWRzLmFwcGVuZCgnPGRpdj48cD5UZXN0PC9wPjwvZGl2PicpCgogICAgIyBUeXBpY2FsIGNvcnBvcmF0ZSBpbnB1dHMKICAgIHBheWxvYWRzLmFwcGVuZCgnaHR0cHM6Ly9leGFtcGxlLmNvbScpICAjIFVSTAogICAgcGF5bG9hZHMuYXBwZW5kKCcxMjMgTWFpbiBTdC4sIFNwcmluZ2ZpZWxkLCBVU0EnKSAgIyBBZGRyZXNzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ0pvaG4gRG9lJykgICMgTmFtZQogICAgcGF5bG9hZHMuYXBwZW5kKCciU0VMRUNUICogRlJPTSB1c2VycyBXSEVSRSBpZCA9IDEiJykgICMgU1FMLWxpa2UgaW5wdXQKCiAgICByZXR1cm4gcGF5bG9hZHMKCgpkZWYgcmV0cnlfb25fc3RhbGVfZWxlbWVudChmdW5jKToKICAgICIiIkRlY29yYXRvciB0byByZXRyeSBhIGZ1bmN0aW9uIGlmIGEgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uIGlzIGVuY291bnRlcmVkLiIiIgogICAgZGVmIHdyYXBwZXIoKmFyZ3MsICoqa3dhcmdzKToKICAgICAgICBtYXhfcmV0cmllcyA9IDMKICAgICAgICBmb3IgYXR0ZW1wdCBpbiByYW5nZShtYXhfcmV0cmllcyk6CiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIHJldHVybiBmdW5jKCphcmdzLCAqKmt3YXJncykKICAgICAgICAgICAgZXhjZXB0IFN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoZiJTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24gZW5jb3VudGVyZWQuIEF0dGVtcHQge2F0dGVtcHQgKyAxfSBvZiB7bWF4X3JldHJpZXN9LiBFcnJvcjoge2V9IikKICAgICAgICAgICAgICAgIGlmIGF0dGVtcHQgPCBtYXhfcmV0cmllcyAtIDE6CiAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgxKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZXJyb3IoZiJNYXggcmV0cmllcyByZWFjaGVkLiBTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24gY291bGQgbm90IGJlIHJlc29sdmVkOiB7ZX0iKQogICAgICAgICAgICAgICAgICAgIHJhaXNlCiAgICByZXR1cm4gd3JhcHBlcgoKCkByZXRyeV9vbl9zdGFsZV9lbGVtZW50CmRlZiBpc19lbGVtZW50X2Rpc3BsYXllZChlbGVtZW50OiBXZWJFbGVtZW50KSAtPiBib29sOgogICAgIiIiQ2hlY2sgaWYgYW4gZWxlbWVudCBpcyBkaXNwbGF5ZWQsIHdpdGggcmV0cnkgbG9naWMgZm9yIHN0YWxlIGVsZW1lbnRzLiIiIgogICAgcmV0dXJuIGVsZW1lbnQuaXNfZGlzcGxheWVkKCkK",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAD+EAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAkhEAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAACqEQAAaW1wb3J0IGxvZ2dpbmcKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIucmVtb3RlLndlYmVsZW1lbnQgaW1wb3J0IFdlYkVsZW1lbnQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLmNvbW1vbi5leGNlcHRpb25zIGltcG9ydCBOb1N1Y2hFbGVtZW50RXhjZXB0aW9uLCBTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24KaW1wb3J0IHJhbmRvbQppbXBvcnQgc3RyaW5nCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmltcG9ydCB0aW1lCgpsb2dnZXIgPSBsb2dnaW5nLmdldExvZ2dlcihfX25hbWVfXykKCgpkZWYgc2Nyb2xsX2ludG9fdmlldyhkcml2ZXIsIGVsZW1lbnQ6IFdlYkVsZW1lbnQpIC0+IE5vbmU6CiAgICAiIiJTY3JvbGwgdGhlIGVsZW1lbnQgaW50byB2aWV3LiIiIgogICAgZHJpdmVyLmV4ZWN1dGVfc2NyaXB0KCJhcmd1bWVudHNbMF0uc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogJ3Ntb290aCcsIGJsb2NrOiAnY2VudGVyJyB9KTsiLCBlbGVtZW50KQoKCmRlZiBnZXRfeHBhdGgoZWxlbWVudDogV2ViRWxlbWVudCkgLT4gc3RyOgogICAgIiIiR2V0IHRoZSBYUGF0aCBvZiBhIFdlYkVsZW1lbnQgYnkgdHJhdmVyc2luZyB0aGUgRE9NLiIiIgogICAgY29tcG9uZW50cyA9IFtdCiAgICBjaGlsZCA9IGVsZW1lbnQKICAgIHdoaWxlIGNoaWxkIGlzIG5vdCBOb25lOgogICAgICAgIHRyeToKICAgICAgICAgICAgIyBHZXQgdGhlIHBhcmVudCBlbGVtZW50IG9mIHRoZSBjdXJyZW50IG5vZGUKICAgICAgICAgICAgcGFyZW50ID0gY2hpbGQuZmluZF9lbGVtZW50KEJ5LlhQQVRILCAiLi4iKQoKICAgICAgICAgICAgIyBFbnN1cmUgdGhlIHBhcmVudCBpcyBub3QgdGhlIGRvY3VtZW50IHJvb3Qgb3IgYW4gaW52YWxpZCBlbGVtZW50CiAgICAgICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKHBhcmVudCwgV2ViRWxlbWVudCk6CiAgICAgICAgICAgICAgICBicmVhawoKICAgICAgICAgICAgIyBGaW5kIHNpYmxpbmdzIHdpdGggdGhlIHNhbWUgdGFnIG5hbWUgdG8gZGV0ZXJtaW5lIHRoZSBpbmRleAogICAgICAgICAgICBzaWJsaW5ncyA9IHBhcmVudC5maW5kX2VsZW1lbnRzKEJ5LlhQQVRILCBjaGlsZC50YWdfbmFtZSkKCiAgICAgICAgICAgIGlmIGxlbihzaWJsaW5ncykgPiAxOgogICAgICAgICAgICAgICAgaW5kZXggPSAxCiAgICAgICAgICAgICAgICBmb3IgaSBpbiByYW5nZShsZW4oc2libGluZ3MpKToKICAgICAgICAgICAgICAgICAgICBpZiBzaWJsaW5nc1tpXSA9PSBjaGlsZDoKICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPSBpICsgMQogICAgICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgY29tcG9uZW50cy5hcHBlbmQoZid7Y2hpbGQudGFnX25hbWV9W3tpbmRleH1dJykKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGNvbXBvbmVudHMuYXBwZW5kKGNoaWxkLnRhZ19uYW1lKQoKICAgICAgICAgICAgIyBNb3ZlIHVwIHRvIHRoZSBwYXJlbnQgZm9yIHRoZSBuZXh0IGl0ZXJhdGlvbgogICAgICAgICAgICBjaGlsZCA9IHBhcmVudAoKICAgICAgICBleGNlcHQgKE5vU3VjaEVsZW1lbnRFeGNlcHRpb24sIFN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbikgYXMgZToKICAgICAgICAgICAgIyBJZiB3ZSBlbmNvdW50ZXIgYW4gZXJyb3IgZ2V0dGluZyB0aGUgcGFyZW50LCBicmVhayB0aGUgbG9vcAogICAgICAgICAgICBsb2dnZXIud2FybmluZyhmIkVuY291bnRlcmVkIGV4Y2VwdGlvbiB3aGlsZSBnZXR0aW5nIHBhcmVudDoge2V9IikKICAgICAgICAgICAgYnJlYWsKCiAgICBjb21wb25lbnRzLnJldmVyc2UoKQogICAgcmV0dXJuICcvJyArICcvJy5qb2luKGNvbXBvbmVudHMpCgoKZGVmIGdlbmVyYXRlX3NhZmVfcGF5bG9hZHMoKSAtPiBMaXN0W3N0cl06CiAgICAiIiJHZW5lcmF0ZSBhIGxpc3Qgb2Ygc2FmZSBwYXlsb2FkcyBmb3IgZnV6emluZy4iIiIKICAgIHBheWxvYWRzID0gW10KCiAgICAjIFNob3J0IHJhbmRvbSBzdHJpbmdzCiAgICBmb3IgXyBpbiByYW5nZSg1KToKICAgICAgICBwYXlsb2Fkcy5hcHBlbmQoJycuam9pbihyYW5kb20uY2hvaWNlcyhzdHJpbmcuYXNjaWlfbGV0dGVycyArIHN0cmluZy5kaWdpdHMsIGs9MTApKSkKCiAgICAjIExvbmcgc3RyaW5ncyB0byB0ZXN0IGlucHV0IGxpbWl0cwogICAgcGF5bG9hZHMuYXBwZW5kKCdBJyAqIDI1NikKICAgIHBheWxvYWRzLmFwcGVuZCgnQicgKiAxMDI0KQoKICAgICMgU3RyaW5ncyB3aXRoIHNwZWNpYWwgY2hhcmFjdGVycwogICAgc3BlY2lhbF9jaGFycyA9ICIhQCMkJV4mKigpXystPVtde318OzonLC48Pi8/IgogICAgcGF5bG9hZHMuYXBwZW5kKHNwZWNpYWxfY2hhcnMpCgogICAgIyBVbmljb2RlIGNoYXJhY3RlcnMKICAgIHBheWxvYWRzLmFwcGVuZCgn5rWL6K+V5Lit5paH5a2X56ymJykgICMgQ2hpbmVzZSBjaGFyYWN0ZXJzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ/CfmIPwn5GN8J+Pu/CflKUnKSAgICAgICMgRW1vamlzCgogICAgIyBOdW1lcmljIGlucHV0cwogICAgcGF5bG9hZHMuYXBwZW5kKCcxMjM0NTY3ODkwJykKICAgIHBheWxvYWRzLmFwcGVuZCgnLTk5OTk5OTk5OScpCgogICAgIyBFbXB0eSBzdHJpbmcKICAgIHBheWxvYWRzLmFwcGVuZCgnJykKCiAgICAjIFdoaXRlc3BhY2UgY2hhcmFjdGVycwogICAgcGF5bG9hZHMuYXBwZW5kKCcgICAnKSAgIyBTcGFjZXMKICAgIHBheWxvYWRzLmFwcGVuZCgnXHRcbicpICAjIFRhYiBhbmQgbmV3bGluZQoKICAgICMgRW1haWxzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ3Rlc3RAZXhhbXBsZS5jb20nKQogICAgcGF5bG9hZHMuYXBwZW5kKCd1c2VyLm5hbWUrdGFnK3NvcnRpbmdAZXhhbXBsZS5jb20nKQoKICAgICMgU1FMIGluamVjdGlvbiBhdHRlbXB0cyAoc2FmZSwgbm90IGhhcm1mdWwpCiAgICBwYXlsb2Fkcy5hcHBlbmQoIicgT1IgJzEnPScxIikKICAgIHBheWxvYWRzLmFwcGVuZCgiJzsgRFJPUCBUQUJMRSB1c2VyczsgLS0iKQoKICAgICMgSFRNTCB0YWdzIHRvIHRlc3QgWFNTIGFuZCByZW5kZXJpbmcgaXNzdWVzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJzxzY3JpcHQ+YWxlcnQoIlhTUyIpPC9zY3JpcHQ+JykKICAgIHBheWxvYWRzLmFwcGVuZCgnPGRpdj48cD5UZXN0PC9wPjwvZGl2PicpCgogICAgIyBUeXBpY2FsIGNvcnBvcmF0ZSBpbnB1dHMKICAgIHBheWxvYWRzLmFwcGVuZCgnaHR0cHM6Ly9leGFtcGxlLmNvbScpICAjIFVSTAogICAgcGF5bG9hZHMuYXBwZW5kKCcxMjMgTWFpbiBTdC4sIFNwcmluZ2ZpZWxkLCBVU0EnKSAgIyBBZGRyZXNzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ0pvaG4gRG9lJykgICMgTmFtZQogICAgcGF5bG9hZHMuYXBwZW5kKCciU0VMRUNUICogRlJPTSB1c2VycyBXSEVSRSBpZCA9IDEiJykgICMgU1FMLWxpa2UgaW5wdXQKCiAgICByZXR1cm4gcGF5bG9hZHMKCgpkZWYgcmV0cnlfb25fc3RhbGVfZWxlbWVudChmdW5jKToKICAgICIiIkRlY29yYXRvciB0byByZXRyeSBhIGZ1bmN0aW9uIGlmIGEgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uIGlzIGVuY291bnRlcmVkLiIiIgogICAgZGVmIHdyYXBwZXIoKmFyZ3MsICoqa3dhcmdzKToKICAgICAgICBtYXhfcmV0cmllcyA9IDUgICMgSW5jcmVhc2VkIHJldHJpZXMgdG8gaGFuZGxlIGR5bmFtaWMgZWxlbWVudHMgYmV0dGVyCiAgICAgICAgZm9yIGF0dGVtcHQgaW4gcmFuZ2UobWF4X3JldHJpZXMpOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICByZXR1cm4gZnVuYygqYXJncywgKiprd2FyZ3MpCiAgICAgICAgICAgIGV4Y2VwdCBTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKGYiU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uIGVuY291bnRlcmVkLiBBdHRlbXB0IHthdHRlbXB0ICsgMX0gb2Yge21heF9yZXRyaWVzfS4gRXJyb3I6IHtlfSIpCiAgICAgICAgICAgICAgICBpZiBhdHRlbXB0IDwgbWF4X3JldHJpZXMgLSAxOgogICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMSkKICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGYiTWF4IHJldHJpZXMgcmVhY2hlZC4gU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uIGNvdWxkIG5vdCBiZSByZXNvbHZlZDoge2V9IikKICAgICAgICAgICAgICAgICAgICByYWlzZQogICAgcmV0dXJuIHdyYXBwZXIKCgpAcmV0cnlfb25fc3RhbGVfZWxlbWVudApkZWYgaXNfZWxlbWVudF9kaXNwbGF5ZWQoZWxlbWVudDogV2ViRWxlbWVudCwgZHJpdmVyKSAtPiBib29sOgogICAgIiIiQ2hlY2sgaWYgYW4gZWxlbWVudCBpcyBkaXNwbGF5ZWQsIHdpdGggcmV0cnkgbG9naWMgZm9yIHN0YWxlIGVsZW1lbnRzLiIiIgogICAgc2Nyb2xsX2ludG9fdmlldyhkcml2ZXIsIGVsZW1lbnQpICAjIFNjcm9sbCBpbnRvIHZpZXcgYmVmb3JlIGNoZWNraW5nIHZpc2liaWxpdHkKICAgIHJldHVybiBlbGVtZW50LmlzX2Rpc3BsYXllZCgpCg",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAACSEQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAA6RYAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABFwAAaW1wb3J0IGxvZ2dpbmcKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIucmVtb3RlLndlYmVsZW1lbnQgaW1wb3J0IFdlYkVsZW1lbnQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5zdXBwb3J0LnVpIGltcG9ydCBXZWJEcml2ZXJXYWl0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQgaW1wb3J0IGV4cGVjdGVkX2NvbmRpdGlvbnMgYXMgRUMKZnJvbSBzZWxlbml1bS5jb21tb24uZXhjZXB0aW9ucyBpbXBvcnQgTm9TdWNoRWxlbWVudEV4Y2VwdGlvbiwgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uLCBUaW1lb3V0RXhjZXB0aW9uCmltcG9ydCByYW5kb20KaW1wb3J0IHN0cmluZwpmcm9tIHR5cGluZyBpbXBvcnQgTGlzdAppbXBvcnQgdGltZQoKbG9nZ2VyID0gbG9nZ2luZy5nZXRMb2dnZXIoX19uYW1lX18pCgoKZGVmIHNjcm9sbF9pbnRvX3ZpZXcoZHJpdmVyLCBlbGVtZW50OiBXZWJFbGVtZW50KSAtPiBOb25lOgogICAgIiIiU2Nyb2xsIHRoZSBlbGVtZW50IGludG8gdmlldy4iIiIKICAgIGRyaXZlci5leGVjdXRlX3NjcmlwdCgiYXJndW1lbnRzWzBdLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2NlbnRlcicgfSk7IiwgZWxlbWVudCkKCgpkZWYgZ2V0X3hwYXRoKGVsZW1lbnQ6IFdlYkVsZW1lbnQpIC0+IHN0cjoKICAgICIiIkdldCB0aGUgWFBhdGggb2YgYSBXZWJFbGVtZW50IGJ5IHRyYXZlcnNpbmcgdGhlIERPTS4iIiIKICAgIGNvbXBvbmVudHMgPSBbXQogICAgY2hpbGQgPSBlbGVtZW50CiAgICB3aGlsZSBjaGlsZCBpcyBub3QgTm9uZToKICAgICAgICB0cnk6CiAgICAgICAgICAgICMgR2V0IHRoZSBwYXJlbnQgZWxlbWVudCBvZiB0aGUgY3VycmVudCBub2RlCiAgICAgICAgICAgIHBhcmVudCA9IGNoaWxkLmZpbmRfZWxlbWVudChCeS5YUEFUSCwgIi4uIikKCiAgICAgICAgICAgICMgRW5zdXJlIHRoZSBwYXJlbnQgaXMgbm90IHRoZSBkb2N1bWVudCByb290IG9yIGFuIGludmFsaWQgZWxlbWVudAogICAgICAgICAgICBpZiBub3QgaXNpbnN0YW5jZShwYXJlbnQsIFdlYkVsZW1lbnQpOgogICAgICAgICAgICAgICAgYnJlYWsKCiAgICAgICAgICAgICMgRmluZCBzaWJsaW5ncyB3aXRoIHRoZSBzYW1lIHRhZyBuYW1lIHRvIGRldGVybWluZSB0aGUgaW5kZXgKICAgICAgICAgICAgc2libGluZ3MgPSBwYXJlbnQuZmluZF9lbGVtZW50cyhCeS5YUEFUSCwgY2hpbGQudGFnX25hbWUpCgogICAgICAgICAgICBpZiBsZW4oc2libGluZ3MpID4gMToKICAgICAgICAgICAgICAgIGluZGV4ID0gMQogICAgICAgICAgICAgICAgZm9yIGkgaW4gcmFuZ2UobGVuKHNpYmxpbmdzKSk6CiAgICAgICAgICAgICAgICAgICAgaWYgc2libGluZ3NbaV0gPT0gY2hpbGQ6CiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gaSArIDEKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgIGNvbXBvbmVudHMuYXBwZW5kKGYne2NoaWxkLnRhZ19uYW1lfVt7aW5kZXh9XScpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBjb21wb25lbnRzLmFwcGVuZChjaGlsZC50YWdfbmFtZSkKCiAgICAgICAgICAgICMgTW92ZSB1cCB0byB0aGUgcGFyZW50IGZvciB0aGUgbmV4dCBpdGVyYXRpb24KICAgICAgICAgICAgY2hpbGQgPSBwYXJlbnQKCiAgICAgICAgZXhjZXB0IChOb1N1Y2hFbGVtZW50RXhjZXB0aW9uLCBTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24pIGFzIGU6CiAgICAgICAgICAgICMgSWYgd2UgZW5jb3VudGVyIGFuIGVycm9yIGdldHRpbmcgdGhlIHBhcmVudCwgYnJlYWsgdGhlIGxvb3AKICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoZiJFbmNvdW50ZXJlZCBleGNlcHRpb24gd2hpbGUgZ2V0dGluZyBwYXJlbnQ6IHtlfSIpCiAgICAgICAgICAgIGJyZWFrCgogICAgY29tcG9uZW50cy5yZXZlcnNlKCkKICAgIHJldHVybiAnLycgKyAnLycuam9pbihjb21wb25lbnRzKQoKCmRlZiBnZW5lcmF0ZV9zYWZlX3BheWxvYWRzKCkgLT4gTGlzdFtzdHJdOgogICAgIiIiR2VuZXJhdGUgYSBsaXN0IG9mIHNhZmUgcGF5bG9hZHMgZm9yIGZ1enppbmcuIiIiCiAgICBwYXlsb2FkcyA9IFtdCgogICAgIyBTaG9ydCByYW5kb20gc3RyaW5ncwogICAgZm9yIF8gaW4gcmFuZ2UoNSk6CiAgICAgICAgcGF5bG9hZHMuYXBwZW5kKCcnLmpvaW4ocmFuZG9tLmNob2ljZXMoc3RyaW5nLmFzY2lpX2xldHRlcnMgKyBzdHJpbmcuZGlnaXRzLCBrPTEwKSkpCgogICAgIyBMb25nIHN0cmluZ3MgdG8gdGVzdCBpbnB1dCBsaW1pdHMKICAgIHBheWxvYWRzLmFwcGVuZCgnQScgKiAyNTYpCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ0InICogMTAyNCkKCiAgICAjIFN0cmluZ3Mgd2l0aCBzcGVjaWFsIGNoYXJhY3RlcnMKICAgIHNwZWNpYWxfY2hhcnMgPSAiIUAjJCVeJiooKV8rLT1bXXt9fDs6JywuPD4vPyIKICAgIHBheWxvYWRzLmFwcGVuZChzcGVjaWFsX2NoYXJzKQoKICAgICMgVW5pY29kZSBjaGFyYWN0ZXJzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ+a1i+ivleS4reaWh+Wtl+espicpICAjIENoaW5lc2UgY2hhcmFjdGVycwogICAgcGF5bG9hZHMuYXBwZW5kKCfwn5iD8J+RjfCfj7vwn5SlJykgICAgICAjIEVtb2ppcwoKICAgICMgTnVtZXJpYyBpbnB1dHMKICAgIHBheWxvYWRzLmFwcGVuZCgnMTIzNDU2Nzg5MCcpCiAgICBwYXlsb2Fkcy5hcHBlbmQoJy05OTk5OTk5OTknKQoKICAgICMgRW1wdHkgc3RyaW5nCiAgICBwYXlsb2Fkcy5hcHBlbmQoJycpCgogICAgIyBXaGl0ZXNwYWNlIGNoYXJhY3RlcnMKICAgIHBheWxvYWRzLmFwcGVuZCgnICAgJykgICMgU3BhY2VzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ1x0XG4nKSAgIyBUYWIgYW5kIG5ld2xpbmUKCiAgICAjIEVtYWlscwogICAgcGF5bG9hZHMuYXBwZW5kKCd0ZXN0QGV4YW1wbGUuY29tJykKICAgIHBheWxvYWRzLmFwcGVuZCgndXNlci5uYW1lK3RhZytzb3J0aW5nQGV4YW1wbGUuY29tJykKCiAgICAjIFNRTCBpbmplY3Rpb24gYXR0ZW1wdHMgKHNhZmUsIG5vdCBoYXJtZnVsKQogICAgcGF5bG9hZHMuYXBwZW5kKCInIE9SICcxJz0nMSIpCiAgICBwYXlsb2Fkcy5hcHBlbmQoIic7IERST1AgVEFCTEUgdXNlcnM7IC0tIikKCiAgICAjIEhUTUwgdGFncyB0byB0ZXN0IFhTUyBhbmQgcmVuZGVyaW5nIGlzc3VlcwogICAgcGF5bG9hZHMuYXBwZW5kKCc8c2NyaXB0PmFsZXJ0KCJYU1MiKTwvc2NyaXB0PicpCiAgICBwYXlsb2Fkcy5hcHBlbmQoJzxkaXY+PHA+VGVzdDwvcD48L2Rpdj4nKQoKICAgICMgVHlwaWNhbCBjb3Jwb3JhdGUgaW5wdXRzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ2h0dHBzOi8vZXhhbXBsZS5jb20nKSAgIyBVUkwKICAgIHBheWxvYWRzLmFwcGVuZCgnMTIzIE1haW4gU3QuLCBTcHJpbmdmaWVsZCwgVVNBJykgICMgQWRkcmVzcwogICAgcGF5bG9hZHMuYXBwZW5kKCdKb2huIERvZScpICAjIE5hbWUKICAgIHBheWxvYWRzLmFwcGVuZCgnIlNFTEVDVCAqIEZST00gdXNlcnMgV0hFUkUgaWQgPSAxIicpICAjIFNRTC1saWtlIGlucHV0CgogICAgcmV0dXJuIHBheWxvYWRzCgoKZGVmIHJldHJ5X29uX3N0YWxlX2VsZW1lbnQoZnVuYyk6CiAgICAiIiJEZWNvcmF0b3IgdG8gcmV0cnkgYSBmdW5jdGlvbiBpZiBhIFN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbiBpcyBlbmNvdW50ZXJlZC4iIiIKICAgIGRlZiB3cmFwcGVyKCphcmdzLCAqKmt3YXJncyk6CiAgICAgICAgbWF4X3JldHJpZXMgPSA1ICAjIEluY3JlYXNlZCByZXRyaWVzIHRvIGhhbmRsZSBkeW5hbWljIGVsZW1lbnRzIGJldHRlcgogICAgICAgIGZvciBhdHRlbXB0IGluIHJhbmdlKG1heF9yZXRyaWVzKToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmMoKmFyZ3MsICoqa3dhcmdzKQogICAgICAgICAgICBleGNlcHQgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZyhmIlN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbiBlbmNvdW50ZXJlZC4gQXR0ZW1wdCB7YXR0ZW1wdCArIDF9IG9mIHttYXhfcmV0cmllc30uIEVycm9yOiB7ZX0iKQogICAgICAgICAgICAgICAgaWYgYXR0ZW1wdCA8IG1heF9yZXRyaWVzIC0gMToKICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihmIk1heCByZXRyaWVzIHJlYWNoZWQuIFN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbiBjb3VsZCBub3QgYmUgcmVzb2x2ZWQ6IHtlfSIpCiAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgIHJldHVybiB3cmFwcGVyCgoKQHJldHJ5X29uX3N0YWxlX2VsZW1lbnQKZGVmIGlzX2VsZW1lbnRfZGlzcGxheWVkKGVsZW1lbnQ6IFdlYkVsZW1lbnQsIGRyaXZlcikgLT4gYm9vbDoKICAgICIiIkNoZWNrIGlmIGFuIGVsZW1lbnQgaXMgZGlzcGxheWVkLCB3aXRoIHJldHJ5IGxvZ2ljIGZvciBzdGFsZSBlbGVtZW50cy4iIiIKICAgIHNjcm9sbF9pbnRvX3ZpZXcoZHJpdmVyLCBlbGVtZW50KSAgIyBTY3JvbGwgaW50byB2aWV3IGJlZm9yZSBjaGVja2luZyB2aXNpYmlsaXR5CiAgICByZXR1cm4gZWxlbWVudC5pc19kaXNwbGF5ZWQoKQoKCmRlZiBmaW5kX2FuZF9pbnRlcmFjdF93aXRoX2lucHV0KGRyaXZlciwgeHBhdGg6IHN0ciwgY3NzX3NlbGVjdG9yOiBzdHIsIHBheWxvYWQ6IHN0cikgLT4gTm9uZToKICAgICIiIkZpbmQgYW4gaW5wdXQgZWxlbWVudCBieSBYUGF0aCBvciBDU1Mgc2VsZWN0b3IgYW5kIGludGVyYWN0IHdpdGggaXQgdXNpbmcgYSBwYXlsb2FkLiIiIgogICAgdHJ5OgogICAgICAgICMgVXNlIGV4cGxpY2l0IHdhaXQgdG8gZW5zdXJlIHRoZSBlbGVtZW50IGlzIHByZXNlbnQKICAgICAgICBpbnB1dF9lbGVtZW50ID0gV2ViRHJpdmVyV2FpdChkcml2ZXIsIDIwKS51bnRpbCgKICAgICAgICAgICAgRUMucHJlc2VuY2Vfb2ZfZWxlbWVudF9sb2NhdGVkKChCeS5YUEFUSCwgeHBhdGgpKQogICAgICAgICkKICAgIGV4Y2VwdCBUaW1lb3V0RXhjZXB0aW9uOgogICAgICAgIGxvZ2dlci53YXJuaW5nKGYiRWxlbWVudCB3aXRoIFhQYXRoIHt4cGF0aH0gbm90IGZvdW5kLCB0cnlpbmcgQ1NTIHNlbGVjdG9yLiIpCiAgICAgICAgdHJ5OgogICAgICAgICAgICBpbnB1dF9lbGVtZW50ID0gV2ViRHJpdmVyV2FpdChkcml2ZXIsIDIwKS51bnRpbCgKICAgICAgICAgICAgICAgIEVDLnByZXNlbmNlX29mX2VsZW1lbnRfbG9jYXRlZCgoQnkuQ1NTX1NFTEVDVE9SLCBjc3Nfc2VsZWN0b3IpKQogICAgICAgICAgICApCiAgICAgICAgZXhjZXB0IFRpbWVvdXRFeGNlcHRpb246CiAgICAgICAgICAgIGxvZ2dlci5lcnJvcihmIkVsZW1lbnQgd2l0aCBDU1Mgc2VsZWN0b3Ige2Nzc19zZWxlY3Rvcn0gbm90IGZvdW5kLiIpCiAgICAgICAgICAgIHJldHVybgoKICAgICMgU2Nyb2xsIGludG8gdmlldyBhbmQgaW50ZXJhY3Qgd2l0aCB0aGUgZWxlbWVudAogICAgc2Nyb2xsX2ludG9fdmlldyhkcml2ZXIsIGlucHV0X2VsZW1lbnQpCiAgICB0cnk6CiAgICAgICAgaW5wdXRfZWxlbWVudC5jbGVhcigpCiAgICAgICAgaW5wdXRfZWxlbWVudC5zZW5kX2tleXMocGF5bG9hZCkKICAgICAgICBsb2dnZXIuaW5mbyhmIlN1Y2Nlc3NmdWxseSBpbnRlcmFjdGVkIHdpdGggZWxlbWVudCB1c2luZyBwYXlsb2FkOiB7cGF5bG9hZH0iKQogICAgZXhjZXB0IFN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGxvZ2dlci5lcnJvcihmIkVycm9yIGludGVyYWN0aW5nIHdpdGggZWxlbWVudDoge2V9IikK",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAADpFgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAihoAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"left_delete",
					null,
					"",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAACKGgAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAALh0AAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"left_delete",
					null,
					"",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAuHQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAA9RwAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAANHQAAaW1wb3J0IGxvZ2dpbmcKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIucmVtb3RlLndlYmVsZW1lbnQgaW1wb3J0IFdlYkVsZW1lbnQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5zdXBwb3J0LnVpIGltcG9ydCBXZWJEcml2ZXJXYWl0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQgaW1wb3J0IGV4cGVjdGVkX2NvbmRpdGlvbnMgYXMgRUMKZnJvbSBzZWxlbml1bS5jb21tb24uZXhjZXB0aW9ucyBpbXBvcnQgTm9TdWNoRWxlbWVudEV4Y2VwdGlvbiwgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uLCBUaW1lb3V0RXhjZXB0aW9uCmltcG9ydCByYW5kb20KaW1wb3J0IHN0cmluZwpmcm9tIHR5cGluZyBpbXBvcnQgTGlzdAppbXBvcnQgdGltZQoKbG9nZ2VyID0gbG9nZ2luZy5nZXRMb2dnZXIoX19uYW1lX18pCgoKZGVmIHNjcm9sbF9pbnRvX3ZpZXcoZHJpdmVyLCBlbGVtZW50OiBXZWJFbGVtZW50KSAtPiBOb25lOgogICAgIiIiU2Nyb2xsIHRoZSBlbGVtZW50IGludG8gdmlldy4iIiIKICAgIGRyaXZlci5leGVjdXRlX3NjcmlwdCgiYXJndW1lbnRzWzBdLnNjcm9sbEludG9WaWV3KHsgYmVoYXZpb3I6ICdzbW9vdGgnLCBibG9jazogJ2NlbnRlcicgfSk7IiwgZWxlbWVudCkKCgpkZWYgZ2V0X3hwYXRoKGVsZW1lbnQ6IFdlYkVsZW1lbnQpIC0+IHN0cjoKICAgICIiIkdldCB0aGUgWFBhdGggb2YgYSBXZWJFbGVtZW50IGJ5IHRyYXZlcnNpbmcgdGhlIERPTS4iIiIKICAgIGNvbXBvbmVudHMgPSBbXQogICAgY2hpbGQgPSBlbGVtZW50CiAgICB3aGlsZSBjaGlsZCBpcyBub3QgTm9uZToKICAgICAgICB0cnk6CiAgICAgICAgICAgICMgR2V0IHRoZSBwYXJlbnQgZWxlbWVudCBvZiB0aGUgY3VycmVudCBub2RlCiAgICAgICAgICAgIHBhcmVudCA9IGNoaWxkLmZpbmRfZWxlbWVudChCeS5YUEFUSCwgIi4uIikKCiAgICAgICAgICAgICMgRW5zdXJlIHRoZSBwYXJlbnQgaXMgbm90IHRoZSBkb2N1bWVudCByb290IG9yIGFuIGludmFsaWQgZWxlbWVudAogICAgICAgICAgICBpZiBub3QgaXNpbnN0YW5jZShwYXJlbnQsIFdlYkVsZW1lbnQpOgogICAgICAgICAgICAgICAgYnJlYWsKCiAgICAgICAgICAgICMgRmluZCBzaWJsaW5ncyB3aXRoIHRoZSBzYW1lIHRhZyBuYW1lIHRvIGRldGVybWluZSB0aGUgaW5kZXgKICAgICAgICAgICAgc2libGluZ3MgPSBwYXJlbnQuZmluZF9lbGVtZW50cyhCeS5YUEFUSCwgY2hpbGQudGFnX25hbWUpCgogICAgICAgICAgICBpZiBsZW4oc2libGluZ3MpID4gMToKICAgICAgICAgICAgICAgIGluZGV4ID0gMQogICAgICAgICAgICAgICAgZm9yIGkgaW4gcmFuZ2UobGVuKHNpYmxpbmdzKSk6CiAgICAgICAgICAgICAgICAgICAgaWYgc2libGluZ3NbaV0gPT0gY2hpbGQ6CiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gaSArIDEKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgIGNvbXBvbmVudHMuYXBwZW5kKGYne2NoaWxkLnRhZ19uYW1lfVt7aW5kZXh9XScpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBjb21wb25lbnRzLmFwcGVuZChjaGlsZC50YWdfbmFtZSkKCiAgICAgICAgICAgICMgTW92ZSB1cCB0byB0aGUgcGFyZW50IGZvciB0aGUgbmV4dCBpdGVyYXRpb24KICAgICAgICAgICAgY2hpbGQgPSBwYXJlbnQKCiAgICAgICAgZXhjZXB0IChOb1N1Y2hFbGVtZW50RXhjZXB0aW9uLCBTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24pIGFzIGU6CiAgICAgICAgICAgICMgSWYgd2UgZW5jb3VudGVyIGFuIGVycm9yIGdldHRpbmcgdGhlIHBhcmVudCwgYnJlYWsgdGhlIGxvb3AKICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoZiJFbmNvdW50ZXJlZCBleGNlcHRpb24gd2hpbGUgZ2V0dGluZyBwYXJlbnQ6IHtlfSIpCiAgICAgICAgICAgIGJyZWFrCgogICAgY29tcG9uZW50cy5yZXZlcnNlKCkKICAgIHJldHVybiAnLycgKyAnLycuam9pbihjb21wb25lbnRzKQoKCmRlZiBnZW5lcmF0ZV9zYWZlX3BheWxvYWRzKCkgLT4gTGlzdFtzdHJdOgogICAgIiIiR2VuZXJhdGUgYSBsaXN0IG9mIHNhZmUgcGF5bG9hZHMgZm9yIGZ1enppbmcuIiIiCiAgICBwYXlsb2FkcyA9IFtdCgogICAgIyBTaG9ydCByYW5kb20gc3RyaW5ncwogICAgZm9yIF8gaW4gcmFuZ2UoNSk6CiAgICAgICAgcGF5bG9hZHMuYXBwZW5kKCcnLmpvaW4ocmFuZG9tLmNob2ljZXMoc3RyaW5nLmFzY2lpX2xldHRlcnMgKyBzdHJpbmcuZGlnaXRzLCBrPTEwKSkpCgogICAgIyBMb25nIHN0cmluZ3MgdG8gdGVzdCBpbnB1dCBsaW1pdHMKICAgIHBheWxvYWRzLmFwcGVuZCgnQScgKiAyNTYpCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ0InICogMTAyNCkKCiAgICAjIFN0cmluZ3Mgd2l0aCBzcGVjaWFsIGNoYXJhY3RlcnMKICAgIHNwZWNpYWxfY2hhcnMgPSAiIUAjJCVeJiooKV8rLT1bXXt9fDs6JywuPD4vPyIKICAgIHBheWxvYWRzLmFwcGVuZChzcGVjaWFsX2NoYXJzKQoKICAgICMgVW5pY29kZSBjaGFyYWN0ZXJzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ+a1i+ivleS4reaWh+Wtl+espicpICAjIENoaW5lc2UgY2hhcmFjdGVycwogICAgcGF5bG9hZHMuYXBwZW5kKCfwn5iD8J+RjfCfj7vwn5SlJykgICAgICAjIEVtb2ppcwoKICAgICMgTnVtZXJpYyBpbnB1dHMKICAgIHBheWxvYWRzLmFwcGVuZCgnMTIzNDU2Nzg5MCcpCiAgICBwYXlsb2Fkcy5hcHBlbmQoJy05OTk5OTk5OTknKQoKICAgICMgRW1wdHkgc3RyaW5nCiAgICBwYXlsb2Fkcy5hcHBlbmQoJycpCgogICAgIyBXaGl0ZXNwYWNlIGNoYXJhY3RlcnMKICAgIHBheWxvYWRzLmFwcGVuZCgnICAgJykgICMgU3BhY2VzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ1x0XG4nKSAgIyBUYWIgYW5kIG5ld2xpbmUKCiAgICAjIEVtYWlscwogICAgcGF5bG9hZHMuYXBwZW5kKCd0ZXN0QGV4YW1wbGUuY29tJykKICAgIHBheWxvYWRzLmFwcGVuZCgndXNlci5uYW1lK3RhZytzb3J0aW5nQGV4YW1wbGUuY29tJykKCiAgICAjIFNRTCBpbmplY3Rpb24gYXR0ZW1wdHMgKHNhZmUsIG5vdCBoYXJtZnVsKQogICAgcGF5bG9hZHMuYXBwZW5kKCInIE9SICcxJz0nMSIpCiAgICBwYXlsb2Fkcy5hcHBlbmQoIic7IERST1AgVEFCTEUgdXNlcnM7IC0tIikKCiAgICAjIEhUTUwgdGFncyB0byB0ZXN0IFhTUyBhbmQgcmVuZGVyaW5nIGlzc3VlcwogICAgcGF5bG9hZHMuYXBwZW5kKCc8c2NyaXB0PmFsZXJ0KCJYU1MiKTwvc2NyaXB0PicpCiAgICBwYXlsb2Fkcy5hcHBlbmQoJzxkaXY+PHA+VGVzdDwvcD48L2Rpdj4nKQoKICAgICMgVHlwaWNhbCBjb3Jwb3JhdGUgaW5wdXRzCiAgICBwYXlsb2Fkcy5hcHBlbmQoJ2h0dHBzOi8vZXhhbXBsZS5jb20nKSAgIyBVUkwKICAgIHBheWxvYWRzLmFwcGVuZCgnMTIzIE1haW4gU3QuLCBTcHJpbmdmaWVsZCwgVVNBJykgICMgQWRkcmVzcwogICAgcGF5bG9hZHMuYXBwZW5kKCdKb2huIERvZScpICAjIE5hbWUKICAgIHBheWxvYWRzLmFwcGVuZCgnIlNFTEVDVCAqIEZST00gdXNlcnMgV0hFUkUgaWQgPSAxIicpICAjIFNRTC1saWtlIGlucHV0CgogICAgcmV0dXJuIHBheWxvYWRzCgoKZGVmIHJldHJ5X29uX3N0YWxlX2VsZW1lbnQoZnVuYyk6CiAgICAiIiJEZWNvcmF0b3IgdG8gcmV0cnkgYSBmdW5jdGlvbiBpZiBhIFN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbiBpcyBlbmNvdW50ZXJlZC4iIiIKICAgIGRlZiB3cmFwcGVyKCphcmdzLCAqKmt3YXJncyk6CiAgICAgICAgbWF4X3JldHJpZXMgPSA1ICAjIEluY3JlYXNlZCByZXRyaWVzIHRvIGhhbmRsZSBkeW5hbWljIGVsZW1lbnRzIGJldHRlcgogICAgICAgIGZvciBhdHRlbXB0IGluIHJhbmdlKG1heF9yZXRyaWVzKToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmMoKmFyZ3MsICoqa3dhcmdzKQogICAgICAgICAgICBleGNlcHQgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBsb2dnZXIud2FybmluZyhmIlN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbiBlbmNvdW50ZXJlZC4gQXR0ZW1wdCB7YXR0ZW1wdCArIDF9IG9mIHttYXhfcmV0cmllc30uIEVycm9yOiB7ZX0iKQogICAgICAgICAgICAgICAgaWYgYXR0ZW1wdCA8IG1heF9yZXRyaWVzIC0gMToKICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihmIk1heCByZXRyaWVzIHJlYWNoZWQuIFN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbiBjb3VsZCBub3QgYmUgcmVzb2x2ZWQ6IHtlfSIpCiAgICAgICAgICAgICAgICAgICAgcmFpc2UKICAgIHJldHVybiB3cmFwcGVyCgoKQHJldHJ5X29uX3N0YWxlX2VsZW1lbnQKZGVmIGlzX2VsZW1lbnRfZGlzcGxheWVkKGVsZW1lbnQ6IFdlYkVsZW1lbnQsIGRyaXZlcikgLT4gYm9vbDoKICAgICIiIkNoZWNrIGlmIGFuIGVsZW1lbnQgaXMgZGlzcGxheWVkLCB3aXRoIHJldHJ5IGxvZ2ljIGZvciBzdGFsZSBlbGVtZW50cy4iIiIKICAgIHNjcm9sbF9pbnRvX3ZpZXcoZHJpdmVyLCBlbGVtZW50KSAgIyBTY3JvbGwgaW50byB2aWV3IGJlZm9yZSBjaGVja2luZyB2aXNpYmlsaXR5CiAgICByZXR1cm4gZWxlbWVudC5pc19kaXNwbGF5ZWQoKQoKCmRlZiBmaW5kX2FuZF9pbnRlcmFjdF93aXRoX2lucHV0KGRyaXZlciwgeHBhdGg6IHN0ciwgY3NzX3NlbGVjdG9yOiBzdHIsIHBheWxvYWQ6IHN0cikgLT4gTm9uZToKICAgICIiIkZpbmQgYW4gaW5wdXQgZWxlbWVudCBieSBYUGF0aCBvciBDU1Mgc2VsZWN0b3IgYW5kIGludGVyYWN0IHdpdGggaXQgdXNpbmcgYSBwYXlsb2FkLiIiIgogICAgbWF4X3JldHJpZXMgPSA1CiAgICBmb3IgYXR0ZW1wdCBpbiByYW5nZShtYXhfcmV0cmllcyk6CiAgICAgICAgdHJ5OgogICAgICAgICAgICAjIFVzZSBleHBsaWNpdCB3YWl0IHRvIGVuc3VyZSB0aGUgZWxlbWVudCBpcyBwcmVzZW50IHVzaW5nIFhQYXRoIGZpcnN0CiAgICAgICAgICAgIGlucHV0X2VsZW1lbnQgPSBXZWJEcml2ZXJXYWl0KGRyaXZlciwgMjApLnVudGlsKAogICAgICAgICAgICAgICAgRUMucHJlc2VuY2Vfb2ZfZWxlbWVudF9sb2NhdGVkKChCeS5YUEFUSCwgeHBhdGgpKQogICAgICAgICAgICApCiAgICAgICAgICAgIGxvZ2dlci5pbmZvKGYiRWxlbWVudCBmb3VuZCB1c2luZyBYUGF0aDoge3hwYXRofSIpCiAgICAgICAgZXhjZXB0IFRpbWVvdXRFeGNlcHRpb246CiAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKGYiRWxlbWVudCB3aXRoIFhQYXRoIHt4cGF0aH0gbm90IGZvdW5kLCB0cnlpbmcgQ1NTIHNlbGVjdG9yLiBBdHRlbXB0IHthdHRlbXB0ICsgMX0gb2Yge21heF9yZXRyaWVzfSIpCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQgPSBXZWJEcml2ZXJXYWl0KGRyaXZlciwgMjApLnVudGlsKAogICAgICAgICAgICAgICAgICAgIEVDLnByZXNlbmNlX29mX2VsZW1lbnRfbG9jYXRlZCgoQnkuQ1NTX1NFTEVDVE9SLCBjc3Nfc2VsZWN0b3IpKQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oZiJFbGVtZW50IGZvdW5kIHVzaW5nIENTUyBzZWxlY3Rvcjoge2Nzc19zZWxlY3Rvcn0iKQogICAgICAgICAgICBleGNlcHQgVGltZW91dEV4Y2VwdGlvbjoKICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihmIkVsZW1lbnQgd2l0aCBDU1Mgc2VsZWN0b3Ige2Nzc19zZWxlY3Rvcn0gbm90IGZvdW5kLiBBdHRlbXB0IHthdHRlbXB0ICsgMX0gb2Yge21heF9yZXRyaWVzfSIpCiAgICAgICAgICAgICAgICBpZiBhdHRlbXB0IDwgbWF4X3JldHJpZXMgLSAxOgogICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMSkKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBsb2dnZXIuZXJyb3IoZiJNYXggcmV0cmllcyByZWFjaGVkLiBDb3VsZCBub3QgbG9jYXRlIGVsZW1lbnQuIikKICAgICAgICAgICAgICAgICAgICByZXR1cm4KCiAgICAgICAgIyBTY3JvbGwgaW50byB2aWV3IGFuZCBpbnRlcmFjdCB3aXRoIHRoZSBlbGVtZW50CiAgICAgICAgc2Nyb2xsX2ludG9fdmlldyhkcml2ZXIsIGlucHV0X2VsZW1lbnQpCiAgICAgICAgdHJ5OgogICAgICAgICAgICBpbnB1dF9lbGVtZW50LmNsZWFyKCkKICAgICAgICAgICAgaW5wdXRfZWxlbWVudC5zZW5kX2tleXMocGF5bG9hZCkKICAgICAgICAgICAgbG9nZ2VyLmluZm8oZiJTdWNjZXNzZnVsbHkgaW50ZXJhY3RlZCB3aXRoIGVsZW1lbnQgdXNpbmcgcGF5bG9hZDoge3BheWxvYWR9IikKICAgICAgICAgICAgYnJlYWsKICAgICAgICBleGNlcHQgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGxvZ2dlci53YXJuaW5nKGYiU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uIGVuY291bnRlcmVkIGR1cmluZyBpbnRlcmFjdGlvbi4gQXR0ZW1wdCB7YXR0ZW1wdCArIDF9IG9mIHttYXhfcmV0cmllc30uIEVycm9yOiB7ZX0iKQogICAgICAgICAgICBpZiBhdHRlbXB0IDwgbWF4X3JldHJpZXMgLSAxOgogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgxKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGYiTWF4IHJldHJpZXMgcmVhY2hlZC4gU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uIGNvdWxkIG5vdCBiZSByZXNvbHZlZDoge2V9IikKICAgICAgICAgICAgICAgIHJldHVybgoKCmRlZiBmaW5kX2FjY2Vzc2libGVfZWxlbWVudHMoZHJpdmVyKSAtPiBMaXN0W1dlYkVsZW1lbnRdOgogICAgIiIiRmluZCBpbnB1dCBmaWVsZHMgYW5kIGJ1dHRvbnMgdXNpbmcgc3RhbmRhcmQgbWV0aG9kcy4iIiIKICAgIGFjY2Vzc2libGVfZWxlbWVudHMgPSBbXQogICAgdHJ5OgogICAgICAgIGlucHV0X2VsZW1lbnRzID0gZHJpdmVyLmZpbmRfZWxlbWVudHMoQnkuVEFHX05BTUUsICJpbnB1dCIpCiAgICAgICAgYnV0dG9uX2VsZW1lbnRzID0gZHJpdmVyLmZpbmRfZWxlbWVudHMoQnkuVEFHX05BTUUsICJidXR0b24iKQogICAgICAgIGFjY2Vzc2libGVfZWxlbWVudHMuZXh0ZW5kKGlucHV0X2VsZW1lbnRzKQogICAgICAgIGFjY2Vzc2libGVfZWxlbWVudHMuZXh0ZW5kKGJ1dHRvbl9lbGVtZW50cykKICAgICAgICBsb2dnZXIuaW5mbyhmIkZvdW5kIHtsZW4oYWNjZXNzaWJsZV9lbGVtZW50cyl9IGFjY2Vzc2libGUgaW5wdXQgZmllbGRzIGFuZCBidXR0b25zLiIpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgbG9nZ2VyLmVycm9yKGYiRXJyb3IgZmluZGluZyBhY2Nlc3NpYmxlIGVsZW1lbnRzOiB7ZX0iKQogICAgcmV0dXJuIGFjY2Vzc2libGVfZWxlbWVudHMK",
					"EgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAA9RwAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAA6gwAAAAAAAAAAAAA",
					"EgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "selenium_fuzzer/fuzzer.py",
			"settings":
			{
				"buffer_size": 5612,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAARS4AAAAAAAAAAAAA",
					"FQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANYCAAAAAAAA1wIAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWAgAAAAAAANYCAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"",
					null,
					"AgAAANcCAAAAAAAA1wIAAAAAAAAAAAAA1gIAAAAAAAD/AgAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAADWAgAAAAAAANYCAAAAAAAAAAAAAAAA8L/XAgAAAAAAANcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"",
					null,
					"AgAAAMcCAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAADgAAABpbXBvcnQgYXJncGFyc2Vmcm9tIHNlbGVuaXVtX2Z1enplci5jb25maWcgaW1wb3J0IENvbmZpZw",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/AgAAAAAAAMcCAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAHAuAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAA9S8AAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"",
					null,
					"",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPUvAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"",
					null,
					"",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAALYxAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"left_delete",
					null,
					"",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAD0wAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAWhMAAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABaEwAAaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IHRpbWUKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QsIERpY3QKZnJvbSBzZWxlbml1bS5jb21tb24uZXhjZXB0aW9ucyBpbXBvcnQgVGltZW91dEV4Y2VwdGlvbiwgTm9TdWNoRWxlbWVudEV4Y2VwdGlvbiwgRWxlbWVudE5vdEludGVyYWN0YWJsZUV4Y2VwdGlvbiwgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uCmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLmNvbW1vbi5ieSBpbXBvcnQgQnkKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmtleXMgaW1wb3J0IEtleXMKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIucmVtb3RlLndlYmVsZW1lbnQgaW1wb3J0IFdlYkVsZW1lbnQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydC51aSBpbXBvcnQgV2ViRHJpdmVyV2FpdApmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5zdXBwb3J0IGltcG9ydCBleHBlY3RlZF9jb25kaXRpb25zIGFzIEVDCmZyb20gc2VsZW5pdW1fZnV6emVyLnNlbGVuaXVtX2RyaXZlciBpbXBvcnQgY3JlYXRlX2RyaXZlcgpmcm9tIHNlbGVuaXVtX2Z1enplci51dGlscyBpbXBvcnQgZ2VuZXJhdGVfc2FmZV9wYXlsb2Fkcywgc2Nyb2xsX2ludG9fdmlldwpmcm9tIHNlbGVuaXVtX2Z1enplci5sb2dnZXIgaW1wb3J0IGdldF9sb2dnZXIKZnJvbSBzZWxlbml1bV9mdXp6ZXIuZXhjZXB0aW9ucyBpbXBvcnQgRWxlbWVudE5vdEZvdW5kRXJyb3IsIEVsZW1lbnROb3RJbnRlcmFjdGFibGVFcnJvcgpmcm9tIHNlbGVuaXVtX2Z1enplci5jb25maWcgaW1wb3J0IENvbmZpZwppbXBvcnQgYXJncGFyc2UKZnJvbSBzZWxlbml1bV9mdXp6ZXIudW5oaWRlciBpbXBvcnQgVW5oaWRlcgpmcm9tIHNlbGVuaXVtX2Z1enplci5pbnB1dF9kZXRlY3RvciBpbXBvcnQgSW5wdXREZXRlY3Rvcgpmcm9tIHNlbGVuaXVtX2Z1enplci5jbGlja19hbmFseXplciBpbXBvcnQgQ2xpY2tBbmFseXplcgoKbG9nZ2VyID0gZ2V0X2xvZ2dlcihfX25hbWVfXykKCmNsYXNzIEZ1enplcjoKICAgICIiIk1haW4gY2xhc3MgZm9yIHRoZSBzZWxlbml1bSBmdXp6ZXIuIiIiCgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHVybDogc3RyLCBoZWFkbGVzczogYm9vbCA9IEZhbHNlKToKICAgICAgICBzZWxmLnVybCA9IHVybAogICAgICAgIHNlbGYuZHJpdmVyID0gY3JlYXRlX2RyaXZlcihoZWFkbGVzcz1oZWFkbGVzcykKICAgICAgICBzZWxmLnVuaGlkZXIgPSBVbmhpZGVyKHNlbGYuZHJpdmVyKQogICAgICAgIHNlbGYuaW5wdXRfZGV0ZWN0b3IgPSBJbnB1dERldGVjdG9yKHNlbGYuZHJpdmVyKQogICAgICAgIHNlbGYuY2xpY2tfYW5hbHl6ZXIgPSBDbGlja0FuYWx5emVyKHNlbGYuZHJpdmVyKQoKICAgIGRlZiBmdXp6X2ZpZWxkKHNlbGYsIGlucHV0X2VsZW1lbnQ6IFdlYkVsZW1lbnQsIGlucHV0X25hbWU6IHN0ciwgZGVsYXk6IGludCkgLT4gTm9uZToKICAgICAgICAiIiJGdXp6IGEgc2luZ2xlIGlucHV0IGZpZWxkLiIiIgogICAgICAgIHBheWxvYWRzID0gZ2VuZXJhdGVfc2FmZV9wYXlsb2FkcygpCgogICAgICAgIGZvciBwYXlsb2FkIGluIHBheWxvYWRzOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBpZiBub3QgaW5wdXRfZWxlbWVudC5pc19kaXNwbGF5ZWQoKToKICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhmIkZpZWxkIHtpbnB1dF9uYW1lfSBpcyBub3QgZGlzcGxheWVkLiBBdHRlbXB0aW5nIHRvIHVuaGlkZSBpdC4iKQogICAgICAgICAgICAgICAgICAgIHNlbGYudW5oaWRlci51bmhpZGVfZmllbGQoaW5wdXRfZWxlbWVudCkKICAgICAgICAgICAgICAgICAgICBXZWJEcml2ZXJXYWl0KHNlbGYuZHJpdmVyLCAyMCkudW50aWwoRUMudmlzaWJpbGl0eV9vZihpbnB1dF9lbGVtZW50KSkKCiAgICAgICAgICAgICAgICBzY3JvbGxfaW50b192aWV3KHNlbGYuZHJpdmVyLCBpbnB1dF9lbGVtZW50KQogICAgICAgICAgICAgICAgV2ViRHJpdmVyV2FpdChzZWxmLmRyaXZlciwgMjApLnVudGlsKEVDLmVsZW1lbnRfdG9fYmVfY2xpY2thYmxlKChCeS5YUEFUSCwgc2VsZi5nZXRfeHBhdGgoaW5wdXRfZWxlbWVudCkpKSkKCiAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LmNsZWFyKCkKICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQuc2VuZF9rZXlzKHBheWxvYWQpCiAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhmIkZ1enppbmcgRmllbGQ6IHtpbnB1dF9uYW1lfSwgUGF5bG9hZDoge3BheWxvYWR9IikKICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoZGVsYXkpCgogICAgICAgICAgICAgICAgIyBUcmlnZ2VyIGV2ZW50cwogICAgICAgICAgICAgICAgaW5wdXRfZWxlbWVudC5zZW5kX2tleXMoS2V5cy5UQUIpCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuNSkKCiAgICAgICAgICAgICAgICBzZWxmLmRyaXZlci5leGVjdXRlX3NjcmlwdCgKICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzWzBdLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdpbnB1dCcsIHsgYnViYmxlczogdHJ1ZSB9KSk7IiwKICAgICAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50CiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBzZWxmLmRyaXZlci5leGVjdXRlX3NjcmlwdCgKICAgICAgICAgICAgICAgICAgICAiYXJndW1lbnRzWzBdLmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdjaGFuZ2UnLCB7IGJ1YmJsZXM6IHRydWUgfSkpOyIsCiAgICAgICAgICAgICAgICAgICAgaW5wdXRfZWxlbWVudAogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjUpCgogICAgICAgICAgICAgICAgIyBBbmFseXplIHJlc3BvbnNlCiAgICAgICAgICAgICAgICBzZWxmLmNsaWNrX2FuYWx5emVyLmFuYWx5emVfcmVzcG9uc2UoKQoKICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGYiRXJyb3IgZnV6emluZyB3aXRoIHBheWxvYWQgJ3twYXlsb2FkfSc6IHtlfSIpCiAgICAgICAgICAgICAgICBzZWxmLmRyaXZlci5zYXZlX3NjcmVlbnNob3QoZiJlcnJvcl97aW5wdXRfbmFtZX0ucG5nIikKCiAgICBkZWYgcnVuX2Z1enpfZmllbGRzKHNlbGYsIGRlbGF5OiBpbnQgPSAxKSAtPiBOb25lOgogICAgICAgICIiIlJ1biB0aGUgZnV6emVyIGZvciBpbnB1dCBmaWVsZHMuIiIiCiAgICAgICAgdHJ5OgogICAgICAgICAgICBpbnB1dHMgPSBzZWxmLmlucHV0X2RldGVjdG9yLmRldGVjdF9pbnB1dHMoc2VsZi51cmwpCiAgICAgICAgICAgIGlmIGlucHV0czoKICAgICAgICAgICAgICAgICMgTGlzdCBhdmFpbGFibGUgaW5wdXQgZmllbGRzCiAgICAgICAgICAgICAgICBzZWxmLmlucHV0X2RldGVjdG9yLmxpc3RfaW5wdXRzKGlucHV0cykKICAgICAgICAgICAgICAgICMgUHJvbXB0IHVzZXIgdG8gc2VsZWN0IGlucHV0CiAgICAgICAgICAgICAgICBzZWxlY3RlZF9mb3JtLCBzZWxlY3RlZF9maWVsZCA9IHNlbGYuaW5wdXRfZGV0ZWN0b3Iuc2VsZWN0X2lucHV0KGlucHV0cykKICAgICAgICAgICAgICAgIGZvcm1faW5mbyA9IGlucHV0c1tzZWxlY3RlZF9mb3JtXQogICAgICAgICAgICAgICAgaW5wdXRfZWxlbWVudCA9IGZvcm1faW5mb1snaW5wdXRzJ11bc2VsZWN0ZWRfZmllbGRdCiAgICAgICAgICAgICAgICBpbnB1dF9uYW1lID0gaW5wdXRfZWxlbWVudC5nZXRfYXR0cmlidXRlKCdpZCcpIG9yIGlucHV0X2VsZW1lbnQuZ2V0X2F0dHJpYnV0ZSgnbmFtZScpIG9yICdVbm5hbWVkJwogICAgICAgICAgICAgICAgc2VsZi5mdXp6X2ZpZWxkKGlucHV0X2VsZW1lbnQsIGlucHV0X25hbWUsIGRlbGF5KQogICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgIHNlbGYuZHJpdmVyLnF1aXQoKQoKICAgIGRlZiBydW5fY2xpY2tfZWxlbWVudHMoc2VsZiwgZGVsYXk6IGludCA9IDEpIC0+IE5vbmU6CiAgICAgICAgIiIiUnVuIHRoZSBmdXp6ZXIgdG8gY2xpY2sgdGhyb3VnaCBjbGlja2FibGUgZWxlbWVudHMuIiIiCiAgICAgICAgdHJ5OgogICAgICAgICAgICBjbGlja2FibGVfZWxlbWVudHMgPSBzZWxmLmlucHV0X2RldGVjdG9yLmRldGVjdF9jbGlja2FibGVfZWxlbWVudHMoKQogICAgICAgICAgICBmb3IgZWxlbWVudCBpbiBjbGlja2FibGVfZWxlbWVudHM6CiAgICAgICAgICAgICAgICBzZWxmLmNsaWNrX2FuYWx5emVyLmNsaWNrX2VsZW1lbnQoZWxlbWVudCkKICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoZGVsYXkpCiAgICAgICAgZmluYWxseToKICAgICAgICAgICAgc2VsZi5kcml2ZXIucXVpdCgpCgppZiBfX25hbWVfXyA9PSAiX19tYWluX18iOgogICAgcGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoZGVzY3JpcHRpb249IlNlbGVuaXVtIEZ1enplciBTY3JpcHQiKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgidXJsIiwgaGVscD0iVVJMIHRvIGZ1enoiKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1mdXp6LWZpZWxkcyIsIGFjdGlvbj0ic3RvcmVfdHJ1ZSIsIGhlbHA9IkZ1enogaW5wdXQgZmllbGRzIikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tY2xpY2stZWxlbWVudHMiLCBhY3Rpb249InN0b3JlX3RydWUiLCBoZWxwPSJDbGljayB0aHJvdWdoIGNsaWNrYWJsZSBlbGVtZW50cyIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLWRlbGF5IiwgdHlwZT1pbnQsIGRlZmF1bHQ9MSwgaGVscD0iRGVsYXkgYmV0d2VlbiBhY3Rpb25zIGluIHNlY29uZHMiKQoKICAgIGFyZ3MgPSBwYXJzZXIucGFyc2VfYXJncygpCgogICAgZnV6emVyID0gRnV6emVyKGFyZ3MudXJsLCBoZWFkbGVzcz1Db25maWcuU0VMRU5JVU1fSEVBRExFU1MpCgogICAgaWYgYXJncy5mdXp6X2ZpZWxkczoKICAgICAgICBmdXp6ZXIucnVuX2Z1enpfZmllbGRzKGRlbGF5PWFyZ3MuZGVsYXkpCgogICAgaWYgYXJncy5jbGlja19lbGVtZW50czoKICAgICAgICBmdXp6ZXIucnVuX2NsaWNrX2VsZW1lbnRzKGRlbGF5PWFyZ3MuZGVsYXkpCg",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAABaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAVBMAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMkAAAAAAAAAygAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyQAAAAAAAADJAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"",
					null,
					"AgAAAMoAAAAAAAAAFwEAAAAAAAAAAAAAyQAAAAAAAAAWAQAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAyQAAAAAAAADJAAAAAAAAAAAAAAAAAPC/ygAAAAAAAADKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					3,
					"left_delete",
					null,
					"AwAAAM8AAAAAAAAAzwAAAAAAAABHAAAAZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeSAgIyBBZGQgdGhpcyBsaW5lIHRvIGZpeCB0aGUgaXNzdWXOAAAAAAAAAM4AAAAAAAAAAQAAAHPNAAAAAAAAAM0AAAAAAAAAAQAAACA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzwAAAAAAAAAWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					4,
					"left_delete",
					null,
					"BAAAAMwAAAAAAAAAzAAAAAAAAAABAAAAbcsAAAAAAAAAywAAAAAAAAABAAAAb8oAAAAAAAAAygAAAAAAAAABAAAAcskAAAAAAAAAyQAAAAAAAAABAAAAZg",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzQAAAAAAAADNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					2,
					"left_delete",
					null,
					"AgAAABgBAAAAAAAAGAEAAAAAAAArAAAAZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeRcBAAAAAAAAFwEAAAAAAAABAAAACg",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQwEAAAAAAAAYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAB2EwAAaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IHRpbWUKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QsIERpY3QKZnJvbSBzZWxlbml1bS5jb21tb24uZXhjZXB0aW9ucyBpbXBvcnQgVGltZW91dEV4Y2VwdGlvbiwgTm9TdWNoRWxlbWVudEV4Y2VwdGlvbiwgRWxlbWVudE5vdEludGVyYWN0YWJsZUV4Y2VwdGlvbiwgU3RhbGVFbGVtZW50UmVmZXJlbmNlRXhjZXB0aW9uCmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLmNvbW1vbi5ieSBpbXBvcnQgQnkgICMgQWRkIHRoaXMgbGluZSB0byBmaXggdGhlIGlzc3VlCmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLmNvbW1vbi5rZXlzIGltcG9ydCBLZXlzCmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnJlbW90ZS53ZWJlbGVtZW50IGltcG9ydCBXZWJFbGVtZW50CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQudWkgaW1wb3J0IFdlYkRyaXZlcldhaXQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydCBpbXBvcnQgZXhwZWN0ZWRfY29uZGl0aW9ucyBhcyBFQwpmcm9tIHNlbGVuaXVtX2Z1enplci5zZWxlbml1bV9kcml2ZXIgaW1wb3J0IGNyZWF0ZV9kcml2ZXIKZnJvbSBzZWxlbml1bV9mdXp6ZXIudXRpbHMgaW1wb3J0IGdlbmVyYXRlX3NhZmVfcGF5bG9hZHMsIHNjcm9sbF9pbnRvX3ZpZXcsIGdldF94cGF0aApmcm9tIHNlbGVuaXVtX2Z1enplci5sb2dnZXIgaW1wb3J0IGdldF9sb2dnZXIKZnJvbSBzZWxlbml1bV9mdXp6ZXIuZXhjZXB0aW9ucyBpbXBvcnQgRWxlbWVudE5vdEZvdW5kRXJyb3IsIEVsZW1lbnROb3RJbnRlcmFjdGFibGVFcnJvcgpmcm9tIHNlbGVuaXVtX2Z1enplci51bmhpZGVyIGltcG9ydCBVbmhpZGVyCmZyb20gc2VsZW5pdW1fZnV6emVyLmlucHV0X2RldGVjdG9yIGltcG9ydCBJbnB1dERldGVjdG9yCmZyb20gc2VsZW5pdW1fZnV6emVyLmNsaWNrX2FuYWx5emVyIGltcG9ydCBDbGlja0FuYWx5emVyCmltcG9ydCBhcmdwYXJzZQoKbG9nZ2VyID0gZ2V0X2xvZ2dlcihfX25hbWVfXykKCmNsYXNzIEZ1enplcjoKICAgICIiIk1haW4gY2xhc3MgZm9yIHRoZSBzZWxlbml1bSBmdXp6ZXIuIiIiCgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHVybDogc3RyLCBoZWFkbGVzczogYm9vbCA9IEZhbHNlKToKICAgICAgICBzZWxmLnVybCA9IHVybAogICAgICAgIHNlbGYuZHJpdmVyID0gY3JlYXRlX2RyaXZlcihoZWFkbGVzcz1oZWFkbGVzcykKICAgICAgICBzZWxmLnVuaGlkZXIgPSBVbmhpZGVyKHNlbGYuZHJpdmVyKQogICAgICAgIHNlbGYuaW5wdXRfZGV0ZWN0b3IgPSBJbnB1dERldGVjdG9yKHNlbGYuZHJpdmVyKQogICAgICAgIHNlbGYuY2xpY2tfYW5hbHl6ZXIgPSBDbGlja0FuYWx5emVyKHNlbGYuZHJpdmVyKQoKICAgIGRlZiBmdXp6X2ZpZWxkKHNlbGYsIGlucHV0X2VsZW1lbnQ6IFdlYkVsZW1lbnQsIGlucHV0X25hbWU6IHN0ciwgZGVsYXk6IGludCkgLT4gTm9uZToKICAgICAgICAiIiJGdXp6IGEgc2luZ2xlIGlucHV0IGZpZWxkLiIiIgogICAgICAgIHBheWxvYWRzID0gZ2VuZXJhdGVfc2FmZV9wYXlsb2FkcygpCgogICAgICAgIGZvciBwYXlsb2FkIGluIHBheWxvYWRzOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBpZiBub3QgaW5wdXRfZWxlbWVudC5pc19kaXNwbGF5ZWQoKToKICAgICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhmIkZpZWxkIHtpbnB1dF9uYW1lfSBpcyBub3QgZGlzcGxheWVkLiBBdHRlbXB0aW5nIHRvIHVuaGlkZSBpdC4iKQogICAgICAgICAgICAgICAgICAgIHNlbGYudW5oaWRlci51bmhpZGVfZmllbGQoaW5wdXRfZWxlbWVudCkKICAgICAgICAgICAgICAgICAgICBXZWJEcml2ZXJXYWl0KHNlbGYuZHJpdmVyLCAyMCkudW50aWwoRUMudmlzaWJpbGl0eV9vZihpbnB1dF9lbGVtZW50KSkKCiAgICAgICAgICAgICAgICBzY3JvbGxfaW50b192aWV3KHNlbGYuZHJpdmVyLCBpbnB1dF9lbGVtZW50KQogICAgICAgICAgICAgICAgeHBhdGggPSBnZXRfeHBhdGgoaW5wdXRfZWxlbWVudCkKICAgICAgICAgICAgICAgIFdlYkRyaXZlcldhaXQoc2VsZi5kcml2ZXIsIDIwKS51bnRpbChFQy5lbGVtZW50X3RvX2JlX2NsaWNrYWJsZSgoQnkuWFBBVEgsIHhwYXRoKSkpCgogICAgICAgICAgICAgICAgaW5wdXRfZWxlbWVudC5jbGVhcigpCiAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LnNlbmRfa2V5cyhwYXlsb2FkKQogICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oZiJGdXp6aW5nIEZpZWxkOiB7aW5wdXRfbmFtZX0sIFBheWxvYWQ6IHtwYXlsb2FkfSIpCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKGRlbGF5KQoKICAgICAgICAgICAgICAgICMgVHJpZ2dlciBldmVudHMKICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQuc2VuZF9rZXlzKEtleXMuVEFCKQogICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjUpCgogICAgICAgICAgICAgICAgc2VsZi5kcml2ZXIuZXhlY3V0ZV9zY3JpcHQoCiAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50c1swXS5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnaW5wdXQnLCB7IGJ1YmJsZXM6IHRydWUgfSkpOyIsCiAgICAgICAgICAgICAgICAgICAgaW5wdXRfZWxlbWVudAogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgc2VsZi5kcml2ZXIuZXhlY3V0ZV9zY3JpcHQoCiAgICAgICAgICAgICAgICAgICAgImFyZ3VtZW50c1swXS5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnY2hhbmdlJywgeyBidWJibGVzOiB0cnVlIH0pKTsiLAogICAgICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoMC41KQoKICAgICAgICAgICAgICAgICMgQW5hbHl6ZSByZXNwb25zZQogICAgICAgICAgICAgICAgc2VsZi5jbGlja19hbmFseXplci5hbmFseXplX3Jlc3BvbnNlKCkKCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIGxvZ2dlci5lcnJvcihmIkVycm9yIGZ1enppbmcgd2l0aCBwYXlsb2FkICd7cGF5bG9hZH0nOiB7ZX0iKQogICAgICAgICAgICAgICAgc2VsZi5kcml2ZXIuc2F2ZV9zY3JlZW5zaG90KGYiZXJyb3Jfe2lucHV0X25hbWV9LnBuZyIpCgogICAgZGVmIHJ1bl9mdXp6X2ZpZWxkcyhzZWxmLCBkZWxheTogaW50ID0gMSkgLT4gTm9uZToKICAgICAgICAiIiJSdW4gdGhlIGZ1enplciBmb3IgaW5wdXQgZmllbGRzLiIiIgogICAgICAgIHRyeToKICAgICAgICAgICAgaW5wdXRzID0gc2VsZi5pbnB1dF9kZXRlY3Rvci5kZXRlY3RfaW5wdXRzKHNlbGYudXJsKQogICAgICAgICAgICBpZiBpbnB1dHM6CiAgICAgICAgICAgICAgICAjIExpc3QgYXZhaWxhYmxlIGlucHV0IGZpZWxkcwogICAgICAgICAgICAgICAgc2VsZi5pbnB1dF9kZXRlY3Rvci5saXN0X2lucHV0cyhpbnB1dHMpCiAgICAgICAgICAgICAgICAjIFByb21wdCB1c2VyIHRvIHNlbGVjdCBpbnB1dAogICAgICAgICAgICAgICAgc2VsZWN0ZWRfZm9ybSwgc2VsZWN0ZWRfZmllbGQgPSBzZWxmLmlucHV0X2RldGVjdG9yLnNlbGVjdF9pbnB1dChpbnB1dHMpCiAgICAgICAgICAgICAgICBmb3JtX2luZm8gPSBpbnB1dHNbc2VsZWN0ZWRfZm9ybV0KICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQgPSBmb3JtX2luZm9bJ2lucHV0cyddW3NlbGVjdGVkX2ZpZWxkXQogICAgICAgICAgICAgICAgaW5wdXRfbmFtZSA9IGlucHV0X2VsZW1lbnQuZ2V0X2F0dHJpYnV0ZSgnaWQnKSBvciBpbnB1dF9lbGVtZW50LmdldF9hdHRyaWJ1dGUoJ25hbWUnKSBvciAnVW5uYW1lZCcKICAgICAgICAgICAgICAgIHNlbGYuZnV6el9maWVsZChpbnB1dF9lbGVtZW50LCBpbnB1dF9uYW1lLCBkZWxheSkKICAgICAgICBmaW5hbGx5OgogICAgICAgICAgICBzZWxmLmRyaXZlci5xdWl0KCkKCiAgICBkZWYgcnVuX2NsaWNrX2VsZW1lbnRzKHNlbGYsIGRlbGF5OiBpbnQgPSAxKSAtPiBOb25lOgogICAgICAgICIiIlJ1biB0aGUgZnV6emVyIHRvIGNsaWNrIHRocm91Z2ggY2xpY2thYmxlIGVsZW1lbnRzLiIiIgogICAgICAgIHRyeToKICAgICAgICAgICAgY2xpY2thYmxlX2VsZW1lbnRzID0gc2VsZi5pbnB1dF9kZXRlY3Rvci5kZXRlY3RfY2xpY2thYmxlX2VsZW1lbnRzKCkKICAgICAgICAgICAgZm9yIGVsZW1lbnQgaW4gY2xpY2thYmxlX2VsZW1lbnRzOgogICAgICAgICAgICAgICAgc2VsZi5jbGlja19hbmFseXplci5jbGlja19lbGVtZW50KGVsZW1lbnQpCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKGRlbGF5KQogICAgICAgIGZpbmFsbHk6CiAgICAgICAgICAgIHNlbGYuZHJpdmVyLnF1aXQoKQoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKGRlc2NyaXB0aW9uPSJTZWxlbml1bSBGdXp6ZXIgU2NyaXB0IikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoInVybCIsIGhlbHA9IlVSTCB0byBmdXp6IikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoIi0tZnV6ei1maWVsZHMiLCBhY3Rpb249InN0b3JlX3RydWUiLCBoZWxwPSJGdXp6IGlucHV0IGZpZWxkcyIpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCItLWNsaWNrLWVsZW1lbnRzIiwgYWN0aW9uPSJzdG9yZV90cnVlIiwgaGVscD0iQ2xpY2sgdGhyb3VnaCBjbGlja2FibGUgZWxlbWVudHMiKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgiLS1kZWxheSIsIHR5cGU9aW50LCBkZWZhdWx0PTEsIGhlbHA9IkRlbGF5IGJldHdlZW4gYWN0aW9ucyBpbiBzZWNvbmRzIikKCiAgICBhcmdzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKICAgIGZ1enplciA9IEZ1enplcihhcmdzLnVybCwgaGVhZGxlc3M9Q29uZmlnLlNFTEVOSVVNX0hFQURMRVNTKQoKICAgIGlmIGFyZ3MuZnV6el9maWVsZHM6CiAgICAgICAgZnV6emVyLnJ1bl9mdXp6X2ZpZWxkcyhkZWxheT1hcmdzLmRlbGF5KQoKICAgIGlmIGFyZ3MuY2xpY2tfZWxlbWVudHM6CiAgICAgICAgZnV6emVyLnJ1bl9jbGlja19lbGVtZW50cyhkZWxheT1hcmdzLmRlbGF5KQo",
					"EgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAdhMAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAUAsAAAAAAAAAAAAA",
					"EgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"",
					null,
					"AgAAAAAAAAAAAAAAJQwAAAAAAAAAAAAAJQwAAAAAAAAlDAAAAAAAAFALAABpbXBvcnQgbG9nZ2luZwpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5yZW1vdGUud2ViZWxlbWVudCBpbXBvcnQgV2ViRWxlbWVudApmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24uYnkgaW1wb3J0IEJ5CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQudWkgaW1wb3J0IFdlYkRyaXZlcldhaXQKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuc3VwcG9ydCBpbXBvcnQgZXhwZWN0ZWRfY29uZGl0aW9ucyBhcyBFQwpmcm9tIHNlbGVuaXVtLmNvbW1vbi5leGNlcHRpb25zIGltcG9ydCBOb1N1Y2hFbGVtZW50RXhjZXB0aW9uLCBTdGFsZUVsZW1lbnRSZWZlcmVuY2VFeGNlcHRpb24sIFRpbWVvdXRFeGNlcHRpb24KaW1wb3J0IHRpbWUKZnJvbSBzZWxlbml1bV9mdXp6ZXIudXRpbHMgaW1wb3J0IGdlbmVyYXRlX3NhZmVfcGF5bG9hZHMsIHJldHJ5X29uX3N0YWxlX2VsZW1lbnQsIHNjcm9sbF9pbnRvX3ZpZXcKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QKCmxvZ2dlciA9IGxvZ2dpbmcuZ2V0TG9nZ2VyKF9fbmFtZV9fKQoKY2xhc3MgRnV6emVyOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGRyaXZlcik6CiAgICAgICAgc2VsZi5kcml2ZXIgPSBkcml2ZXIKCiAgICBkZWYgZGV0ZWN0X2lucHV0cyhzZWxmKSAtPiBMaXN0W1dlYkVsZW1lbnRdOgogICAgICAgICIiIkRldGVjdCBhbGwgcG90ZW50aWFsIGlucHV0IGZpZWxkcyBhbmQgYnV0dG9ucyBvbiB0aGUgcGFnZS4iIiIKICAgICAgICBpbnB1dF9maWVsZHMgPSBbXQogICAgICAgIHRyeToKICAgICAgICAgICAgIyBEZXRlY3QgPGlucHV0PiBlbGVtZW50cwogICAgICAgICAgICBpbnB1dF9lbGVtZW50cyA9IHNlbGYuZHJpdmVyLmZpbmRfZWxlbWVudHMoQnkuVEFHX05BTUUsICJpbnB1dCIpCiAgICAgICAgICAgIHRleHRhcmVhX2VsZW1lbnRzID0gc2VsZi5kcml2ZXIuZmluZF9lbGVtZW50cyhCeS5UQUdfTkFNRSwgInRleHRhcmVhIikKICAgICAgICAgICAgYnV0dG9uX2VsZW1lbnRzID0gc2VsZi5kcml2ZXIuZmluZF9lbGVtZW50cyhCeS5UQUdfTkFNRSwgImJ1dHRvbiIpCgogICAgICAgICAgICBpbnB1dF9maWVsZHMuZXh0ZW5kKGlucHV0X2VsZW1lbnRzKQogICAgICAgICAgICBpbnB1dF9maWVsZHMuZXh0ZW5kKHRleHRhcmVhX2VsZW1lbnRzKQogICAgICAgICAgICBpbnB1dF9maWVsZHMuZXh0ZW5kKGJ1dHRvbl9lbGVtZW50cykKCiAgICAgICAgICAgIGxvZ2dlci5pbmZvKGYiRm91bmQge2xlbihpbnB1dF9maWVsZHMpfSBpbnB1dCBmaWVsZHMsIHRleHRhcmVhcywgYW5kIGJ1dHRvbnMuIikKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIGxvZ2dlci5lcnJvcihmIkVycm9yIGRldGVjdGluZyBpbnB1dCBlbGVtZW50czoge2V9IikKICAgICAgICByZXR1cm4gaW5wdXRfZmllbGRzCgogICAgQHJldHJ5X29uX3N0YWxlX2VsZW1lbnQKICAgIGRlZiBpbnRlcmFjdF93aXRoX2VsZW1lbnQoc2VsZiwgZWxlbWVudDogV2ViRWxlbWVudCwgcGF5bG9hZDogc3RyKSAtPiBOb25lOgogICAgICAgICIiIkludGVyYWN0IHdpdGggYSBnaXZlbiBlbGVtZW50IGJ5IHNlbmRpbmcgYSBwYXlsb2FkLiIiIgogICAgICAgIHRyeToKICAgICAgICAgICAgc2Nyb2xsX2ludG9fdmlldyhzZWxmLmRyaXZlciwgZWxlbWVudCkKICAgICAgICAgICAgaWYgZWxlbWVudC50YWdfbmFtZSBpbiBbImlucHV0IiwgInRleHRhcmVhIl06CiAgICAgICAgICAgICAgICBlbGVtZW50LmNsZWFyKCkKICAgICAgICAgICAgICAgIGVsZW1lbnQuc2VuZF9rZXlzKHBheWxvYWQpCiAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbyhmIlN1Y2Nlc3NmdWxseSBpbnRlcmFjdGVkIHdpdGggaW5wdXQvdGV4dGFyZWEgdXNpbmcgcGF5bG9hZDoge3BheWxvYWR9IikKICAgICAgICAgICAgZWxpZiBlbGVtZW50LnRhZ19uYW1lID09ICJidXR0b24iOgogICAgICAgICAgICAgICAgZWxlbWVudC5jbGljaygpCiAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbygiU3VjY2Vzc2Z1bGx5IGNsaWNrZWQgYnV0dG9uLiIpCiAgICAgICAgZXhjZXB0IFN0YWxlRWxlbWVudFJlZmVyZW5jZUV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBsb2dnZXIuZXJyb3IoZiJFcnJvciBpbnRlcmFjdGluZyB3aXRoIGVsZW1lbnQ6IHtlfSIpCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBsb2dnZXIuZXJyb3IoZiJVbmV4cGVjdGVkIGVycm9yIGludGVyYWN0aW5nIHdpdGggZWxlbWVudDoge2V9IikKCiAgICBkZWYgcnVuX2Z1enpfZmllbGRzKHNlbGYsIHBheWxvYWRzOiBMaXN0W3N0cl0sIGRlbGF5OiBpbnQgPSAxKSAtPiBOb25lOgogICAgICAgICIiIlJ1biBmdXp6aW5nIG9uIGRldGVjdGVkIGlucHV0IGZpZWxkcyB3aXRoIHByb3ZpZGVkIHBheWxvYWRzLiIiIgogICAgICAgIGlucHV0X2ZpZWxkcyA9IHNlbGYuZGV0ZWN0X2lucHV0cygpCiAgICAgICAgaWYgbm90IGlucHV0X2ZpZWxkczoKICAgICAgICAgICAgbG9nZ2VyLndhcm5pbmcoIk5vIGlucHV0IGZpZWxkcyBkZXRlY3RlZCBvbiB0aGUgcGFnZS4iKQogICAgICAgICAgICByZXR1cm4KCiAgICAgICAgZm9yIGVsZW1lbnQgaW4gaW5wdXRfZmllbGRzOgogICAgICAgICAgICBmb3IgcGF5bG9hZCBpbiBwYXlsb2FkczoKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBzZWxmLmludGVyYWN0X3dpdGhfZWxlbWVudChlbGVtZW50LCBwYXlsb2FkKQogICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoZGVsYXkpCiAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGYiRXJyb3IgZHVyaW5nIGZ1enppbmcgaW50ZXJhY3Rpb246IHtlfSIpCiAgICAgICAgICAgICAgICAgICAgY29udGludWUK",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAFALAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAlDAAAaW1wb3J0IGxvZ2dpbmcKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5zdXBwb3J0LnVpIGltcG9ydCBXZWJEcml2ZXJXYWl0CmZyb20gc2VsZW5pdW0ud2ViZHJpdmVyLnN1cHBvcnQgaW1wb3J0IGV4cGVjdGVkX2NvbmRpdGlvbnMgYXMgRUMKZnJvbSBzZWxlbml1bV9mdXp6ZXIuanNfY2hhbmdlX2RldGVjdG9yIGltcG9ydCBKYXZhU2NyaXB0Q2hhbmdlRGV0ZWN0b3IKCmNsYXNzIEZ1enplcjoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBkcml2ZXIpOgogICAgICAgIHNlbGYuZHJpdmVyID0gZHJpdmVyCiAgICAgICAgc2VsZi5sb2dnZXIgPSBsb2dnaW5nLmdldExvZ2dlcihfX25hbWVfXykKICAgICAgICBzZWxmLmpzX2NoYW5nZV9kZXRlY3RvciA9IEphdmFTY3JpcHRDaGFuZ2VEZXRlY3Rvcihkcml2ZXIpCgogICAgZGVmIGRldGVjdF9pbnB1dHMoc2VsZik6CiAgICAgICAgIiIiRGV0ZWN0IGFsbCBpbnB1dCBmaWVsZHMgb24gdGhlIHBhZ2UuIiIiCiAgICAgICAgdHJ5OgogICAgICAgICAgICBpbnB1dF9maWVsZHMgPSBzZWxmLmRyaXZlci5maW5kX2VsZW1lbnRzKEJ5LlRBR19OQU1FLCAiaW5wdXQiKQogICAgICAgICAgICBzZWxmLmxvZ2dlci5pbmZvKGYiRm91bmQge2xlbihpbnB1dF9maWVsZHMpfSBpbnB1dCBlbGVtZW50cy4iKQogICAgICAgICAgICByZXR1cm4gaW5wdXRfZmllbGRzCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICBzZWxmLmxvZ2dlci5lcnJvcihmIkVycm9yIGRldGVjdGluZyBpbnB1dCBmaWVsZHM6IHtlfSIpCiAgICAgICAgICAgIHJldHVybiBbXQoKICAgIGRlZiBmdXp6X2ZpZWxkKHNlbGYsIGlucHV0X2VsZW1lbnQsIHBheWxvYWRzLCBkZWxheT0xKToKICAgICAgICAiIiJGdXp6IGEgZ2l2ZW4gaW5wdXQgZmllbGQgd2l0aCBhIGxpc3Qgb2YgcGF5bG9hZHMuCiAgICAgICAgCiAgICAgICAgQXJnczoKICAgICAgICAgICAgaW5wdXRfZWxlbWVudCAoV2ViRWxlbWVudCk6IFRoZSBpbnB1dCBmaWVsZCB0byBmdXp6LgogICAgICAgICAgICBwYXlsb2FkcyAobGlzdCk6IFRoZSBwYXlsb2FkcyB0byBpbnB1dCBpbnRvIHRoZSBmaWVsZC4KICAgICAgICAgICAgZGVsYXkgKGludCk6IFRpbWUgaW4gc2Vjb25kcyB0byB3YWl0IGJldHdlZW4gZnV6emluZyBhdHRlbXB0cy4KICAgICAgICAiIiIKICAgICAgICBmb3IgcGF5bG9hZCBpbiBwYXlsb2FkczoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgaW5wdXRfZWxlbWVudC5jbGVhcigpCiAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LnNlbmRfa2V5cyhwYXlsb2FkKQogICAgICAgICAgICAgICAgaW5wdXRfZWxlbWVudC5zZW5kX2tleXMoS2V5cy5UQUIpICAjIFRyaWdnZXIgcG90ZW50aWFsIEphdmFTY3JpcHQgZXZlbnRzIGFmdGVyIGlucHV0CiAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LnNlbmRfa2V5cyhLZXlzLkVOVEVSKSAgIyBFeHBsaWNpdGx5IGhpdCBlbnRlciBhZnRlciB0YWJiaW5nCiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5pbmZvKGYiSW5zZXJ0ZWQgcGF5bG9hZCAne3BheWxvYWR9JyBpbnRvIGZpZWxkIHtpbnB1dF9lbGVtZW50LmdldF9hdHRyaWJ1dGUoJ25hbWUnKSBvciAnVW5uYW1lZCd9LiIpCiAgICAgICAgICAgICAgICBzZWxmLmpzX2NoYW5nZV9kZXRlY3Rvci5jaGVja19mb3JfanNfY2hhbmdlcyhkZWxheT1kZWxheSkKICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgc2VsZi5sb2dnZXIuZXJyb3IoZiJFcnJvciBmdXp6aW5nIHdpdGggcGF5bG9hZCAne3BheWxvYWR9Jzoge2V9IikKCiAgICBkZWYgcnVuX2Z1enpfZmllbGRzKHNlbGYsIGRlbGF5PTEpOgogICAgICAgICIiIkRldGVjdCBhbmQgZnV6eiBhbGwgaW5wdXQgZmllbGRzIG9uIHRoZSBwYWdlLiIiIgogICAgICAgIGlucHV0X2ZpZWxkcyA9IHNlbGYuZGV0ZWN0X2lucHV0cygpCiAgICAgICAgaWYgbm90IGlucHV0X2ZpZWxkczoKICAgICAgICAgICAgc2VsZi5sb2dnZXIud2FybmluZygiTm8gaW5wdXQgZmllbGRzIGRldGVjdGVkIG9uIHRoZSBwYWdlLiIpCiAgICAgICAgICAgIHJldHVybgoKICAgICAgICBwYXlsb2FkcyA9IFsidGVzdEBleGFtcGxlLmNvbSIsICIxMjM0NTY3ODkwIiwgIjxzY3JpcHQ+YWxlcnQoJ1hTUycpPC9zY3JpcHQ+IiwgIlwnIE9SIDE9MSAtLSJdCiAgICAgICAgZm9yIGlucHV0X2VsZW1lbnQgaW4gaW5wdXRfZmllbGRzOgogICAgICAgICAgICBzZWxmLmZ1enpfZmllbGQoaW5wdXRfZWxlbWVudCwgcGF5bG9hZHMsIGRlbGF5KQoKICAgIGRlZiBydW5fY2xpY2tfZWxlbWVudHMoc2VsZiwgZGVsYXk9MSk6CiAgICAgICAgIiIiRGV0ZWN0IGFuZCBjbGljayBhbGwgY2xpY2thYmxlIGVsZW1lbnRzIG9uIHRoZSBwYWdlLiIiIgogICAgICAgIGNsaWNrYWJsZV9lbGVtZW50cyA9IHNlbGYuZHJpdmVyLmZpbmRfZWxlbWVudHMoQnkuWFBBVEgsICIvL2J1dHRvbiB8IC8vYSB8IC8vaW5wdXRbQHR5cGU9J2J1dHRvbiddIHwgLy9pbnB1dFtAdHlwZT0nc3VibWl0J10iKQogICAgICAgIHNlbGYubG9nZ2VyLmluZm8oZiJGb3VuZCB7bGVuKGNsaWNrYWJsZV9lbGVtZW50cyl9IGNsaWNrYWJsZSBlbGVtZW50cy4iKQoKICAgICAgICBmb3IgZWxlbWVudCBpbiBjbGlja2FibGVfZWxlbWVudHM6CiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oZiJDbGlja2luZyBvbiBlbGVtZW50OiB7ZWxlbWVudC50ZXh0IG9yIGVsZW1lbnQuZ2V0X2F0dHJpYnV0ZSgnbmFtZScpIG9yIGVsZW1lbnQuZ2V0X2F0dHJpYnV0ZSgndHlwZScpfSIpCiAgICAgICAgICAgICAgICBlbGVtZW50LmNsaWNrKCkKICAgICAgICAgICAgICAgIHNlbGYuanNfY2hhbmdlX2RldGVjdG9yLmNoZWNrX2Zvcl9qc19jaGFuZ2VzKGRlbGF5PWRlbGF5KQogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5lcnJvcihmIkVycm9yIGNsaWNraW5nIGVsZW1lbnQ6IHtlfSIpCg",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAACUMAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAsgsAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAACyCwAAaW1wb3J0IGxvZ2dpbmcKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwpmcm9tIHNlbGVuaXVtX2Z1enplci5qc19jaGFuZ2VfZGV0ZWN0b3IgaW1wb3J0IEphdmFTY3JpcHRDaGFuZ2VEZXRlY3RvcgoKY2xhc3MgRnV6emVyOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGRyaXZlciwganNfY2hhbmdlX2RldGVjdG9yKToKICAgICAgICBzZWxmLmRyaXZlciA9IGRyaXZlcgogICAgICAgIHNlbGYubG9nZ2VyID0gbG9nZ2luZy5nZXRMb2dnZXIoX19uYW1lX18pCiAgICAgICAgc2VsZi5qc19jaGFuZ2VfZGV0ZWN0b3IgPSBqc19jaGFuZ2VfZGV0ZWN0b3IKCiAgICBkZWYgZGV0ZWN0X2lucHV0cyhzZWxmKToKICAgICAgICAiIiJEZXRlY3QgYWxsIGlucHV0IGZpZWxkcyBvbiB0aGUgcGFnZS4iIiIKICAgICAgICB0cnk6CiAgICAgICAgICAgIGlucHV0X2ZpZWxkcyA9IHNlbGYuZHJpdmVyLmZpbmRfZWxlbWVudHMoQnkuVEFHX05BTUUsICJpbnB1dCIpCiAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oZiJGb3VuZCB7bGVuKGlucHV0X2ZpZWxkcyl9IGlucHV0IGVsZW1lbnRzLiIpCiAgICAgICAgICAgIHJldHVybiBpbnB1dF9maWVsZHMKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIHNlbGYubG9nZ2VyLmVycm9yKGYiRXJyb3IgZGV0ZWN0aW5nIGlucHV0IGZpZWxkczoge2V9IikKICAgICAgICAgICAgcmV0dXJuIFtdCgogICAgZGVmIGZ1enpfZmllbGQoc2VsZiwgaW5wdXRfZWxlbWVudCwgcGF5bG9hZHMsIGRlbGF5PTEpOgogICAgICAgICIiIkZ1enogYSBnaXZlbiBpbnB1dCBmaWVsZCB3aXRoIGEgbGlzdCBvZiBwYXlsb2Fkcy4KICAgICAgICAKICAgICAgICBBcmdzOgogICAgICAgICAgICBpbnB1dF9lbGVtZW50IChXZWJFbGVtZW50KTogVGhlIGlucHV0IGZpZWxkIHRvIGZ1enouCiAgICAgICAgICAgIHBheWxvYWRzIChsaXN0KTogVGhlIHBheWxvYWRzIHRvIGlucHV0IGludG8gdGhlIGZpZWxkLgogICAgICAgICAgICBkZWxheSAoaW50KTogVGltZSBpbiBzZWNvbmRzIHRvIHdhaXQgYmV0d2VlbiBmdXp6aW5nIGF0dGVtcHRzLgogICAgICAgICIiIgogICAgICAgIGZvciBwYXlsb2FkIGluIHBheWxvYWRzOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LmNsZWFyKCkKICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQuc2VuZF9rZXlzKHBheWxvYWQpCiAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LnNlbmRfa2V5cyhLZXlzLlRBQikgICMgVHJpZ2dlciBwb3RlbnRpYWwgSmF2YVNjcmlwdCBldmVudHMgYWZ0ZXIgaW5wdXQKICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQuc2VuZF9rZXlzKEtleXMuRU5URVIpICAjIEV4cGxpY2l0bHkgaGl0IGVudGVyIGFmdGVyIHRhYmJpbmcKICAgICAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oZiJJbnNlcnRlZCBwYXlsb2FkICd7cGF5bG9hZH0nIGludG8gZmllbGQge2lucHV0X2VsZW1lbnQuZ2V0X2F0dHJpYnV0ZSgnbmFtZScpIG9yICdVbm5hbWVkJ30uIikKICAgICAgICAgICAgICAgIHNlbGYuanNfY2hhbmdlX2RldGVjdG9yLmNoZWNrX2Zvcl9qc19jaGFuZ2VzKGRlbGF5PWRlbGF5KQogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5lcnJvcihmIkVycm9yIGZ1enppbmcgd2l0aCBwYXlsb2FkICd7cGF5bG9hZH0nOiB7ZX0iKQoKICAgIGRlZiBydW5fZnV6el9maWVsZHMoc2VsZiwgZGVsYXk9MSk6CiAgICAgICAgIiIiRGV0ZWN0IGFuZCBmdXp6IGFsbCBpbnB1dCBmaWVsZHMgb24gdGhlIHBhZ2UuIiIiCiAgICAgICAgaW5wdXRfZmllbGRzID0gc2VsZi5kZXRlY3RfaW5wdXRzKCkKICAgICAgICBpZiBub3QgaW5wdXRfZmllbGRzOgogICAgICAgICAgICBzZWxmLmxvZ2dlci53YXJuaW5nKCJObyBpbnB1dCBmaWVsZHMgZGV0ZWN0ZWQgb24gdGhlIHBhZ2UuIikKICAgICAgICAgICAgcmV0dXJuCgogICAgICAgIHBheWxvYWRzID0gWyJ0ZXN0QGV4YW1wbGUuY29tIiwgIjEyMzQ1Njc4OTAiLCAiPHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4iLCAiXCcgT1IgMT0xIC0tIl0KICAgICAgICBmb3IgaW5wdXRfZWxlbWVudCBpbiBpbnB1dF9maWVsZHM6CiAgICAgICAgICAgIHNlbGYuZnV6el9maWVsZChpbnB1dF9lbGVtZW50LCBwYXlsb2FkcywgZGVsYXkpCgogICAgZGVmIHJ1bl9jbGlja19lbGVtZW50cyhzZWxmLCBkZWxheT0xKToKICAgICAgICAiIiJEZXRlY3QgYW5kIGNsaWNrIGFsbCBjbGlja2FibGUgZWxlbWVudHMgb24gdGhlIHBhZ2UuIiIiCiAgICAgICAgY2xpY2thYmxlX2VsZW1lbnRzID0gc2VsZi5kcml2ZXIuZmluZF9lbGVtZW50cyhCeS5YUEFUSCwgIi8vYnV0dG9uIHwgLy9hIHwgLy9pbnB1dFtAdHlwZT0nYnV0dG9uJ10gfCAvL2lucHV0W0B0eXBlPSdzdWJtaXQnXSIpCiAgICAgICAgc2VsZi5sb2dnZXIuaW5mbyhmIkZvdW5kIHtsZW4oY2xpY2thYmxlX2VsZW1lbnRzKX0gY2xpY2thYmxlIGVsZW1lbnRzLiIpCgogICAgICAgIGZvciBlbGVtZW50IGluIGNsaWNrYWJsZV9lbGVtZW50czoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgc2VsZi5sb2dnZXIuaW5mbyhmIkNsaWNraW5nIG9uIGVsZW1lbnQ6IHtlbGVtZW50LnRleHQgb3IgZWxlbWVudC5nZXRfYXR0cmlidXRlKCduYW1lJykgb3IgZWxlbWVudC5nZXRfYXR0cmlidXRlKCd0eXBlJyl9IikKICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xpY2soKQogICAgICAgICAgICAgICAgc2VsZi5qc19jaGFuZ2VfZGV0ZWN0b3IuY2hlY2tfZm9yX2pzX2NoYW5nZXMoZGVsYXk9ZGVsYXkpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIHNlbGYubG9nZ2VyLmVycm9yKGYiRXJyb3IgY2xpY2tpbmcgZWxlbWVudDoge2V9IikK",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAsgsAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAACyCwAAaW1wb3J0IGxvZ2dpbmcKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwpmcm9tIHNlbGVuaXVtX2Z1enplci5qc19jaGFuZ2VfZGV0ZWN0b3IgaW1wb3J0IEphdmFTY3JpcHRDaGFuZ2VEZXRlY3RvcgoKY2xhc3MgRnV6emVyOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGRyaXZlciwganNfY2hhbmdlX2RldGVjdG9yKToKICAgICAgICBzZWxmLmRyaXZlciA9IGRyaXZlcgogICAgICAgIHNlbGYubG9nZ2VyID0gbG9nZ2luZy5nZXRMb2dnZXIoX19uYW1lX18pCiAgICAgICAgc2VsZi5qc19jaGFuZ2VfZGV0ZWN0b3IgPSBqc19jaGFuZ2VfZGV0ZWN0b3IKCiAgICBkZWYgZGV0ZWN0X2lucHV0cyhzZWxmKToKICAgICAgICAiIiJEZXRlY3QgYWxsIGlucHV0IGZpZWxkcyBvbiB0aGUgcGFnZS4iIiIKICAgICAgICB0cnk6CiAgICAgICAgICAgIGlucHV0X2ZpZWxkcyA9IHNlbGYuZHJpdmVyLmZpbmRfZWxlbWVudHMoQnkuVEFHX05BTUUsICJpbnB1dCIpCiAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oZiJGb3VuZCB7bGVuKGlucHV0X2ZpZWxkcyl9IGlucHV0IGVsZW1lbnRzLiIpCiAgICAgICAgICAgIHJldHVybiBpbnB1dF9maWVsZHMKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIHNlbGYubG9nZ2VyLmVycm9yKGYiRXJyb3IgZGV0ZWN0aW5nIGlucHV0IGZpZWxkczoge2V9IikKICAgICAgICAgICAgcmV0dXJuIFtdCgogICAgZGVmIGZ1enpfZmllbGQoc2VsZiwgaW5wdXRfZWxlbWVudCwgcGF5bG9hZHMsIGRlbGF5PTEpOgogICAgICAgICIiIkZ1enogYSBnaXZlbiBpbnB1dCBmaWVsZCB3aXRoIGEgbGlzdCBvZiBwYXlsb2Fkcy4KICAgICAgICAKICAgICAgICBBcmdzOgogICAgICAgICAgICBpbnB1dF9lbGVtZW50IChXZWJFbGVtZW50KTogVGhlIGlucHV0IGZpZWxkIHRvIGZ1enouCiAgICAgICAgICAgIHBheWxvYWRzIChsaXN0KTogVGhlIHBheWxvYWRzIHRvIGlucHV0IGludG8gdGhlIGZpZWxkLgogICAgICAgICAgICBkZWxheSAoaW50KTogVGltZSBpbiBzZWNvbmRzIHRvIHdhaXQgYmV0d2VlbiBmdXp6aW5nIGF0dGVtcHRzLgogICAgICAgICIiIgogICAgICAgIGZvciBwYXlsb2FkIGluIHBheWxvYWRzOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LmNsZWFyKCkKICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQuc2VuZF9rZXlzKHBheWxvYWQpCiAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LnNlbmRfa2V5cyhLZXlzLlRBQikgICMgVHJpZ2dlciBwb3RlbnRpYWwgSmF2YVNjcmlwdCBldmVudHMgYWZ0ZXIgaW5wdXQKICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQuc2VuZF9rZXlzKEtleXMuRU5URVIpICAjIEV4cGxpY2l0bHkgaGl0IGVudGVyIGFmdGVyIHRhYmJpbmcKICAgICAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oZiJJbnNlcnRlZCBwYXlsb2FkICd7cGF5bG9hZH0nIGludG8gZmllbGQge2lucHV0X2VsZW1lbnQuZ2V0X2F0dHJpYnV0ZSgnbmFtZScpIG9yICdVbm5hbWVkJ30uIikKICAgICAgICAgICAgICAgIHNlbGYuanNfY2hhbmdlX2RldGVjdG9yLmNoZWNrX2Zvcl9qc19jaGFuZ2VzKGRlbGF5PWRlbGF5KQogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5lcnJvcihmIkVycm9yIGZ1enppbmcgd2l0aCBwYXlsb2FkICd7cGF5bG9hZH0nOiB7ZX0iKQoKICAgIGRlZiBydW5fZnV6el9maWVsZHMoc2VsZiwgZGVsYXk9MSk6CiAgICAgICAgIiIiRGV0ZWN0IGFuZCBmdXp6IGFsbCBpbnB1dCBmaWVsZHMgb24gdGhlIHBhZ2UuIiIiCiAgICAgICAgaW5wdXRfZmllbGRzID0gc2VsZi5kZXRlY3RfaW5wdXRzKCkKICAgICAgICBpZiBub3QgaW5wdXRfZmllbGRzOgogICAgICAgICAgICBzZWxmLmxvZ2dlci53YXJuaW5nKCJObyBpbnB1dCBmaWVsZHMgZGV0ZWN0ZWQgb24gdGhlIHBhZ2UuIikKICAgICAgICAgICAgcmV0dXJuCgogICAgICAgIHBheWxvYWRzID0gWyJ0ZXN0QGV4YW1wbGUuY29tIiwgIjEyMzQ1Njc4OTAiLCAiPHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4iLCAiXCcgT1IgMT0xIC0tIl0KICAgICAgICBmb3IgaW5wdXRfZWxlbWVudCBpbiBpbnB1dF9maWVsZHM6CiAgICAgICAgICAgIHNlbGYuZnV6el9maWVsZChpbnB1dF9lbGVtZW50LCBwYXlsb2FkcywgZGVsYXkpCgogICAgZGVmIHJ1bl9jbGlja19lbGVtZW50cyhzZWxmLCBkZWxheT0xKToKICAgICAgICAiIiJEZXRlY3QgYW5kIGNsaWNrIGFsbCBjbGlja2FibGUgZWxlbWVudHMgb24gdGhlIHBhZ2UuIiIiCiAgICAgICAgY2xpY2thYmxlX2VsZW1lbnRzID0gc2VsZi5kcml2ZXIuZmluZF9lbGVtZW50cyhCeS5YUEFUSCwgIi8vYnV0dG9uIHwgLy9hIHwgLy9pbnB1dFtAdHlwZT0nYnV0dG9uJ10gfCAvL2lucHV0W0B0eXBlPSdzdWJtaXQnXSIpCiAgICAgICAgc2VsZi5sb2dnZXIuaW5mbyhmIkZvdW5kIHtsZW4oY2xpY2thYmxlX2VsZW1lbnRzKX0gY2xpY2thYmxlIGVsZW1lbnRzLiIpCgogICAgICAgIGZvciBlbGVtZW50IGluIGNsaWNrYWJsZV9lbGVtZW50czoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgc2VsZi5sb2dnZXIuaW5mbyhmIkNsaWNraW5nIG9uIGVsZW1lbnQ6IHtlbGVtZW50LnRleHQgb3IgZWxlbWVudC5nZXRfYXR0cmlidXRlKCduYW1lJykgb3IgZWxlbWVudC5nZXRfYXR0cmlidXRlKCd0eXBlJyl9IikKICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xpY2soKQogICAgICAgICAgICAgICAgc2VsZi5qc19jaGFuZ2VfZGV0ZWN0b3IuY2hlY2tfZm9yX2pzX2NoYW5nZXMoZGVsYXk9ZGVsYXkpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIHNlbGYubG9nZ2VyLmVycm9yKGYiRXJyb3IgY2xpY2tpbmcgZWxlbWVudDoge2V9IikK",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAALILAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAagsAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAABqCwAAaW1wb3J0IGxvZ2dpbmcKZnJvbSBzZWxlbml1bS53ZWJkcml2ZXIuY29tbW9uLmJ5IGltcG9ydCBCeQpmcm9tIHNlbGVuaXVtLndlYmRyaXZlci5jb21tb24ua2V5cyBpbXBvcnQgS2V5cwoKY2xhc3MgRnV6emVyOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIGRyaXZlciwganNfY2hhbmdlX2RldGVjdG9yKToKICAgICAgICBzZWxmLmRyaXZlciA9IGRyaXZlcgogICAgICAgIHNlbGYubG9nZ2VyID0gbG9nZ2luZy5nZXRMb2dnZXIoX19uYW1lX18pCiAgICAgICAgc2VsZi5qc19jaGFuZ2VfZGV0ZWN0b3IgPSBqc19jaGFuZ2VfZGV0ZWN0b3IKCiAgICBkZWYgZGV0ZWN0X2lucHV0cyhzZWxmKToKICAgICAgICAiIiJEZXRlY3QgYWxsIGlucHV0IGZpZWxkcyBvbiB0aGUgcGFnZS4iIiIKICAgICAgICB0cnk6CiAgICAgICAgICAgIGlucHV0X2ZpZWxkcyA9IHNlbGYuZHJpdmVyLmZpbmRfZWxlbWVudHMoQnkuVEFHX05BTUUsICJpbnB1dCIpCiAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oZiJGb3VuZCB7bGVuKGlucHV0X2ZpZWxkcyl9IGlucHV0IGVsZW1lbnRzLiIpCiAgICAgICAgICAgIHJldHVybiBpbnB1dF9maWVsZHMKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIHNlbGYubG9nZ2VyLmVycm9yKGYiRXJyb3IgZGV0ZWN0aW5nIGlucHV0IGZpZWxkczoge2V9IikKICAgICAgICAgICAgcmV0dXJuIFtdCgogICAgZGVmIGZ1enpfZmllbGQoc2VsZiwgaW5wdXRfZWxlbWVudCwgcGF5bG9hZHMsIGRlbGF5PTEpOgogICAgICAgICIiIkZ1enogYSBnaXZlbiBpbnB1dCBmaWVsZCB3aXRoIGEgbGlzdCBvZiBwYXlsb2Fkcy4KICAgICAgICAKICAgICAgICBBcmdzOgogICAgICAgICAgICBpbnB1dF9lbGVtZW50IChXZWJFbGVtZW50KTogVGhlIGlucHV0IGZpZWxkIHRvIGZ1enouCiAgICAgICAgICAgIHBheWxvYWRzIChsaXN0KTogVGhlIHBheWxvYWRzIHRvIGlucHV0IGludG8gdGhlIGZpZWxkLgogICAgICAgICAgICBkZWxheSAoaW50KTogVGltZSBpbiBzZWNvbmRzIHRvIHdhaXQgYmV0d2VlbiBmdXp6aW5nIGF0dGVtcHRzLgogICAgICAgICIiIgogICAgICAgIGZvciBwYXlsb2FkIGluIHBheWxvYWRzOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LmNsZWFyKCkKICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQuc2VuZF9rZXlzKHBheWxvYWQpCiAgICAgICAgICAgICAgICBpbnB1dF9lbGVtZW50LnNlbmRfa2V5cyhLZXlzLlRBQikgICMgVHJpZ2dlciBwb3RlbnRpYWwgSmF2YVNjcmlwdCBldmVudHMgYWZ0ZXIgaW5wdXQKICAgICAgICAgICAgICAgIGlucHV0X2VsZW1lbnQuc2VuZF9rZXlzKEtleXMuRU5URVIpICAjIEV4cGxpY2l0bHkgaGl0IGVudGVyIGFmdGVyIHRhYmJpbmcKICAgICAgICAgICAgICAgIHNlbGYubG9nZ2VyLmluZm8oZiJJbnNlcnRlZCBwYXlsb2FkICd7cGF5bG9hZH0nIGludG8gZmllbGQge2lucHV0X2VsZW1lbnQuZ2V0X2F0dHJpYnV0ZSgnbmFtZScpIG9yICdVbm5hbWVkJ30uIikKICAgICAgICAgICAgICAgIHNlbGYuanNfY2hhbmdlX2RldGVjdG9yLmNoZWNrX2Zvcl9qc19jaGFuZ2VzKGRlbGF5PWRlbGF5KQogICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgICAgICBzZWxmLmxvZ2dlci5lcnJvcihmIkVycm9yIGZ1enppbmcgd2l0aCBwYXlsb2FkICd7cGF5bG9hZH0nOiB7ZX0iKQoKICAgIGRlZiBydW5fZnV6el9maWVsZHMoc2VsZiwgZGVsYXk9MSk6CiAgICAgICAgIiIiRGV0ZWN0IGFuZCBmdXp6IGFsbCBpbnB1dCBmaWVsZHMgb24gdGhlIHBhZ2UuIiIiCiAgICAgICAgaW5wdXRfZmllbGRzID0gc2VsZi5kZXRlY3RfaW5wdXRzKCkKICAgICAgICBpZiBub3QgaW5wdXRfZmllbGRzOgogICAgICAgICAgICBzZWxmLmxvZ2dlci53YXJuaW5nKCJObyBpbnB1dCBmaWVsZHMgZGV0ZWN0ZWQgb24gdGhlIHBhZ2UuIikKICAgICAgICAgICAgcmV0dXJuCgogICAgICAgIHBheWxvYWRzID0gWyJ0ZXN0QGV4YW1wbGUuY29tIiwgIjEyMzQ1Njc4OTAiLCAiPHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4iLCAiXCcgT1IgMT0xIC0tIl0KICAgICAgICBmb3IgaW5wdXRfZWxlbWVudCBpbiBpbnB1dF9maWVsZHM6CiAgICAgICAgICAgIHNlbGYuZnV6el9maWVsZChpbnB1dF9lbGVtZW50LCBwYXlsb2FkcywgZGVsYXkpCgogICAgZGVmIHJ1bl9jbGlja19lbGVtZW50cyhzZWxmLCBkZWxheT0xKToKICAgICAgICAiIiJEZXRlY3QgYW5kIGNsaWNrIGFsbCBjbGlja2FibGUgZWxlbWVudHMgb24gdGhlIHBhZ2UuIiIiCiAgICAgICAgY2xpY2thYmxlX2VsZW1lbnRzID0gc2VsZi5kcml2ZXIuZmluZF9lbGVtZW50cyhCeS5YUEFUSCwgIi8vYnV0dG9uIHwgLy9hIHwgLy9pbnB1dFtAdHlwZT0nYnV0dG9uJ10gfCAvL2lucHV0W0B0eXBlPSdzdWJtaXQnXSIpCiAgICAgICAgc2VsZi5sb2dnZXIuaW5mbyhmIkZvdW5kIHtsZW4oY2xpY2thYmxlX2VsZW1lbnRzKX0gY2xpY2thYmxlIGVsZW1lbnRzLiIpCgogICAgICAgIGZvciBlbGVtZW50IGluIGNsaWNrYWJsZV9lbGVtZW50czoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgc2VsZi5sb2dnZXIuaW5mbyhmIkNsaWNraW5nIG9uIGVsZW1lbnQ6IHtlbGVtZW50LnRleHQgb3IgZWxlbWVudC5nZXRfYXR0cmlidXRlKCduYW1lJykgb3IgZWxlbWVudC5nZXRfYXR0cmlidXRlKCd0eXBlJyl9IikKICAgICAgICAgICAgICAgIGVsZW1lbnQuY2xpY2soKQogICAgICAgICAgICAgICAgc2VsZi5qc19jaGFuZ2VfZGV0ZWN0b3IuY2hlY2tfZm9yX2pzX2NoYW5nZXMoZGVsYXk9ZGVsYXkpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIHNlbGYubG9nZ2VyLmVycm9yKGYiRXJyb3IgY2xpY2tpbmcgZWxlbWVudDoge2V9IikK",
					"AQAAAAAAAAABAAAAAAAAAAAAAABqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAA7BUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 315,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n#s"
					},
					"AwAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "uble"
					},
					"BAAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAgBAAAAAAAAAAAAAAgBAAAAAAAACQEAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " project"
					},
					"CAAAAAkBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAwBAAAAAAAAAAAAAAwBAAAAAAAADQEAAAAAAAAAAAAADQEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAARAQAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " files"
					},
					"BgAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABcBAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEQEAAAAAAAARAQAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABcBAAAAAAAAGAEAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"",
					null,
					"AQAAABgBAAAAAAAAJwEAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGAEAAAAAAAAYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAABgBAAAAAAAAGQEAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGAEAAAAAAAAYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACgBAAAAAAAAKQEAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKAEAAAAAAAAoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"",
					null,
					"AQAAACkBAAAAAAAAOwEAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKQEAAAAAAAApAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "selenium_fuzzer/input_detector.py",
			"settings":
			{
				"buffer_size": 4024,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAbQ8AAAAAAAAAAAAA",
					"FAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7wAAAAAAAADvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"",
					null,
					"AQAAAPAAAAAAAAAAOgEAAAAAAAAAAAAA",
					"EwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8AAAAAAAAADwAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "from selenium.webdriver.support.ui import Select\nfrom selenium.webdriver.remote.webdriver import WebDriver\nfrom selenium.webdriver.remote.webelement import WebElement\nimport logging\nimport time\n\n\nclass DropdownHandler:\n    \"\"\"Handles dropdown menu interactions.\"\"\"\n\n    def __init__(self, driver: WebDriver, js_change_detector):\n        self.driver = driver\n        self.js_change_detector = js_change_detector\n        self.logger = logging.getLogger(__name__)\n\n    def detect_dropdowns(self):\n        \"\"\"Detect all dropdown menus (select elements) on the page.\"\"\"\n        dropdowns = self.driver.find_elements(\"tag name\", \"select\")\n        if not dropdowns:\n            self.logger.warning(\"No dropdown menus detected on the page.\")\n        return dropdowns\n\n    def interact_with_dropdown(self, dropdown: WebElement, delay: int = 1):\n        \"\"\"Iterate through each option in a dropdown menu and interact with it.\"\"\"\n        try:\n            select = Select(dropdown)\n            options = select.options\n            for option in options:\n                select.select_by_visible_text(option.text)\n                self.logger.info(f\"Selected option '{option.text}' in dropdown.\")\n                time.sleep(delay)  # Wait for JavaScript changes or updates\n                # Check for changes using JavaScriptChangeDetector\n                changes = self.js_change_detector.check_for_js_changes()\n                if changes:\n                    self.logger.info(f\"Changes detected: {changes}\")\n        except Exception as e:\n            self.logger.error(f\"Error interacting with dropdown: {e}\")\n\n    def process_div_dropdowns(self, div_id: str, delay: int = 1):\n        \"\"\"Specifically process dropdowns within a given div by ID.\"\"\"\n        try:\n            div = self.driver.find_element(\"id\", div_id)\n            dropdowns = div.find_elements(\"tag name\", \"select\")\n            for dropdown in dropdowns:\n                self.interact_with_dropdown(dropdown, delay)\n        except Exception as e:\n            self.logger.error(f\"Error processing dropdowns in div '{div_id}': {e}\")\n",
			"file": "selenium_fuzzer/dropdownhandler.py",
			"file_size": 2085,
			"file_write_time": 133772241599457862,
			"settings":
			{
				"buffer_size": 2085,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "from selenium.webdriver.support.ui import Select"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"",
					null,
					"AQAAAAAAAAAAAAAAJQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C Single File.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Snippet: ",
				"Snippet: __magic__"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 124.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/jazzer/Work/selenium_fuzzer/selenium_fuzzer/click_analyzer.py",
		"/home/jazzer/Work/selenium_fuzzer/selenium_fuzzer/unhider.py",
		"/home/jazzer/Work/selenium_fuzzer/selenium_fuzzer/exceptions.py",
		"/home/jazzer/Work/selenium_fuzzer/selenium_fuzzer/selenium_driver.py",
		"/home/jazzer/Work/selenium_fuzzer/selenium_fuzzer/logger.py",
		"/home/jazzer/websites/index.html",
		"/home/jazzer/Work/selenium_fuzzer/tests/test_fuzzer.py",
		"/home/jazzer/Work/patches/readme-clickable-elements.patch",
		"/home/jazzer/Work/selenium_fuzzer/selenium_fuzzer.sublime-project",
		"/home/jazzer/Work/patches/fuzzer-class-clickable-elements.patch",
		"/home/jazzer/Work/selenium_fuzzer/.gitignore",
		"/home/jazzer/wifi/gps_to_kml.py",
		"/home/jazzer/Work/fuzzer-test1.py",
		"/home/jazzer/tryhackme/expose/backdoor.jpg",
		"/home/jazzer/tryhackme/christmasctf/christmas.sql",
		"/home/jazzer/wifi/current_location_link.kml",
		"/home/jazzer/Work/fuzzer-advanced-1.py",
		"/home/jazzer/Work/fuzzer-advanced-2.py",
		"/home/jazzer/Work/fuzzer-python-linux.py",
		"/home/jazzer/Work/fuzzer-linux.py",
		"/home/jazzer/opt/gpt-scripts/server-client-test/server.c",
		"/home/jazzer/opt/gpt-scripts/linux-reverse-shell-obuscated.php",
		"/home/jazzer/opt/gpt-scripts/server-client-test/client-linux.c",
		"/home/jazzer/opt/gpt-scripts/server-client-test/http_server.py",
		"/home/jazzer/opt/gpt-scripts/server-client-test/client-windows.c",
		"/home/jazzer/opt/gpt-scripts/server-client-test/client.c",
		"/home/jazzer/opt/gpt-scripts/server-client-test/c2_client_windows.c",
		"/home/jazzer/opt/gpt-scripts/linux-reverse-shell-obuscated.sh",
		"/home/jazzer/opt/gpt-scripts/windows-reverse-cmd-obuscated.php",
		"/home/jazzer/opt/gpt-scripts/https-server.py",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/linux-dropper-encrypted-4.c",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/linux-dropper-encrypted-5.c",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/linux-dropper-encrypted-9.c",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/linux-reverse-shell-obuscated.2.sh",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/server-client-test/server.c",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/server-client-test/client.c",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/server-client-test/c2_client_windows.c",
		"/home/jazzer/opt/gpt-scripts/TEST/windows/windows-dropper-evasion-1.c",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/linux-dropper-encrypted-3.c",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/linux-dropper-encrypted.c",
		"/home/jazzer/opt/gpt-scripts/linux-reverse-python.py",
		"/home/jazzer/opt/gpt-scripts/windows-reverse-python.py",
		"/home/jazzer/opt/vmware-host-modules-w17.5.1/README",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/meterpreter-2.rb",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/meterpreter.rb",
		"/home/jazzer/opt/gpt-scripts/TEST/linux/linux-dropper-encrypted-2.c",
		"/home/jazzer/opt/gpt-scripts/dropper-windows-c-evasion.c",
		"/home/jazzer/opt/gpt-scripts/linux-main-shell-php.php",
		"/home/jazzer/opt/gpt-scripts/linux-main-shell-c.c",
		"/home/jazzer/opt/gpt-scripts/linux-main-shell-sh.sh",
		"/home/jazzer/opt/gpt-scripts/windows-reverse-cmd.c",
		"/home/jazzer/opt/gpt-scripts/dropper-linux-c-evasion.c",
		"/home/jazzer/opt/gpt-scripts/dropper-linux-c-evasion.2.c",
		"/home/jazzer/opt/gpt-scripts/linux/revers-php-evasion.php",
		"/home/jazzer/opt/gpt-scripts/linux-command-injection.c",
		"/home/jazzer/opt/gpt-scripts/reverse-python-linux-evade.py",
		"/home/jazzer/opt/gpt-scripts/linux-reverse-shell-evanasion-2.c",
		"/home/jazzer/opt/gpt-scripts/linux/reverse-shell-linux-poly.sh",
		"/home/jazzer/opt/gpt-scripts/windows/powershell-reverse-evasion.bat",
		"/home/jazzer/opt/gpt-scripts/reverse-shell-windows-evade.cpp",
		"/home/jazzer/opt/gpt-scripts/linux-command-injection.sh",
		"/home/jazzer/opt/gpt-scripts/revers-php-evasion.php",
		"/home/jazzer/opt/gpt-scripts/reverse-php-windows-evade.php",
		"/home/jazzer/opt/gpt-scripts/reverse-shell-linux-evade-metasploit-2",
		"/home/jazzer/opt/gpt-scripts/revershell.php",
		"/home/jazzer/opt/gpt-scripts/powershell-reverse-evasion.bat",
		"/home/jazzer/.zshrc"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"dom",
			"chromedriver",
			"chrome",
			"select_fields_to_fuzz()",
			"197",
			"192",
			"config",
			"inet_pton",
			"seccess"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3607,
						"regions":
						{
						},
						"selection":
						[
							[
								3607,
								3607
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "LICENSE",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1553,
						"regions":
						{
						},
						"selection":
						[
							[
								1513,
								1528
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "CONTRIBUTING.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2041,
						"regions":
						{
						},
						"selection":
						[
							[
								282,
								282
							]
						],
						"settings":
						{
							"auto_name": "# Contributing to Selenium Fuzzer",
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 667,
						"regions":
						{
						},
						"selection":
						[
							[
								98,
								98
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "requirements.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17,
						"regions":
						{
						},
						"selection":
						[
							[
								17,
								17
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7085,
						"regions":
						{
						},
						"selection":
						[
							[
								3580,
								3580
							]
						],
						"settings":
						{
							"auto_name": "from selenium_fuzzer.fuzzer import Fuzzer",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "selenium_fuzzer/js_change_detector.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9334,
						"regions":
						{
						},
						"selection":
						[
							[
								2619,
								2619
							]
						],
						"settings":
						{
							"auto_name": "import logging",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "selenium_fuzzer/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 112,
						"regions":
						{
						},
						"selection":
						[
							[
								112,
								112
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "selenium_fuzzer/config.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 343,
						"regions":
						{
						},
						"selection":
						[
							[
								343,
								343
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "selenium_fuzzer/utils.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3306,
						"regions":
						{
						},
						"selection":
						[
							[
								3306,
								3306
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "selenium_fuzzer/fuzzer.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5612,
						"regions":
						{
						},
						"selection":
						[
							[
								5612,
								5612
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 315,
						"regions":
						{
						},
						"selection":
						[
							[
								194,
								194
							]
						],
						"settings":
						{
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "selenium_fuzzer/input_detector.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4024,
						"regions":
						{
						},
						"selection":
						[
							[
								309,
								309
							],
							[
								314,
								314
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "selenium_fuzzer/dropdownhandler.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2085,
						"regions":
						{
						},
						"selection":
						[
							[
								195,
								195
							]
						],
						"settings":
						{
							"auto_name": "from selenium.webdriver.support.ui import Select",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 132.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/C++/C Single File.sublime-build",
	"project": "selenium_fuzzer.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 250.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
